<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>20171102笔记-Datastore反注册工具</title>
    <url>/2017/11/02/65428.html</url>
    <content><![CDATA[<p>昨天没事又开始捣鼓ArcGIS Enterprise，谁知在启用地理大数据分析功能是，提示没有大数据存储，也就是说ArcGIS Datastore没有开启这个存储功能。</p>
<span id="more"></span>
<p>然后去server里看了一下，果然没有，想着注册一下应该就可以，但是在操作过程中却显示已经注册过，好生奇怪，我隐约也记得之前安装的时候关系型、切片和大数据都勾选过，不知为何突然消失了。<br>最后的解决方法是使用ArcGIS Datastore安装目录下的X:\arcgis\ArcGIS\DataStore\tools的unregisterdatastore.bat工具，进行反注册操作，取消之前的大数据注册<br><img src="/images/110201.jpg" alt="ArcGIS Datastore"><br>接下来再次进行大数据注册就可以正常进行了。</p>
]]></content>
      <categories>
        <category>ArcGIS</category>
      </categories>
      <tags>
        <tag>ArcGIS</tag>
        <tag>ArcGIS Datastore</tag>
      </tags>
  </entry>
  <entry>
    <title>ArcGIS Enterprise中Portal发布场景服务后无法查看</title>
    <url>/2019/04/25/56554.html</url>
    <content><![CDATA[<p>大家都知道ArcGIS现在整个产品体系特别庞大，以我来看，个人是不能将所有的产品学到精通的，毕竟整个产品已经年近五旬，积累沉淀的东西非一人所能穷尽的。<br>现在就说一下ArcGIS Enterprise，俗称”ArcGIS 全家桶“套餐，为什么这么叫呢，因为之前这个系统有多个组件。ArcGIS Enterprise 在是在10.5版本以后才叫这个名字的，算是一个统称，包括了Portal Server Datastore Webadaptor，所以需要一个个组件安装，并且有一定的部署顺序，如果不太熟悉这个流程，好不容易在漫长的安装过程之后，出现令人崩溃的不能用，排查问题的时候又很困难，所以，目前这套系统再生产环境中需要Esri官方技术人员现场部署，以保证系统的安全。</p>
<span id="more"></span>
<p>人生就是两字—“折腾”！<br>这不，ArcGIS 10.5.1版本才发布，就跃跃欲试升级。枪打出头鸟，果然有大坑，顺利安装完成后，在Portal中添加一个slpk场景包，却发现一直不成功，<br><img src="/images/090805.png" alt="无法添加服务"><br>或者是这样<br><img src="/images/090806.png" alt="场景服务缺少根节点"><br>在server日志中看到如下记录：<br><img src="/images/090801.png" alt="server日志"><br>在发布场景时，场景数据会存到托管server的datastore中，创建服务需要Couchdb数据库，问题就出在这，datastore中Couchdb无法创建数据库，场景就发布不了。<br>对于这个问题，我开始以为是datastore没有安装配置好，严格统一了一下证书，然后在server管理页面中解除注册，再重新配置，但是这样不行。仍然是同样的问题。没办法，将datastore卸载重装，不行。。。<br>最后，索性将整套ArcGIS Enterprise全家桶重装了一遍，还是不行，杯具呀。。。<br>后来发现同事也遇到这个问题，紧接着，用户也出现了，看来这不是我的系统环境或者安装部署问题，当天给用户远程了一下，还是没有解决，好在用户说现在只是测试，没在生产环境中正式部署。这真是绝望的时刻。<br>最后，终于在公司服务器里的技术文档，找到类似问题的解决方案。<br>详情见：<a href="http://note.youdao.com/share/?token=5CE037BAD8AA47C2A0FE718DB10A588A&gid=41919611#/">1887问题解决方案</a><br>该作者的解决方法惊为天人，一般人真是想不到。。。<br>问题最终算是解决了，具体的原因不得而知，但是知道问题出在Couchdb这块，很是诡异，希望在下个版本能够解决。<br>好消息是：从10.5.1开始，Esri发布了一个一键安装程序，大大简化安装流程。</p>
<p>——————————————-++————————————————————</p>
<p>还有个问题是：在10.5中上传之前Pro（1.4版本）打包或者是smart3D导出的spk，Portal会显示如下问题<br><img src="/images/090802.jpg" alt="spk包上传"><br>这里显示上传的不是有效的包。<br>解决的方法很简单，实际spk就是个压缩包，直接用解压文件解压，会看到里面包含的文件<br><img src="/images/090803.jpg" alt="解压spk包"><br>美国Esri官方给的解决方法是：使用7zip软件，将其重新打包，设置如下，然后再上传就可以了<br><img src="/images/090804.jpg" alt="spk包重新压缩"></p>
]]></content>
      <tags>
        <tag>ArcGIS Enterprise</tag>
        <tag>Portal</tag>
        <tag>三维场景</tag>
      </tags>
  </entry>
  <entry>
    <title>2019全2020初</title>
    <url>/2020/01/10/47817.html</url>
    <content><![CDATA[<p>今年真是忙的不行呀，暂且开个头。。。<br>呆在贵阳一个多月，一个人住着100多平的房子，每天单调的生活，明天飞回北京，想念想见的人，想见却不能相见的人（时间依然不能让我忘却，所以给自己3年的时间），想念北京的暖气。。。</p>
]]></content>
  </entry>
  <entry>
    <title>2020年？？</title>
    <url>/2020/05/09/14675.html</url>
    <content><![CDATA[<p>2020年，什么时候该开始？什么时候又该翻篇呢？</p>
]]></content>
  </entry>
  <entry>
    <title>A Star算法实现最短路径查找【python】</title>
    <url>/2020/12/07/55752.html</url>
    <content><![CDATA[<p>这段时间用python实现A Star（也叫A*,A星算法），翻了不少博客论坛，发现A星算法大都用在游戏开发的路径移动中，并且都是基于马赛克方格寻找，与我想要实现的实际路段有所不同，不过思想都是大差不差的，数据结构有些许差异。<br>这里先起个头。。。<br>先放个最终实现效果图<br><img src="/images/2020120701.jpg" alt="效果图"><br>==========</p>
]]></content>
  </entry>
  <entry>
    <title>ArcGIS Desktop（ArcMap）10.6、ArcGIS Engine 10.6和ArcGIS Pro2.1无法 打开ECW文件</title>
    <url>/2018/02/11/46502.html</url>
    <content><![CDATA[<p>新年伊始，万象更新，Esri也推出了全新产品版本。美国时间2018年1月17日，<a href="http://zhihu.esrichina.com.cn/article/3610">ArcGIS 10.6正式面向用户发布！</a></p>
<p>新特性吸引了不少用户，都开始纷纷尝鲜新版本。</p>
<p>近期相继收到QQ群、用户电话反馈:ECW影像文件在10.6中打不开，之前版本正常打开。<br><img src="/images/18021102.jpg" alt="ECW文件"><br>于是搜官方BUG，果然找到近期更新的问题<a href="https://support.esri.com/en/download/7583">ArcGIS (Desktop, Engine) 10.6 ECW Patch</a>。</p>
<p>原因是：ArcGIS中打开ECW文件，需要第三方库，这个库需要Hexagon（海克斯康）的授权更新，导致在10.6发布的预定时间仍没有获得授权许可，因此在10.6中该库就没有被集成到里面，当然就打不开了。</p>
<p>好在近期Esri已经接到该授权更新，并及时发布了ArcGIS Desktop 10.6和ArcGIS Engine 10.6 的ECW补丁。</p>
<p>装完相应的补丁后，就可以正常打开ECW文件了。<br><img src="/images/18021101.jpg" alt="ECW文件"></p>
<p>补丁下载地址：<a href="https://support.esri.com/en/download/7583">https://support.esri.com/en/download/7583</a></p>
<p>ArcGIS Pro的补丁还需要等一段时间，估计就在近期了，可以关注以上下载地址。</p>
<p>Esri官方会在2018第二季度新发布的版本中解决这个BUG。</p>
]]></content>
      <categories>
        <category>GIS</category>
      </categories>
      <tags>
        <tag>ArcGIS</tag>
        <tag>ECW影像</tag>
      </tags>
  </entry>
  <entry>
    <title>ArcGIS Pro发布服务时出现“检查共享流程状态失败”错误( Failed to check sharing process status)</title>
    <url>/2017/12/02/11059.html</url>
    <content><![CDATA[<p>从1.3版本开始接触ArcGIS Pro，流畅的64位原生应用程序，靓丽的ribbon界面，二三维一体的极致体验，让我们看到变革的时候到来，传统的桌面使用相信现正在迁移过来，并且也在吸引大量新使用者。<br><img src="/images/120201.jpg" alt="ArcGIS Pro"></p>
<span id="more"></span>
<p>但是我的机器在使用ArcGIS Pro发布服务时，总是出现Failed to check sharing process status，中文为：“检查共享流程状态失败”错误，从1.3，1.4，1.4Alpha4,2.0,2.0.1依然是这样。<br><img src="/images/120202.jpg" alt="Failed to check sharing process status"><br>虽然状态检查失败，但并不影响服务发布，最后在Portal中都是可以看到发布成功的服务<br>开始我以为是软件没安装好，或者是Portal的配置有问题。于是尝试向ArcGIS Online上发布，还是同样的报错。<br>后来通过与同事以及美国Esri Support的沟通，他们提供了一个官方帮助文档链接<a href="http://pro.arcgis.com/zh-cn/pro-app/help/sharing/overview/sharing-job-status.htm">http://pro.arcgis.com/zh-cn/pro-app/help/sharing/overview/sharing-job-status.htm</a><br>里面说到”可在 C:\Users&lt;USERPROFILE&gt;\AppData\Local\ESRI\ArcGISPro\Staging\SharingProcesses 中找到状态报告“<br>我按照自己用户名路径<br>C:\Users\Esri\AppData\Local\ESRI\ArcGISPro\Staging\SharingProcesses<br>然而并没有该路径的文件夹，也就是说出现这个报错，是因为ArcGIS Pro没有找到状态日志文件，那么日志写到哪去了呢？<br>通过文件夹搜索，最后找到了存储日志状态的文件夹。<br>路径为<br>C:\Users\Esri\ArcGISPro\AppData\Local\Esri\Staging\SharingProcesses<br><img src="/images/120203.jpg" alt="日志文件"></p>
<p>到此，我们可以总结一下：当通过ArcGIS Pro发布服务时，状态日志并没有写到官方文档提到的C:\Users\esri\AppData\Local\ESRI\ArcGISPro\Staging\SharingProcesses路径下，却莫名其妙地写到C:\Users\Esri\ArcGISPro\AppData\Local\Esri\Staging\SharingProcesses里，对比一下两个路径，深度一致，可以看到ArcGISPro这个文件夹位置不同。从报错来看，ArcGIS Pro读取日志文件状态可能是按照官方文档说的路径。</p>
<p>因此，报错的机理算是找到了，但是为什么会造成路径不同呢？</p>
<p>美国Esri Support给出的建议是：新建一个操作系统账户，使用该账号登录系统，然后再发布服务看看是否还报错。<br>果然老美的尝试建议是没问题，不会再报错，日志写到正常的路径下。<br>然后老美解释是因为操作系统账户是corrupt user profile，这里我不知道如何翻译，但是问题在我的机器上并没有解决，不能为了这个问题，换一个操作系统账户。</p>
<p>想了许久这个问题。有以下猜想：<br>我的操作系统用户名是esri，ArcGIS Pro在安装的时候，会初始化用户路径，本来esri这个词是ArcGIS软件中关键字，就好比编写程序的变量名不能与该语言内设的关键字冲突一样。<br>所以ArcGIS Pro初始化状态日志路径出现了混乱现象。</p>
<p>上面说了那么多，问题始终可能会存在，那么有没有可行的解决方案呢？<br>经过多次尝试，答案是有的。</p>
<p>首先我尝试修改操作用户名，但貌似没什么用。网上说还需要修改对应用户名的注册表，感觉这么做有些风险，所以就放弃了。</p>
<p>好的，说到本质上来：就是找不到预设路径下的日志文件所致。那么为何不自己创建一个路径呢，然后将C:\Users\Esri\ArcGISPro\AppData\Local\Esri\Staging路径下的文件都实时同步过来。</p>
<p>这里就不得不提到曾经遇到的系统盘瘦身方案，利用windows自带的mklink命令，可以实现将默认C盘安装的应用程序文件（Adobe 全家桶）迁移到其他盘，程序仍然可以正常使用。</p>
<p>方案就这么形成了，<br>首先将C:\Users\Esri\ArcGISPro\AppData\Local\Esri中的Staging文件夹剪切到C:\Users\esri\AppData\Local\ESRI\ArcGISPro下，然后以管理员的身份打开cmd窗口<br>输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mklink /J &quot;C:\Users\esri\AppData\Local\ESRI\ArcGISPro\Staging&quot; &quot;C:\Users\Esri\ArcGISPro\AppData\Local\Esri\Staging&quot;</span><br></pre></td></tr></table></figure>
<p>然后会出现提示为”C:\Users\esri\AppData\Local\ESRI\ArcGISPro\Staging &lt;&lt;===&gt;&gt;C:\Users\Esri\ArcGISPro\AppData\Local\Esri\Staging”创建的联接<br>由于我已经链接过了，所以会有如下提示。实际这里就相当于在C:\Users\Esri\ArcGISPro\AppData\Local\Esri下放了C:\Users\esri\AppData\Local\ESRI\ArcGISPro中Staging文件夹的快捷方式，即文件夹的软连接，用过linux系统应该比较熟悉<br><img src="/images/120204.jpg" alt="cmd"><br>接着用Pro发布一个服务试试，果然久未谋面的成功状态出现了。<br><img src="/images/120205.jpg" alt="发布成功"></p>
<p>这个问题从用户来说，解决方法是避免使用esri这个操作系统用户名<br>从ArcGIS Pro开发者来看，尽早修复这个程序逻辑问题应该是最终解决之道。</p>
<p>突然想到一个搞笑案例，分享一下<br>“<br>调试一段有关用户名的程序，上午测试的时候还好好的，下午测试老是获取到null，怎么找都找不到原因，后来后台的哥们说他把用户名改成了“null”，嗯，现在坟头的草一丈多了。<br>”</p>
]]></content>
      <categories>
        <category>GIS</category>
      </categories>
      <tags>
        <tag>ArcGIS Pro</tag>
      </tags>
  </entry>
  <entry>
    <title>ArcGIS ModelBuilder的工作空间（workspace)设置问题</title>
    <url>/2016/11/18/56001.html</url>
    <content><![CDATA[<p>今天和同事调试了一个用户发来的ModelBuilder，咋一看,模型做得还好呀，每个工具的调用和参数设置都很有逻辑<br><img src="/images/111801.jpg" alt="ArcGIS ModelBuilder,workspace"><br>但是一点击运行后，<span id="more"></span>在第一步模型就运行失败了<br><img src="/images/111802.jpg" alt="ArcGIS ModelBuilder,workspace"><br>原来用户使用的是相对引用路径，但是路径中存在gdb，而工作空间中默认也是在gdb下，所以一个路径中同时出现两个gdb，数据存不了，当然无法运行了。<br>由于模型中用户都是这么写的，有很多处，所以只有修改模型的环境参数了，先打开模型属性<br><img src="/images/111803.jpg" alt="ArcGIS ModelBuilder,workspace"><br>点击环境选项卡，勾选Workspace选项，点击下面的Values..<br><img src="/images/111804.jpg" alt="ArcGIS ModelBuilder,workspace"><br>设置Scratch Workspace路径，<br><img src="/images/111805.jpg" alt="ArcGIS ModelBuilder,workspace"><br>确定后点击运行，成功！<br><img src="/images/111806.jpg" alt="ArcGIS ModelBuilder,workspace"><br>但是高兴太早，一般使用模型很少会点开编辑界面运行，会直接双击，像GP工具使用，里面都是黑箱了<br>双击工具，点击OK<br><img src="/images/111807.jpg" alt="ArcGIS ModelBuilder,workspace"><br>果然高兴太早，在最后一步出现问题，又同时一个路径中出现两个gdb<br><img src="/images/111808.jpg" alt="ArcGIS ModelBuilder,workspace"><br>这时心里想，不对呀，工作空间（workspace)的路径不是已经改了么，怎么不管用呢<br>和同事琢磨半天，最后发现双击模型工具后，点击界面下方的环境设置<br><img src="/images/111809.jpg" alt="ArcGIS ModelBuilder,workspace"><br>发现路径还是原先的默认带有gdb的路径，<br><img src="/images/111810.jpg" alt="ArcGIS ModelBuilder,workspace"><br>但是为什么前面的几步都运行成功了呢？遂再次陷入沉思<br>后才明白，我们把输出结果路径作为模型工具的界面参数，<br><img src="/images/111811.jpg" alt="ArcGIS ModelBuilder,workspace"><br>造成了前面会使用我们修改的模型环境路径，输出结果路径去依然使用该模型工具界面的环境参数路径。<br>于是将结果路径在模型编辑中去掉作为界面参数的设置<br><img src="/images/111812.jpg" alt="ArcGIS ModelBuilder,workspace"><br>再双击模型，完美运行！<br><img src="/images/111813.jpg" alt="ArcGIS ModelBuilder,workspace"><br><img src="/images/111814.jpg" alt="ArcGIS ModelBuilder,workspace"><br>这里不得不提一下ArcGIS ModelBuilder的工作空间（workspace)设置问题，模型属性的环境变量参数设置在模型使用界面中无效，造成后续的参数再次调整，有些不太方便，但不是大的问题。</p>
]]></content>
      <categories>
        <category>GIS</category>
      </categories>
      <tags>
        <tag>GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>ArcGIS Server集群部署问题和注意事项</title>
    <url>/2017/05/16/48872.html</url>
    <content><![CDATA[<p><font size=4><b>1、关于集群部署</b></font><br>（1）确保集群所有计算机的主DNS后缀相同；<br>![主DNS后缀相同](/images/ArcGIS Server 1.jpg)</p>
<span id="more"></span>
<p>（2）尽量保持相同硬件配置、操作系统版本；<br>（3）每台机器拥有相同的盘符；<br>（4）相同的Server操作系统账户名和密码；<br>（5）确保机器之间能够互相ping通；<br>（6）局域网没有DNS解析的话，每台都需要做机器间的【IP - 带DNS后缀的计算机全名】映射， 使得机器间通过域名可以互相访问。</p>
<p><font size=4><b>2、关于集群管理</b></font><br>（1）如果集群中某台机器的server坏掉或者宕机，要及时将其从集群中去除，不然影响集群的稳定性和访问速度；<br>（2）通过server的日志阅读，可以了解集群的运行状况。</p>
<p><font size=4><b>3、关于server集群共享文件夹</b></font><br>（1）当我们部署server集群时，需要建立一个共享文件夹，然后所有的server机器都能有权限访问；<br>（2）对于共享文件夹的安全问题，可以对共享的文件夹作如下设置。<br>就是说，该文件夹只会共享给server安装时创建的系统账户ArcGIS Server Account，其他操作系统账户或者其他机器均没有权限进行访问，保证了该文件夹的安全性。<br>![共享文件夹](/images/ArcGIS Server 2.jpg)</p>
]]></content>
      <categories>
        <category>GIS</category>
      </categories>
      <tags>
        <tag>GIS</tag>
        <tag>ArcGIS Server</tag>
        <tag>集群部署</tag>
        <tag>问题</tag>
        <tag>注意事项</tag>
      </tags>
  </entry>
  <entry>
    <title>ArcGIS 全家桶（ArcGIS Enterprise）---Linux安装笔记</title>
    <url>/2017/06/19/19484.html</url>
    <content><![CDATA[<p><font size=4><b>安装环境</b></font><br>软件：<br>操作系统—Redhat 7.2 64位<br>安装版本—ArcGIS 10.5<br>硬件：<br>VMware Pro 12.0虚拟环境<br>双核CPU<br>4G内存<br>PS：强烈建议高于这个配置</p>
<p><font size=4><b>安装过程笔记</b></font></p>
<p><b>安装前基础知识</b><br>su为超级用户<br>su – user为某一用户的超级权限<br>vi /etc/hosts 为编辑文件命令，进入文本编辑页面后，输入i插入开始编辑，输入O表示在当前行插入。编辑完之后，按ESC停止编辑，依次输入:wq表示退出<br>cat /etc/hosts表示在命令行界面查看文件<br>ll表示查看当前目录下的文件<br>ls –l与ll相同<br>cp /home/test.ecp /arcgis 表示test.ecp文件复制到arcgis目录下<br>mkdir /mnt/cdrom ////确认是否有该目录，没有的话，新建目录<br>mount /dev/cdrom /mnt/cdrom ////将光驱挂载到/mnt/cdrom下</p>
<span id="more"></span>
<p><b>安装前准备</b></p>
<p>1、关闭防火墙并关闭开机启动<br>root用户下<br>systemctl stop firewalld.service  ///关闭防火墙<br>systemctl disable firewalld.service ////关闭防火墙开机启动<br>systemctl status firewalld.service  ////查看防火墙状态<br>2、创建server用户组和用户<br>groupadd esrichina   ////添加用户组<br>useradd –g esrrichina –m arcgis   ////在esrichina下添加arcgis用户<br>passwd arcgis  ////为arcgis用户创建密码<br>3、获取机器IP<br>Ifconfig  //inet后面就是IP地址<br>4、修改机器名hostname和hosts文件<br>Vi /etc/hostname  //打开hostname文件修改编辑,也可用hostnamectl set-hostname agsenterprise直接修改<br>Agsenterprise<br>Vi /etc/hosts   ////添加如下行<br>192.168.122.1 agsenterprise.esrichina.com agsenterprise<br>hostname 获取机器名<br>hostname  –f 获取全限定域名<br>5、复制安装文件到arcgis目录下，解压并获取权限<br>tar –zxvf ArcGISServer.tar.gz ///解压server安装包到当前目录<br>chown –R arcgis:esrichina arcgisserver/    ///获取server安装目录的权限到esrichina组下的arcgis<br>chmod –R 755 arcgisserver/   ///开启755权限</p>
<p><b>正式安装</b><br>6、安装server<br>首先编辑limits.conf文件<br>vi  /etc/security/limits.conf<br>添加如下四行<br>arcgis soft nofile 65535<br>arcgis hard nofile 65535<br>arcgis soft nproc 25059<br>arcgis hard nproc 25059<br>切换至arcgis用户下<br>su – arcgis<br>测试安装环境<br>./ArcGISServer/serverdiag/serverdiag<br>如果没报错就可以开始正式安装server了<br>cd ArcGISServer/    /////切换至ArcGISServer目录下<br>./Setup –m console<br>然后按着安装时的提示进行安装<br>装完之后会提示授权，这是要注意<br>授权时注意授权文件的权限，必须是server用户下有足够的权限，如果不够，可以使用如下命令<br>chown –R arcgis:esrichina arcgisserver105all.ecp //权限转到server用户组下的arcgis用户<br>chmod –R 755 arcgisserver105all.ecp  //权限设为755<br>7、安装Datastore<br>安装前先在etc/sysctl.conf文件单行参数<br>echo ‘vm.max_map_count=262144’ &gt;&gt; /etc/sysctl.conf<br>echo ‘vm.swappiness=1’ &gt;&gt; /etc/sysctl.conf<br>是上述修改内核的参数生效<br>/sbin/sysctl –p  ///从指定的文件加载系统参数，如不指定即从/etc/sysctl.conf中加载<br>同样是诊断安装环境<br>./ArcGISDataStore_Linux/datastorediag/datastorediag<br>开启静默安装<br>./Setup –m silent -1 Yes<br>安装成功后即可配置<br>8、 安装Portal<br>首先需要安装dos2unix，Dos2unix软件包包括工具dos2unix 和 unix2dos，用于将纯文本文件在DOS或Mac格式与Unix格式之间相互转换<br>在线环境下，使用如下命令行即可安装<br>Yum install dos2unix<br>离线环境下使用离线安装包（dos2unix-7.3.4.tar.gz）安装<br>tar –zxvf dos2unix-7.3.4.tar.gz<br>./configure<br>make<br>make install<br>诊断环境<br>./PortalForArcGIS/portaldiag/portaldiag<br>诊断无误后，使用交互安装<br>./Setup –m console<br>安装完后进行配置新portal站点<br>9、配置Web adaptor<br>安装Java的SDK环境<br>解压SDK包jdk-8u131-linux-x64.tar.gz<br>Tar –zxvf jdk-8u131-linux-x64.tar.gz<br>Mv mv jdk1.8.0_111/ jdk8  ////将jdk1.8.0_111/文件夹下的文件复制到jdk文件夹下<br>编辑/etc/profile文件<br>JAVA_HOME=/home/jdk8<br>CLASSPATH=.:$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/tools.jar<br>PATH=$JAVA_HOME/bin:$PATH<br>export JAVA_HOME CLASSPATH PATH<br>然后使用以下命令，使得上述配置生效<br>source /etc/profile<br>测试安装配置<br>java –version<br>出现版本信息即为正确安装<br>安装tomcat<br>-解压和复制文件<br>tar –zxvf apache-tomcat-8.0.32.tar.gz<br>mv apache-tomcat-8.0.32 tomcat8<br>创建私钥和秘钥请求<br>openssl req -newkey rsa:2048 -nodes -keyout /home/tomcat8/ssl/agsenterprise.key -x509 -days 365 -out /home/tomcat8/ssl/agsenterprise.crt<br>然后按照提示输入参数<br>创建自签名证书<br>openssl pkcs12 -inkey /home/tomcat8/ssl/agsenterprise.key -in /home/tomcat8/ssl/agsenterprise.crt -export -out /home/tomcat8/ssl/agsenterprise.pfx<br>修改Tomcat的server.xml文件<br>vi tomcat8/conf/server.xml<br>修改8080端口为80</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;Connector port=&quot;80&quot; protocol=&quot;HTTP/1.1&quot;</span><br><span class="line">           connectionTimeout=&quot;20000&quot;</span><br><span class="line">           redirectPort=&quot;443&quot; /&gt;</span><br></pre></td></tr></table></figure>
<p>取消端口号8443对应的connector的注释，将8443端口修改为443，并启用ssl。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;Connector port=&quot;443&quot; protocol=&quot;org.apache.coyote.http11.Http11NioProtocol&quot;</span><br><span class="line">           maxThreads=&quot;150&quot; SSLEnabled=&quot;true&quot; scheme=&quot;https&quot; secure=&quot;true&quot;</span><br></pre></td></tr></table></figure>           clientAuth="false" sslProtocol="TLS" keystoreFile="/home/tomcat8/ssl/agsenterprise.pfx" keystoreType="pkcs12" keystorePass="Super123" />
<p>启动tomcat<br>cd tomcat8/bin/<br>./startup.sh<br>使用https:// agsenterprise.esrichina.com验证Tomcat是否正常开启<br>10、安装webadaptor<br>./Setup –m silent -1 Yes<br>分别部署名为server和arcgis的webadaptor到Tomcat下<br>cp /home/arcgis/webadaptor10.5/java/arcgis.war /home/tomcat8/webapps/arcgis.war<br>cp /home/arcgis/webadaptor10.5/java/arcgis.war /home/tomcat8/webapps/server.war<br>对portal配置webadaptor<br>cd webadaptor10.5/java/tools/<br>./configurewebadaptor.sh -m portal -w <a href="https://agsenterprise.esrichina.com/arcgis/webadaptor">https://agsenterprise.esrichina.com/arcgis/webadaptor</a> -g <a href="https://agsenterprise.esrichina.com:7443/">https://agsenterprise.esrichina.com:7443</a> -u portaladmin -p Super123<br>./configurewebadaptor.sh -m portal -w <a href="https://agsenterprise.esrichina.com/server/webadaptor">https://agsenterprise.esrichina.com/server/webadaptor</a> -g <a href="https://agsenterprise.esrichina.com:6443/">https://agsenterprise.esrichina.com:6443</a> –u server -p Super123<br>11、server与portal联合和托管<br>12、统一更新server和portal的证书<br>Server<br>导航至 machines -&gt; Machines下机器名，如AGSENTERPRISE.ESRICHINA.COM -&gt; sslcertificates，点击importExistingServerCertificate。输入agsenterprise.pfx的路径和密码，设置证书别名，点击 Submit。<br>返回至Machines - 机器名即Machine - AGSENTERPRISE.ESRICHINA.COM页面，点击edit。<br>在Edit Machine页面上，，设置 Web server SSL Certificate的值为步骤2中的证书别名如 agsenterprise以引用上述证书，点击 Save Edits。<br>Portal<br>导航至 security -&gt; sslCertificates，点击importExistingServerCertificate。输入agsenterprise.pfx的路径和密码，设置证书别名，点击 import。<br>在 sslCertificate 页面上点击 Update。<br>在 Update Web Server Certificate 页面上，输入步骤2中的证书别名引用上述证书，点击 Update。</p>
<p>最终在IE等浏览器中将证书安装到计算机的受信任的根证书颁发机构。</p>
]]></content>
      <tags>
        <tag>ArcGIS Enterprise</tag>
        <tag>ArcGIS Server</tag>
        <tag>Linux</tag>
        <tag>ArcGIS Portal</tag>
        <tag>安装</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>ArcGIS专题图边框花纹制作</title>
    <url>/2016/10/27/41204.html</url>
    <content><![CDATA[<p>之前在呼市培训碰到有个学员问到怎么设置ArcGIS专题图的边框花纹，一直觉得这个花哨，没必要去设计，上周末去地坛公园玩，看到墙上的画都有花纹边框，感觉很美观<span id="more"></span><br><img src="/images/102719.jpg" alt="ArcGIS专题图边框花纹制作"><br>现在有时间尝试了一下实现过程，如下：<br>原始专题图如下<br><img src="/images/10277.jpg" alt="ArcGIS专题图边框花纹制作"><br>1、在布局视图下，右击数据框属性；<br><img src="/images/10278.jpg" alt="ArcGIS专题图边框花纹制作"><br>2、在Frame选项卡下，按如下红框操作，<br><img src="/images/10279.jpg" alt="ArcGIS专题图边框花纹制作"><br>3、打开符号选择器，点击符号编辑<br><img src="/images/102710.jpg" alt="ArcGIS专题图边框花纹制作"><br>4、点击左下角“+”，添加一个符号图层<br><img src="/images/102711.jpg" alt="ArcGIS专题图边框花纹制作"><br>5、选择Marker Line Symbol<br><img src="/images/102712.jpg" alt="ArcGIS专题图边框花纹制作"><br>6、点击”Marker Line”下的Symbol<br><img src="/images/102713.jpg" alt="ArcGIS专题图边框花纹制作"><br>7、再次点击符号编辑<br><img src="/images/102714.jpg" alt="ArcGIS专题图边框花纹制作"><br>8、选择Picture Marker Symbol,选择最开始的地坛公园照片的花纹（用Photoshop抠图，也可以自己在网上找一些花纹素材）<br><img src="/images/102715.jpg" alt="ArcGIS专题图边框花纹制作"><br>9、点击三次确定后，回到最初的符号制作界面，调整Template下的参数，设置花纹的排列间距<br><img src="/images/102716.jpg" alt="ArcGIS专题图边框花纹制作"><br>10、然后为了让花纹有一个黑底，将下层的线加粗即可<br><img src="/images/102717.jpg" alt="ArcGIS专题图边框花纹制作"><br>11、然后多次点击确认，得到黑底的花纹效果<br><img src="/images/102718.jpg" alt="ArcGIS专题图边框花纹制作"></p>
<p>实际ArcGIS专题图边框花纹制作也就是符号制作，通过不同符号的堆叠和参数细节设置，都可以实现所要求的结果</p>
<p>PS：原谅我的审美，素材不是太好，只是做了尝试，大家可以找一些比较美观的花纹素材。</p>
]]></content>
      <categories>
        <category>GIS</category>
      </categories>
      <tags>
        <tag>GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>ArcGIS中使用字段计算器创建日期序列字段</title>
    <url>/2017/01/13/15006.html</url>
    <content><![CDATA[<p>当我们有一些空间数据，想通过动画的形式展示，可以在ArcGIS中的时间滑块工具实现。如果图层要开启时间属性，得有日期类型字段，所以首先需要创建相应字段。<br>如果我们对要素的先后顺序没有要求，可以通过字段计算器快速生成自增型日期，实际之前我已经写过字段自增的博文<a href="http://zyouzz.me/2017/01/05/1288.html">ArcGIS中使用字段计算器生成随机数和自增数</a><br>这里我是在ArcGIS Pro中实现，（可以看到ArcGIS Pro中不在支持VB语法，只支持python了）</p>
<span id="more"></span>
<p><img src="/images/01131.jpg" alt="字段计算器"><br>代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime<span class="comment">#导入时间模块</span></span><br><span class="line">dinterval=datetime.datetime.now()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">timen</span>():</span><br><span class="line">    <span class="keyword">global</span> dinterval</span><br><span class="line">    dinterval=dinterval+datetime.timedelta(days=<span class="number">1</span>)<span class="comment">#自增1天</span></span><br><span class="line">    <span class="keyword">return</span> dinterval</span><br></pre></td></tr></table></figure>
<p>生成结果如下：<br><img src="/images/01132.jpg" alt="生成结果"></p>
]]></content>
      <categories>
        <category>GIS</category>
      </categories>
      <tags>
        <tag>GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>ArcGIS中多个字段同时渲染</title>
    <url>/2017/03/22/15901.html</url>
    <content><![CDATA[<p>今天群里有个人问到：怎样对一个图层的多个属性字段同时渲染。当时确实有些懵，因为之前基本只对一个属性字段进行符号配置显示，所以无从着手，想到用多个图层同时表示，但是不行，顿时感觉没办法了，下班后，忙完其他的事后，还是不死心，于是又尝试了一下，果然，问题居然很简单的就解决了！</p>
<p><font size=6>一、造数据</font></p>
<p>首先我造了一些数据。<br>现在我手上有一个全国各主要城市的空气质量数据，里面有AQI、二氧化硫、臭氧、二氧化氮、pm10、pm2.5等。<br><img src="/images/03222.jpg" alt="原始数据"></p>
<span id="more"></span>
<p>但是没有合适的表达显著性字段，于是我新建了一个名为【显著性】的字段<br><img src="/images/03221.jpg" alt="新建显著性字段"><br>对于这个显著性如何定义，我是这样做的：使用字段计算器中python脚本，如果经度大于105度，则空气质量变化显著，否则不显著，感觉有点绝对，不过挺符合我国的空气质量地域状况，嘻嘻~~~<br>具体设置如下：<br><img src="/images/03223.jpg" alt="字段计算器"><br>python代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">sig</span>(<span class="params">x</span>):</span><br><span class="line">	<span class="keyword">if</span>  x&gt;<span class="number">105</span>:</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;显著&quot;</span></span><br><span class="line">	<span class="keyword">else</span>:</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;不显著&quot;</span></span><br></pre></td></tr></table></figure>

<p><font size=6>二、多个字段属性的符号渲染</font></p>
<p>有了数据后，就可以尝试怎么操作实现了。</p>
<p>废话不多说，进入正题<br>实际很简单<br>1、首先右击图层属性，点击符号选项卡，选择多属性渲染方式，<br>2、选择显著性字段，然后对显著性设置不同的符号，如你所说的：空心不显著，实心表示显著<br><img src="/images/03224.jpg" alt="显著性"><br>3、然后点击右侧符号大小，弹出窗口中，选择趋势数值字段，<br><img src="/images/03225.jpg" alt="趋势"><br>4、具体参数可以根据自己的数据调整，初步效果如下<br><img src="/images/03226.jpg" alt="效果"></p>
<p><font size=4><b>后记：很多时候，空想是很不靠谱的，思维的惰性让人比较容易放弃，慢慢区亲自尝试，或许柳暗花明。<br>实干兴邦，空想误事</b></font></p>
]]></content>
      <categories>
        <category>GIS</category>
      </categories>
      <tags>
        <tag>GIS</tag>
        <tag>python</tag>
        <tag>多字段</tag>
        <tag>符号渲染</tag>
      </tags>
  </entry>
  <entry>
    <title>ArcGIS中使用字段计算器生成随机数和自增数</title>
    <url>/2017/01/05/1288.html</url>
    <content><![CDATA[<p>当我们使用ArcGIS，在编辑字段或者有某种数据处理需求时，想要新建个字段生成一列随机数或者自增序列数，<br>下面是实现得过程和代码：<br>首先新建个字段，字段类型是整型或者浮点或者双精度<br><img src="/images/01051.jpg" alt="ArcGIS中使用字段计算器生成随机数和自增数"><br>（1）生成随机数</p>
<span id="more"></span>
<p><img src="/images/01052.jpg" alt="ArcGIS中使用字段计算器生成随机数和自增数"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">randnum</span>():</span><br><span class="line">      res=random.randint(<span class="number">1</span>,<span class="number">10</span>)</span><br><span class="line">      <span class="keyword">return</span> res </span><br></pre></td></tr></table></figure>
<p>（2）自增序列数<br><img src="/images/01053.jpg" alt="ArcGIS中使用字段计算器生成随机数和自增数"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">total = <span class="number">0</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">accumulate</span>(<span class="params">increment</span>):</span><br><span class="line"> <span class="keyword">global</span> total</span><br><span class="line"> <span class="keyword">if</span> total:</span><br><span class="line">  total += increment</span><br><span class="line"> <span class="keyword">else</span>:</span><br><span class="line">  total = increment</span><br><span class="line"> <span class="keyword">return</span> total</span><br></pre></td></tr></table></figure>
<p>PS；注意选择是python脚本，以及代码的缩进。</p>
<p>结果如下：<br><img src="/images/01054.jpg" alt="ArcGIS中使用字段计算器生成随机数和自增数"></p>
]]></content>
  </entry>
  <entry>
    <title>Esri技术认证--桌面高级版 考查比重</title>
    <url>/2017/11/08/62317.html</url>
    <content><![CDATA[<p>The following list will familiarize candidates with the exam sections to help guide exam preparation. The relative weight of each section is provided to illustrate the approximate size of each section. Candidates should review this list and assess their knowledge of each skill. Specific preparation resources are available to assist with refreshing in areas where any knowledge gaps are found.</p>
<p>Data Storage — 21% 数据存储—21%<br>•    Given requirements for a specific project, determine how to design a geodatabase<br>给定一个项目要求，如何设计地理数据库</p>
<span id="more"></span>
<p>•    Select appropriate data formats for an intended use<br>对于特定的需求，选择合适的数据格式<br>•    Given a task, determine the data, settings, and parameters for creating a complex data set<br>给定一个任务，创建数据时确定数据、设置和参数<br>•    Given a task, determine the data, settings, and parameters for creating an address locator<br>给定一个任务，创建地址定位器时确定数据、设置和参数<br>•    Given a scenario, determine how to synchronize replicated data<br>给定一个场景，如何决定同步复制数据<br>Managing Data — 26% 数据管理—26%<br>•    Given a scenario, convert and aggregate data to an appropriate format<br>给定一个场景，将数据转换和聚合为合适的格式<br>•    Given a task, determine the necessary schema changes so that the data can support a particular operation<br>给定一个任务，确定必要的改变计划，这样数据能够支持特定操作<br>•    Given datasets that do not align, determine the best workflow to resolve the issue<br>给定的数据集是不统一的，确定解决问题的最佳工作流<br>•    Given a project, determine how to manage coordinate systems<br>给定一个项目，确定如何管理坐标系统<br>•    Given a scenario, determine the method to create a surface dataset<br>给定一个场景，确定创建表面数据集的方法<br>•    Given a scenario, determine how to automate data management<br>给定一个场景，确定如何实现数据自动化管理<br>Visualizing and Sharing Data — 21%<br>数据可视化与共享—21%<br>•    Given a scenario, use advanced cartographic techniques to visualize content across the ArcGIS platform<br>给定一个场景，使用ArcGIS平台先进的制图技术去可视化内容<br>•    Given a scenario, determine how to optimize rendering of maps across the platform<br>给定一个场景，确定在平台上如何优化地图的渲染<br>•    Given a scenario, determine how to create and render scenes<br>给定一个场景，确定如何创建和渲染场景<br>•    Identify procedures to create and publish layers, maps, and apps for a given task<br>给定一个任务，确定创建和发布图层、地图和应用的步骤<br>•    Given a scenario, determine the most effective process for sharing content<br>给定一个场景，确定分享内容最有效的处理<br>•    Given a scenario, determine how to automate visualization and sharing using ArcPy in ArcGIS Desktop<br>给定一个场景，使用ArcGIS桌面中的ArcPy确定如何自动可视化与共享<br>Analysis and Geoprocessing — 31%<br>分析与处理—31%<br>•    Determine how to create and edit a Python script to automate a simple repetitive process in an ArcGIS workflow<br>确定如何创建和编辑Python脚本，在ArcGIS工作流中实现简单的自动化批量处理<br>•    Determine how to create and edit a model in ModelBuilder to automate a complex workflow in ArcGIS for a given task<br>给定一个任务，确定在ModelBuilder中如何创建和编辑模型，以实现复杂的ArcGIS工作流<br>•    Given a failed workflow, determine the cause of the failure<br>给定一个失败的工作流，判定失败的原因<br>•    Given user requirements, determine an appropriate method for sharing a geoprocessing model, script, package, toolbox, etc.<br>给定用户的需求，确定分享地理处理模型、脚本、包等合适的方法<br>•    Determine how to customize the user interface to perform a task<br>对于一个任务，如何自定义用户界面<br>•    Determine how to author tasks in ArcGIS Pro<br>确定如何在ArcGIS Pro中发起任务<br>•    Given a scenario that requires an analysis, determine the workflow, data, tools, settings, and parameters to perform the analysis<br>给定一个需要分析的场景，确定分析操作中的工作流、数据、工具、设置以及参数</p>
]]></content>
  </entry>
  <entry>
    <title>ArcMap用起来卡的，请进</title>
    <url>/2018/03/26/55332.html</url>
    <content><![CDATA[<p>近期，一些ArcGIS桌面用户反馈说将低版本升级至10.5或者10.6后，在打开mxd工程文档和数据或者处理数据过程中, 感觉速度比以前慢了，有些卡。</p>
<span id="more"></span>
<p>是不是新版本的产品的BUG呢？但通过其他大部分用户反馈，使用时并没有类似的感受，所以排除这个。<br>那是不是系统环境的问题呢？之后我做了一个测试，首先在虚拟机上装一个符合ArcGIS桌面要求的操作系统（<a href="https://desktop.arcgis.com/zh-cn/arcmap/latest/get-started/setup/arcgis-desktop-system-requirements.htm">https://desktop.arcgis.com/zh-cn/arcmap/latest/get-started/setup/arcgis-desktop-system-requirements.htm</a>），先后安装10.5，10.5.1和10.6，测试速度正常，并没有重现慢的现象。</p>
<p>所以回归常规排除思路来，实际性能这个问题，无论是windows操作系统，还是智能手机系统，在使用一段时间后，速度会不如以前，为了不影响日常操作，我们会进行阶段的系统扫描、硬件资源占用优化和垃圾缓存清理等工作，这些操作能有效解决这些问题。</p>
<p>那就从这个入手，针对ArcMap慢的问题，我们可以尝试接下来的操作：<br>1、重置ArcMap<br>（1）重命名C:\Users\【当前登录用户名】\AppData\Roaming\ESRI\Desktop10.X\ArcMap\Templates\Normal.mxt为Normal_old.mxt，注意APPData是系统默认隐藏的文件夹；<br>（2）重命名‪C:\Users\【当前登录用户名】\AppData\Roaming\ESRI\Desktop10.X\ArcMap\Templates \Normal.gxt为Normal_old.gxt<br>（3）重命名‪C:\Users\【当前登录用户名】\AppData\Roaming\ESRI\Desktop10.X\ArcMap\Templates \ArcToolbox.dat为ArcToolbox _old.dat<br>（4）点击运行，在窗口中输入regedit，选择HKEY_CURRENT_USER\Software\ESRI，重命名ESRI为ESRI_1<br>（5）点击运行，在窗口中输入%APPDATA%\ESRI， 重命名该文件夹为Esri_old</p>
<p>2、重新安装<br>注意：一定先解除桌面许可，才能卸载软件，不然许可会丢失，很麻烦的。<br>接下来就可以放心删除以下文件夹<br>（1）删除C:\Users\【当前登录用户名】\AppData\Roaming\ESRI下桌面版本文件夹Desktop10.X<br>（2）删除C:\Users\【当前登录用户名】\AppData\Local下的Esri文件夹<br>（3）删除C:\Users\【当前登录用户名】\Documents下的ArcGIS和ESRI下的文件夹<br>（4）删除C:\Program Files (x86)下的ArcGIS和ESRI下的文件夹<br>（5）删除C:\Program Files (x86)\Common Files下的ArcGIS文件夹<br>最后再重装软件</p>
<p>3、删除字体<br>如果系统中安装字体过多（超过200个），在C:\Windows\Fonts下删除一些无用或者冗余的字体。<br>注意：删除之前，最好备份一下Font文件夹，不要删除名称以esri开头的字体。</p>
]]></content>
  </entry>
  <entry>
    <title>ArcGIS知乎网站用户信息爬取与分析【附代码】</title>
    <url>/2017/01/10/50334.html</url>
    <content><![CDATA[<p>上周陈老师让我收集一下部门人员在<a href="http://zhihu.esrichina.com.cn/">ArcGIS知乎</a>上的活动信息，包括威望、积分、赞同、感谢、提问、回复和文章等数量，当时觉得数量不多，就直接打开网页一个个找到，然后敲到Excel中。<br>现在觉得要是以后大量分析用户行为，这就不可行，正好对爬虫感兴趣，先写个练练手。<br>爬取的信息如下：<br>有效注册用户：4633个</p>
<hr>
<h2 id="问题总数：5247个"><a href="#问题总数：5247个" class="headerlink" title="问题总数：5247个"></a>问题总数：5247个</h2><h2 id="回复总数：6146个"><a href="#回复总数：6146个" class="headerlink" title="回复总数：6146个"></a>回复总数：6146个</h2><h2 id="文章总数：2539篇"><a href="#文章总数：2539篇" class="headerlink" title="文章总数：2539篇"></a>文章总数：2539篇</h2><h2 id="日期：2017年01月10日12-00"><a href="#日期：2017年01月10日12-00" class="headerlink" title="日期：2017年01月10日12:00"></a>日期：2017年01月10日12:00</h2><span id="more"></span>
<p><img src="/images/01102.jpg" alt="爬取过程"><br><img src="/images/01103.jpg" alt="爬取结束"><br><img src="/images/01101.jpg" alt="爬取结果"><br>对数据结果进行简要汇总和分析</p>
<hr>
<p>威望前20<br><img src="/images/01104.jpg" alt="威望前20"><br>积分前20<br><img src="/images/01105.jpg" alt="积分前20"><br>赞同前20<br><img src="/images/01106.jpg" alt="赞同前20"><br>感谢前20<br><img src="/images/01107.jpg" alt="感谢前20"><br>发问前20<br><img src="/images/01108.jpg" alt="发问前20"><br>回复前20<br><img src="/images/01109.jpg" alt="回复前20"><br>文章前20<br><img src="/images/011010.jpg" alt="文章前20"></p>
<h2 id="1、爬取了5185个用户，有效用户为4633个，注册有效率为89-4"><a href="#1、爬取了5185个用户，有效用户为4633个，注册有效率为89-4" class="headerlink" title="1、爬取了5185个用户，有效用户为4633个，注册有效率为89.4%"></a>1、爬取了5185个用户，有效用户为4633个，注册有效率为89.4%</h2><h2 id="2、从各项排名来看，认证用户比较活跃"><a href="#2、从各项排名来看，认证用户比较活跃" class="headerlink" title="2、从各项排名来看，认证用户比较活跃"></a>2、从各项排名来看，认证用户比较活跃</h2><h2 id="3、几个普通用户比较热心，比如turtle，可以加个认证，以资鼓励，"><a href="#3、几个普通用户比较热心，比如turtle，可以加个认证，以资鼓励，" class="headerlink" title="3、几个普通用户比较热心，比如turtle，可以加个认证，以资鼓励，(^_^))"></a>3、几个普通用户比较热心，比如turtle，可以加个认证，以资鼓励，(<em>^_^</em>))</h2><h2 id="毕竟是公司的网站，再者是白天访问，没有使用多进程。"><a href="#毕竟是公司的网站，再者是白天访问，没有使用多进程。" class="headerlink" title="毕竟是公司的网站，再者是白天访问，没有使用多进程。"></a>毕竟是公司的网站，再者是白天访问，没有使用多进程。</h2><h2 id="ArcGIS知乎可以加一些反爬虫的代码。"><a href="#ArcGIS知乎可以加一些反爬虫的代码。" class="headerlink" title="ArcGIS知乎可以加一些反爬虫的代码。"></a>ArcGIS知乎可以加一些反爬虫的代码。</h2><h2 id="PS：实际通过数据库中提取用户信息，更为全面可靠。"><a href="#PS：实际通过数据库中提取用户信息，更为全面可靠。" class="headerlink" title="PS：实际通过数据库中提取用户信息，更为全面可靠。"></a>PS：实际通过数据库中提取用户信息，更为全面可靠。</h2><h2 id="附上代码"><a href="#附上代码" class="headerlink" title="附上代码"></a>附上代码</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#-*-coding:utf-8 -*-</span></span><br><span class="line">__author__ = <span class="string">&#x27;jiang&#x27;</span></span><br><span class="line"><span class="comment"># 导入模块 urllib2</span></span><br><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"><span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line">starttime = datetime.datetime.now()</span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//arcgiazhihu.txt&#x27;</span>, <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">line =<span class="string">&quot;编号&quot;</span>+ <span class="string">&#x27;,&#x27;</span> + <span class="string">&quot;用户名&quot;</span>+ <span class="string">&#x27;,&#x27;</span> + <span class="string">&quot;威望&quot;</span> + <span class="string">&#x27;,&#x27;</span> + <span class="string">&quot;积分&quot;</span> + <span class="string">&#x27;,&#x27;</span> + <span class="string">&quot;赞同&quot;</span> + <span class="string">&#x27;,&#x27;</span> + <span class="string">&quot;感谢&quot;</span> + <span class="string">&#x27;,&#x27;</span> + <span class="string">&quot;发问&quot;</span> + <span class="string">&#x27;,&#x27;</span> + <span class="string">&quot;回复&quot;</span> + <span class="string">&#x27;,&#x27;</span> + <span class="string">&quot;文章&quot;</span> + <span class="string">&#x27;,&#x27;</span> + <span class="string">&quot;关注&quot;</span> + <span class="string">&#x27;,&#x27;</span> + <span class="string">&quot;被关注&quot;</span> + <span class="string">&#x27;,&#x27;</span> + <span class="string">&quot;关注话题&quot;</span> + <span class="string">&#x27;,&#x27;</span> +<span class="string">&quot;个人主页&quot;</span> + <span class="string">&#x27;,&#x27;</span> +<span class="string">&quot;个性主页&quot;</span> + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line"><span class="comment"># 对象file的write方法将字符串line写入file中.</span></span><br><span class="line">file = file.write(line)</span><br><span class="line">num=<span class="number">0</span></span><br><span class="line">shuliang=<span class="built_in">input</span>(<span class="string">&quot;请输入需要爬取的用户数量：&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> namecode <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,shuliang+<span class="number">1</span>):</span><br><span class="line">    url = <span class="string">&#x27;http://zhihu.esrichina.com.cn/people/&#x27;</span> + <span class="built_in">str</span>(namecode)</span><br><span class="line">    <span class="comment">#print(url)</span></span><br><span class="line">    <span class="comment"># 设置头文件。抓取有些的网页不需要专门设置头文件，但是这里如果不设置的话，</span></span><br><span class="line">    <span class="comment"># 这里暂时不提。关于怎么知道头文件该怎么写，一些插件可以看到你用的浏览器和网站交互的</span></span><br><span class="line">    <span class="comment"># 头文件（这种工具很多浏览器是自带的），我用的是firefox的firebug插件。</span></span><br><span class="line">    header = &#123;<span class="string">&#x27;Host&#x27;</span>: <span class="string">&#x27;zhihu.esrichina.com.cn&#x27;</span>,<span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 6.1; rv:26.0) Gecko/20100101 Firefox/26.0&#x27;</span>,<span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#x27;</span>,<span class="string">&#x27;Connection&#x27;</span>: <span class="string">&#x27;keep-alive&#x27;</span>&#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        req = urllib2.Request(url, headers = header)</span><br><span class="line">        con = urllib2.urlopen( req )</span><br><span class="line">        <span class="comment"># 对con这个对象调用read()方法，返回的是html页面，也就是有html标签的纯文本</span></span><br><span class="line">        doc = con.read()</span><br><span class="line">        <span class="comment">#print doc</span></span><br><span class="line">        <span class="comment"># 生成一个soup对象，doc就是步骤二中提到的</span></span><br><span class="line">        soup = BeautifulSoup.BeautifulSoup(doc)</span><br><span class="line">        user_name = soup.html.body.find(<span class="string">&#x27;div&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;mod-head&#x27;</span>&#125;).h1</span><br><span class="line">        <span class="comment">#print user_name</span></span><br><span class="line">        str123=<span class="built_in">str</span>(user_name)</span><br><span class="line">        user_name1 = re.sub(<span class="string">r&#x27;\s|&lt;h1&gt;|&lt;.*&gt;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, str123)</span><br><span class="line">        weiwang1 = soup.findAll(<span class="string">&#x27;em&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;aw-text-color-green&#x27;</span>&#125;)</span><br><span class="line">        chengjiu1=soup.findAll(<span class="string">&#x27;em&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;aw-text-color-orange&#x27;</span>&#125;)</span><br><span class="line">        q_a = soup.findAll(<span class="string">&#x27;span&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;badge&#x27;</span>&#125;)</span><br><span class="line">        fensi = soup.findAll(<span class="string">&#x27;em&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;aw-text-color-blue&#x27;</span>&#125;)</span><br><span class="line">        weiwang2=weiwang1[<span class="number">0</span>:<span class="built_in">len</span>(weiwang1) / <span class="number">2</span>]</span><br><span class="line">        chengjiu=chengjiu1[<span class="number">0</span>:<span class="built_in">len</span>(chengjiu1) / <span class="number">2</span>]</span><br><span class="line">        weiwang = re.sub(<span class="string">r&#x27;&lt;em class=&quot;aw-text-color-green&quot;&gt;|&lt;.*&gt;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="built_in">str</span>(weiwang2[<span class="number">0</span>]))</span><br><span class="line">        jifen=re.sub(<span class="string">r&#x27;&lt;em class=&quot;aw-text-color-orange&quot;&gt;|&lt;.*&gt;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="built_in">str</span>(chengjiu[<span class="number">0</span>]))</span><br><span class="line">        zantong = re.sub(<span class="string">r&#x27;&lt;em class=&quot;aw-text-color-orange&quot;&gt;|&lt;.*&gt;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="built_in">str</span>(chengjiu[<span class="number">1</span>]))</span><br><span class="line">        ganxie = re.sub(<span class="string">r&#x27;&lt;em class=&quot;aw-text-color-orange&quot;&gt;|&lt;.*&gt;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="built_in">str</span>(chengjiu[<span class="number">2</span>]))</span><br><span class="line">        fawen=re.sub(<span class="string">r&#x27;&lt;span class=&quot;badge&quot;&gt;|&lt;.*&gt;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="built_in">str</span>(q_a[<span class="number">0</span>]))</span><br><span class="line">        huifu=re.sub(<span class="string">r&#x27;&lt;span class=&quot;badge&quot;&gt;|&lt;.*&gt;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="built_in">str</span>(q_a[<span class="number">1</span>]))</span><br><span class="line">        wenzhang=re.sub(<span class="string">r&#x27;&lt;span class=&quot;badge&quot;&gt;|&lt;.*&gt;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="built_in">str</span>(q_a[<span class="number">2</span>]))</span><br><span class="line">        guanzhu=re.sub(<span class="string">r&#x27;&lt;em class=&quot;aw-text-color-blue&quot;&gt;|&lt;.*&gt;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="built_in">str</span>(fensi[<span class="number">0</span>]))</span><br><span class="line">        beiguanzhu = re.sub(<span class="string">r&#x27;&lt;em class=&quot;aw-text-color-blue&quot;&gt;|&lt;.*&gt;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="built_in">str</span>(fensi[<span class="number">1</span>]))</span><br><span class="line">        guanzhuhuati = re.sub(<span class="string">r&#x27;\n|&lt;em class=&quot;aw-text-color-blue&quot;&gt;|&lt;.*&gt;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="built_in">str</span>(fensi[<span class="number">2</span>]))</span><br><span class="line">        gerenzhuye=<span class="string">&#x27;http://zhihu.esrichina.com.cn/people/&#x27;</span>+<span class="built_in">str</span>(namecode)</span><br><span class="line">        gexingzhuye=<span class="string">&#x27;http://zhihu.esrichina.com.cn/people/&#x27;</span>+user_name1</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;正在爬取用户【&quot;</span>+user_name1+<span class="string">&quot;】的信息&quot;</span></span><br><span class="line">        <span class="comment"># print &quot;威望：&quot; + weiwang</span></span><br><span class="line">        <span class="comment"># print &quot;积分：&quot; + jifen</span></span><br><span class="line">        <span class="comment"># print &quot;赞同：&quot; + zantong</span></span><br><span class="line">        <span class="comment"># print &quot;感谢：&quot; + ganxie</span></span><br><span class="line">        <span class="comment"># print &quot;提问：&quot; + fawen</span></span><br><span class="line">        <span class="comment"># print &quot;回复：&quot; + huifu</span></span><br><span class="line">        <span class="comment"># print &quot;文章：&quot; + wenzhang</span></span><br><span class="line">        <span class="comment"># print &quot;个人主页：&quot;+gerenzhuye</span></span><br><span class="line">        <span class="comment"># print &quot;个性主页：&quot;+gexingzhuye</span></span><br><span class="line">        <span class="comment"># print &quot;--------------------------------------------------------------------------------------------------------------------------------------&quot;</span></span><br><span class="line">        file = <span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//arcgiazhihu.txt&#x27;</span>, <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">        line = <span class="built_in">str</span>(namecode)+ <span class="string">&#x27;,&#x27;</span> +<span class="built_in">str</span>(user_name1)+ <span class="string">&#x27;,&#x27;</span> + weiwang + <span class="string">&#x27;,&#x27;</span> + jifen + <span class="string">&#x27;,&#x27;</span> + zantong+ <span class="string">&#x27;,&#x27;</span> + ganxie+ <span class="string">&#x27;,&#x27;</span> + fawen+ <span class="string">&#x27;,&#x27;</span> + huifu+ <span class="string">&#x27;,&#x27;</span> + wenzhang+ <span class="string">&#x27;,&#x27;</span> + guanzhu+ <span class="string">&#x27;,&#x27;</span> + beiguanzhu+ <span class="string">&#x27;,&#x27;</span> + guanzhuhuati +<span class="string">&#x27;,&#x27;</span> +gerenzhuye+<span class="string">&#x27;,&#x27;</span> +gexingzhuye+ <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">        <span class="comment"># 对象file的write方法将字符串line写入file中</span></span><br><span class="line">        file = file.write(line)</span><br><span class="line">        num=num+<span class="number">1</span></span><br><span class="line">    <span class="keyword">except</span> Exception, e:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;用户&quot;</span>+<span class="built_in">str</span>(namecode)+<span class="string">&quot;不存在&quot;</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">endtime = datetime.datetime.now()</span><br><span class="line">time = (endtime - starttime).seconds</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;最终共爬取到&quot;</span>+<span class="built_in">str</span>(num)+<span class="string">&quot;个有效用户信息&quot;</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;用时&quot;</span>+<span class="built_in">str</span>(time)+<span class="string">&quot;秒&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>多进程</tag>
      </tags>
  </entry>
  <entry>
    <title>Modis GTOPO30 土地利用数据说明与下载</title>
    <url>/2016/08/02/42453.html</url>
    <content><![CDATA[<h1 id="Modis数据"><a href="#Modis数据" class="headerlink" title="Modis数据"></a><center>Modis数据</center></h1><p>1、产品数据介绍官方地址：<br><a href="https://lpdaac.usgs.gov/dataset_discovery/modis/modis_products_table/">https://lpdaac.usgs.gov/dataset_discovery/modis/modis_products_table/</a><br>2、下载地址：<span id="more"></span><br><a href="http://modis.gsfc.nasa.gov/data/">http://modis.gsfc.nasa.gov/data/</a><br>3、Modis中国区域行列号<br><img src="/images/modisco.jpg" alt="1"><br>4、数据产品介绍<br>中分辨率成像光谱仪(MODerate-resolution Imaging Spectroradiometer) -MODIS是Terra和Aqua卫星上搭载的主要传感器之一，两颗星相互配合每1-2天可重复观测整个地球表面，得到36个波段的观测数据，这些数据 将有助于我们深入理解全球陆地、海洋和低层大气内的动态变化过程，因此，MODIS在发展有效的、全球性的用于预测全球变化的地球系统相互作用模型中起着 重要的作用，其精确的预测将有助于决策者制定与环境保护相关的重大决策。<br>MODIS自2000年4月开始正式发布数据，NASA对MODIS数据以广播X波段向全球免费发送，我国目前已建立了数个接收站并分别于2001年3月 前后开始接收数据。由于NASA对MODIS数据实行这种全球免费接收的政策，使得MODIS数据的获取十分廉价和方便。 </p>
<!--more-->
<p><strong>Modis数据产品介绍</strong><br>     MODIS标准数据产品根据内容的不同分为0级、1级数据产品，在1B级数据产品之后，划分2－4级数据产品，包括：陆地标准数据产品、大气标准数据产品和海洋标准数据产品等三种主要标准数据产品类型，总计分解为44种标准数据产品类型。它们分别是：<br>1、MODIS L0数据是对卫星下传的数据报解除CADU外壳后，所生成的CCSDS格式的未经任何处理的原始数据集合，其中包含按照顺序存放的扫描数据帧、时间码、方位信息和遥测数据等。<br>2、LlA数据是对L0数据中的CCSDS包进行解包所还原出来的扫描数据及其他相关数据的集合<br>3、LlB数据是对LlA数据进行定位和定标处理之后所生成，其中包含以sI(Scaled Integer)形式存放的反射率和辐射率的数据集。LlB代码读取LlA代码解包产生的DN数据集(EV SD SRCA BB SV)以及定标查找表LUT(LookUp Table)作为输入，分别对太阳反射波段RSB和热辐射波段TEB进行定标处理。定标计算所使用的参数可以从MODIS支持组MCST所定期发布的LUT文件中得到。传感器DN数值按照BDSM(Band，Detector，Sub-frame，Mirror．side)索引。<br>4、L2～L4是对LlB数据进行各种应用处理之后所生成的特定应用数据产品。<br>MOD01：即 MODIS1A数据产品。<br>1A级处理程序，把2个小时的0级文件重新组织成一系列基本处理单元，及数据块（Granules），每个数据块包含大约5分钟的MODIS数据。因为MODIS镜面的一次扫描需要1.4771秒，所以在5分钟内1B级产品文件典型的有203次完全扫描，有时候完全扫描204次。每天5分钟集合的扫描文件有288个。地理位置代码计算地面单个象元的坐标，以及有关MODIS的太阳和月亮的位置信息。在GDAAC的操作中，1A级和地理位置代码使用产品生成程序（PGE01）。同时，它们将输入的MODIS数据放到1B级软件中<br>MOD02：即 MODIS1B数据产品。<br>MOD03：即 MODIS数据地理定位文件。<br>MODIS Geolocation(MOD03) 数据产品包含有：MODIS每个1km EV（Earth View）中心的经纬度，每个1km EV太阳/卫星的方位，每个1km EV EOS陆地/海洋的阈值，每条扫描太阳和月亮相对于MODIS的位置，充分的仪器参数信息以支持特定波段和亚像元级定位。格式描述分为4个部分：全局元数据、处理和几何参数、扫描数据、组（Vgroups）<br>MOD04-08，35为大气产品，9－17，33，40，43，44为陆地产品，18-32，36-39，42为海洋产品<br>MOD04：大气2、3级标准数据产品，内容为气溶胶产品，Lambert投影空间分辨率1公里，地理坐<br>标30秒空间分辨率，每日数据为2级数据产品，每旬、每月数据合成为3级数据产品。<br>MOD05：可降水量。2级大气产品。<br>MOD06：大气2、3级标准数据产品，内容为云产品，Lambert投影空间分辨率1公里，地理坐标30秒空间分辨率，每日数据为2级数据产品，每旬、每月数据合成为3级数据产品。<br>MOD07：大气2、3级标准数据产品，内容为大气剖面数据，Lambert投影空间分辨率1公里，地理坐标30秒空间分辨率，每日数据为2级数据产品，每旬、每月数据合成为3级数据产品。<br>MOD08：大气3级标准数据产品，内容为栅格大气产品，1公里空间分辨率。每日、每旬、每月合成数据。<br>MOD09：陆地2级标准数据产品，内容为表面反射；空间分辨率250m；白天每日数据。<br>MOD10：陆地2、3级标准数据产品，内容为雪覆盖，每日数据为2级数据，空间分辨率500米，旬、月数据合成为3级数据，空间分辨率500米。<br>归一化雪被指数：归一化雪被指数是观测冰雪定量指标，<br>NDSI=（Ref0.555um- Ref1.640um)/( Ref0.555um Ref1.640um)</p>
<ul>
<li><p>Ref0.555um、Ref1.640um为入瞳反射率位于陆地且同时满足以下条件的像元，可以定义为“陆地冰雪”，简称“冰雪”：<br>NDSI＝(RefMODIS4- RefMODIS6) / (RefMODIS4 RefMODIS6)&gt;0.4；RefMODIS2 &gt; 0.11；<br>MOD11：陆地2、3级标准数据产品，内容为地表温度和辐射率，Lambert投影，空间分辨率1公里，地理坐标为30秒，每日数据为2级数据，每旬、每月数据合成为3级数据。<br>MOD12：陆地3级标准数据产品，内容为土地覆盖/土地覆盖变化，1km，1/4º，季节的，生物地球化学循环，土地覆盖变化，3级数据产品。<br>MOD13：陆地2级标准数据产品，内容为栅格的归一化植被指数和增强型植被指数（NDVI/EVI），空间分辨率250m。<br>MOD14：陆地2级标准数据产品，内容为热异常-火灾和生物量燃烧，空间分辨率1km，确定火灾发生的位置、火灾等级以及暗火与燃烧比。<br>MOD15：陆地3级标准数据产品，内容为叶面积指数和光合有效辐射，空间分辨率1km，每天的及旬、月合成产品。<br>MOD16：陆地4级标准数据产品，内容为蒸腾作用，空间分辨率1km，旬、月合成产品。<br>MOD17：陆地4级标准数据产品，内容为植被产品，NPP，空间分辨率为250米，1公里，旬、月度频率。<br>MOD18：海洋2、3级标准数据产品，内容为标准的水面辐射，全球洋面，空间分辨率1km，日、旬、月，海洋叶绿素。<br>MOD19：海洋2、3级标准数据产品，内容为色素浓度，全球洋面，空间分辨率1km，日、旬、月度数据。<br>MOD20：海洋2、3级标准数据产品，内容为叶绿素荧光性，全球洋面，空间分辨率1km，叶绿素水平大于2.0mg/m3，日、旬、月度数据。<br>MOD21：海洋2级标准数据产品，内容为叶绿素-色素浓度，空间分辨率1km，日、旬、月度数据。<br>MOD22：海洋2、3级标准数据产品，内容为光合可利用辐射（PAR），全球洋面，1km，日、旬、月度数据。<br>MOD23：海洋3级标准数据产品，内容为悬浮物浓度。<br>MOD24：海洋3级标准数据产品，内容为有机质浓度。<br>MOD25：海洋2、3级标准数据产品，内容为球石浓度，全球洋面，空间分辨率1km、20km，日、旬、月度数据。<br>MOD26：海洋3级标准数据产品，内容为海洋水衰减系数。<br>MOD27：海洋2、3级标准数据产品，内容为海洋初级生产力，全球洋面，空间分辨率1km，日、旬、月度数据。<br>MOD28：海洋2、3级标准数据产品，内容为海面温度，全球洋面，空间分辨率1km，每天的，每周的/昼夜的，能量和水平衡，气候变化模型。<br>MOD29：海洋2级标准数据产品，内容为海冰覆盖，海洋，1公里分辨率，日、旬数据。<br>MOD30：（未定）<br>MOD31：海洋2、3级标准数据产品，内容为藻红蛋白浓度， 1公里分辨率，日、旬、月度数据。<br>MOD32：海洋2级标准数据产品，内容为处理框架和匹配的数据库，1公里分辨率，日、旬、月度数据，用于海洋叶绿素、海洋生产力计算。<br>MOD33：陆地3级标准数据产品，内容为雪覆盖，空间分辨率500米，日、旬、月度数据。<br>MOD34：（未定）<br>MOD35：大气2级标准数据产品，内容为云掩膜，空间分辨率为250m和1公里，日数据。<br>MOD36：海洋3级标准数据产品，内容为总吸收系数，空间分辨率为1公里，日、旬、月度数据<br>MOD37：海洋2、3级标准数据产品，内容为海洋气溶胶特性，空间分辨率1km，日、旬、月度数据。<br>MOD38：（未定）<br>MOD39：海洋2、3级标准数据产品，内容为纯水势，空间分辨率1km，日、旬、月度数据。<br>MOD40：陆地3级标准数据产品，内容为栅格的热异常，空间分辨率1公里，日、旬、月度数据。<br>MOD41：（未定）<br>MOD42：海洋3级标准数据产品，内容为海冰覆盖，空间分辨率1公里，日、旬、月度数据。<br>MOD43：陆地3级标准数据产品，内容为表面反射，BRDF/Albedo参数，空间分辨率1公里，日、旬、月度数据。<br>MOD44：陆地3级标准数据产品，内容为植被覆盖转换，250m，季度、年度，判定植被覆盖转换的发生和类型。</p>
<p>  <strong>MODIS 数据格式采用的是HDF 分层数据格式， 可以由遥感软件（如ENVI ArcGIS等）直接识别。</strong></p>
</li>
</ul>
<h1 id="全球数字高程模型-GTOPO30"><a href="#全球数字高程模型-GTOPO30" class="headerlink" title="全球数字高程模型 GTOPO30"></a><center>全球数字高程模型 GTOPO30</center></h1><p>1、产品数据介绍官方地址：<br><a href="http://webgis.wr.usgs.gov/globalgis/gtopo30/gtopo30.htm">http://webgis.wr.usgs.gov/globalgis/gtopo30/gtopo30.htm</a><br>2、下载地址（需要登录注册，但很简单）：<br><a href="http://westdc.westgis.ac.cn/data/view/uuid/92bb3089-cc0c-46d2-908d-aae810ef064e">http://westdc.westgis.ac.cn/data/view/uuid/92bb3089-cc0c-46d2-908d-aae810ef064e</a><br>3、GTOPO30中国区域行列号<br><img src="/images/gtopo30.jpg" alt="2"><br><strong>4、数据产品介绍</strong><br>GTOPO30 是一个全球的数字高程模型，它覆盖西经180度至东经180度，南纬90至北纬90度的所有区域。它的分辨率为30秒（即0.00833333度），生成 一个21,600（行）×43,200（列）的DEM。其高程值范围在-407至8752米。在数字高程模型中，海洋地区被指定为-9999 。 低地沿海一带，海拔至少有1米。由于图象为栅格数据，在影像上小于一个像素的点被忽略（即面积小于1平方千米的小岛）。<br>为了便于数据的分 发，GTOPO30 被划分为33个小的区域（tiles）。从南纬60度至北纬90度，西经180度至东经180度的地区被划分为大小为50（纬度）×40（经度）的27块 区域，南极洲（南纬90至南纬60度，西经180至东经180度的区域）被划分为6个区域（30×60）。<br>所有区域的命名由其左上角的坐标所决 定。<br>Latitude          Longitude                  Elevation<br>Tile    Minimum  Maximum   Minimum  Maximum   Minimum  Maximum  Mean  Std.Dev.<br>W180N90     40       90       -180    -140         1      6098    448     482<br>W140N90     40       90       -140    -100         1      4635    730     596<br>W100N90     40       90       -100      -60         1      2416    333     280<br>W060N90     40       90         -60      -20         1      3940  1624     933<br>也就 是由纬度的最大值和经度的最小值组成，EW,NS由符号决定。<br>命名的图示如上所示。<br><strong>注：国内的网站<a href="http://www.gscloud.cn/search">地理空间数据云</a>，上面数据很全，土地利用分类数据和DEM（海拔）数据都有，且精度很高，注册一个号就可以下载了</strong><br><img src="/images/cloud.jpg" alt="3"></p>
]]></content>
      <categories>
        <category>GIS</category>
        <category>RS</category>
      </categories>
      <tags>
        <tag>GIS</tag>
        <tag>RS</tag>
        <tag>modis</tag>
        <tag>gtopo30</tag>
        <tag>地理空间云</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBlog：I&#39;m back!</title>
    <url>/2018/12/13/10958.html</url>
    <content><![CDATA[<p>2018年的最后十几天，博客又回来了!沉寂了半年多，折腾了几次，尝试新的东西，但又做了一些浪费时间的事情。接下来，嗯，加油！</p>
<hr>
<p>【附】博客恢复记录<br>一、初始化并恢复文件<br>1、创建一个hexo目录；</p>
<p>2、进入hexo目录，添加hexo；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cnpm install hexo -g</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p>3、初始化Hexo；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>
<p>4、安装push工具；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p>5、将原先的_config.yml文件、source文件夹、themes文件夹复制替换过来；</p>
<p>二、设置SSH keys<br>1、在Git Bash输入以下指令（任意位置点击鼠标右键），检查是否已经存在了SSH keys；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls -al ~/.ssh</span><br></pre></td></tr></table></figure>
<p>2、如果不存在就没有关系，如果存在的话，直接删除.ssh文件夹里面所有文件（路径为：C:\Users\用户名.ssh）；</p>
<p>3、输入以下指令（邮箱就是你注册Github时候的邮箱）后，回车；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;XXXXXX@XXX.com&quot;</span><br></pre></td></tr></table></figure>
<p>4、然后它会提示要你输入passphrase,直接回车;</p>
<p>5、然后键入以下指令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-agent -s</span><br></pre></td></tr></table></figure>
<p>6、继续输入指令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure>
<p>7、输入之后，在我这里是出错了，不知道你的有没有出错;</p>
<p>8、如果你的也是这样子出错了的话，就输入以下指令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eval `ssh-agent -s`</span><br><span class="line"></span><br><span class="line">ssh-add</span><br></pre></td></tr></table></figure>
<p>9、知道rsa.pub文件，复制里面的内容；</p>
<p>10、然后到Github里面，点击设置，然后添加SSH keys，添加标题，并将上一步拷贝的内容复制到里面；</p>
<p>11、点击添加，提示输入github的密码；</p>
<p>12、测试一下，键入以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>
<p>13、如果出现以下内容，说是主机密钥验证失败，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">“The authenticity of host &#x27;github.com (192.30.252.128)&#x27; can&#x27;t be established.</span><br><span class="line">RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)? </span><br><span class="line">**Host key verification failed.**</span><br><span class="line">fatal: Could not read from remote repository.</span><br><span class="line"></span><br><span class="line">Please make sure you have the correct access rightsand the repository exists.”​</span><br></pre></td></tr></table></figure>
<p>14、其实这是缺少了 known_hosts 文件, 而且必须生成 github.com 的ip执行内容，输入；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh git@github.com</span><br></pre></td></tr></table></figure>
<p>15、使用hexo g, hexo d测试一下，应该就可以了。</p>
<p>【附】<br>1、还要安装abbrlink博客文章链接生成插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure>

<p>2、安装hexo-generator-json-content提供站点内容搜索功能</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-generator-json-content</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>JS的一些骚操作</title>
    <url>/2021/10/29/8679.html</url>
    <content><![CDATA[<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 避免不检查object.family、object.family.brother造成的TypeError</span></span><br><span class="line"><span class="keyword">const</span> ageOfBrother = object?.<span class="property">family</span>?.<span class="property">brother</span>?.<span class="property">age</span>;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>JavaScript</tag>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>Portal和Server打不开或者启动较慢的解决之道？</title>
    <url>/2016/10/10/22289.html</url>
    <content><![CDATA[<p>有一段时间没用Portal和Server，今天打开Portal时，网页加载巨慢，portal打不开了，Server的进度条直接卡主，一时不明原因，捣鼓半天没有解决。<span id="more"></span><br>尝试重启了一下Portal和Server的服务，居然可以了，原因未知，但是就这么解决了，果然是重启大法好！<br><img src="/images/ps1.jpg" alt="Portal和Server"><br><img src="/images/ps2.jpg" alt="Portal和Server"></p>
]]></content>
      <categories>
        <category>GIS</category>
      </categories>
      <tags>
        <tag>GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>前端VUE项目使用多线程10秒快速打包【附加打包失败解决案例】</title>
    <url>/2020/01/18/35298.html</url>
    <content><![CDATA[<p>如果前端VUE项目页面增多、引入文件剧增，或造成打包速度巨慢，作为前端是无法忍受的。<br>这是因为VUE项目默认打包插件是uglifyjs-webpack-plugin，属于单线程操作。<br>我们可以使用webpack-parallel-uglify-plugin插件模块，实现多线程并行式处理。<br>因此，现在需要先安装webpack-parallel-uglify-plugin，</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">npm i -D webpack-parallel-uglify-plugin</span><br></pre></td></tr></table></figure>
<p>然后修改X\build\路径下的webpack.prod.conf.js文件<br>修改uglifyjs-webpack-plugin模块引入</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">UglifyJsPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;uglifyjs-webpack-plugin&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p>为</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">ParallelUglifyPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;webpack-parallel-uglify-plugin&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p>然后注释掉</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">UglifyJsPlugin</span>(&#123;</span><br><span class="line">      <span class="attr">uglifyOptions</span>: &#123;</span><br><span class="line">        <span class="attr">compress</span>: &#123;</span><br><span class="line">          <span class="attr">warnings</span>: <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">sourceMap</span>: config.<span class="property">build</span>.<span class="property">productionSourceMap</span>,</span><br><span class="line">      <span class="attr">parallel</span>: <span class="literal">true</span></span><br><span class="line">    &#125;),</span><br></pre></td></tr></table></figure>
<p>添加以下语句就可以了</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">ParallelUglifyPlugin</span>(&#123;</span><br><span class="line">  <span class="attr">cacheDir</span>: <span class="string">&#x27;.cache/&#x27;</span>,</span><br><span class="line">  <span class="attr">uglifyJS</span>: &#123;</span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">      <span class="attr">comments</span>: <span class="literal">false</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">warnings</span>: <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h1 id="就此完毕！是不是很简单-打个包看看，打包速度是不是比以前提升好几倍，嘻嘻"><a href="#就此完毕！是不是很简单-打个包看看，打包速度是不是比以前提升好几倍，嘻嘻" class="headerlink" title="就此完毕！是不是很简单?打个包看看，打包速度是不是比以前提升好几倍，嘻嘻.."></a>就此完毕！是不是很简单?打个包看看，打包速度是不是比以前提升好几倍，嘻嘻..</h1><p>如果碰到VUE打包失败，出现下面的错误</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">UnhandledPromiseRejectionWarning: CssSyntaxError:</span><br></pre></td></tr></table></figure>
<p>这个意思是说打包的CSS文件有非法字符，大部分是注释不规范造成的<br>我这里是因为CSS文件中误用 // 作为注释造成的，而 // 在SCSS文件中用是没问题的。</p>
]]></content>
  </entry>
  <entry>
    <title>button造成的异常跳转问题解决一例</title>
    <url>/2020/09/18/48870.html</url>
    <content><![CDATA[<p>今天下午遇到一个比较坑的问题，严格来说是没意识到。<br>情形：vue页面通过两个button按钮,控制不同组件页面显示，页面有缓存属性<br>问题：首次进入页面点击某个按钮，切换到另一个页面，页面闪白后出现刷新，又跳回至默认页面，再次点击按钮，正常切换至另一个页面<br>原因：button按钮自身带有提交表单属性，正好页面有form表单，导致页面再次执行查询操作，造成页面刷新，回到默认页面<br>解决：click事件添加prevent属性，阻止button默认的提交事件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.prevent</span>=<span class="string">&quot;clickTest&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>


<p>备注：养成按钮点击事件添加stop或者prevent属性，避免因冒泡或者自身属性的异常问题</p>
]]></content>
  </entry>
  <entry>
    <title>geoserver多个图层要素相同的问题</title>
    <url>/2020/06/22/28106.html</url>
    <content><![CDATA[<p>今天在解决一个BUG的过程中发现：当多个图层layer共用一个Feature时，虽然每个图层的要素使用不同的style，但最后所有图层渲染的效果一样。<br>原因：因为geoserver的layer的source中(有些拗口)包括的Feature都一样，属于引用，所以会以最后一个Feature样式为准。<br>解决方法：使用feature的clone()方法</p>
]]></content>
  </entry>
  <entry>
    <title>geoserver自动发布服务</title>
    <url>/2020/05/21/12769.html</url>
    <content><![CDATA[<p>python安装gsconfig库<br>附上python代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># _*_coding:utf-8_*_</span></span><br><span class="line"><span class="keyword">from</span> geoserver.catalog <span class="keyword">import</span> Catalog</span><br><span class="line"><span class="keyword">from</span> geoserver.support <span class="keyword">import</span> JDBCVirtualTable, JDBCVirtualTableGeometry, JDBCVirtualTableParam</span><br><span class="line"></span><br><span class="line"><span class="comment"># 地图发布环境</span></span><br><span class="line">ENVIRONMENT_PUBLISH = <span class="string">&#x27;XXX_local&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 城市名称</span></span><br><span class="line">CITY = <span class="string">&#x27;xixian&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 年</span></span><br><span class="line">YEAR = <span class="number">2020</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 月</span></span><br><span class="line">MONTH = <span class="number">5</span></span><br><span class="line"></span><br><span class="line">CONFIGURE = &#123;</span><br><span class="line">    <span class="string">&#x27;XXX_local&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;CITY&#x27;</span>: CITY,</span><br><span class="line">        <span class="string">&#x27;GEOSERVER_HOST&#x27;</span>: <span class="string">&#x27;1.1.1.1&#x27;</span>,  <span class="comment"># geoserver地址</span></span><br><span class="line">        <span class="string">&#x27;GEOSERVER_PORT&#x27;</span>: <span class="string">&#x27;8080&#x27;</span>,  <span class="comment"># geoserver端口</span></span><br><span class="line">        <span class="string">&#x27;USERNAME&#x27;</span>: <span class="string">&#x27;admin&#x27;</span>,  <span class="comment"># geoserver用户名</span></span><br><span class="line">        <span class="string">&#x27;PASSWORD&#x27;</span>: <span class="string">&#x27;******&#x27;</span>,  <span class="comment"># geoserver密码</span></span><br><span class="line">        <span class="string">&#x27;DATABASE_MYSQL&#x27;</span>: <span class="string">&#x27;mysql&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cat = Catalog(<span class="string">&#x27;http://%s:%s/geoserver/rest/&#x27;</span> % (</span><br><span class="line">CONFIGURE[ENVIRONMENT_PUBLISH][<span class="string">&#x27;GEOSERVER_HOST&#x27;</span>], CONFIGURE[ENVIRONMENT_PUBLISH][<span class="string">&#x27;GEOSERVER_PORT&#x27;</span>]),</span><br><span class="line">              CONFIGURE[ENVIRONMENT_PUBLISH][<span class="string">&#x27;USERNAME&#x27;</span>], CONFIGURE[ENVIRONMENT_PUBLISH][<span class="string">&#x27;PASSWORD&#x27;</span>])</span><br><span class="line">store = cat.get_store(CONFIGURE[ENVIRONMENT_PUBLISH][<span class="string">&#x27;DATABASE_MYSQL&#x27;</span>], CITY)</span><br><span class="line">geom = JDBCVirtualTableGeometry(<span class="string">&#x27;geom&#x27;</span>, <span class="string">&#x27;LineString&#x27;</span>, <span class="string">&#x27;4326&#x27;</span>)</span><br><span class="line">ft_name = <span class="string">&#x27;line_speed_day_%s_%s&#x27;</span> % (YEAR, MONTH)</span><br><span class="line">epsg_code = <span class="string">&#x27;EPSG:4326&#x27;</span></span><br><span class="line">sql = <span class="string">&#x27;&#x27;&#x27;SELECT a.line_id line_id,a.line_direction line_direction,AVG(line_speed) line_speed,b.shape geom  FROM (SELECT * FROM data_line_speed_day  WHERE line_year =%s AND line_month=%s) a LEFT JOIN (SELECT DISTINCT line_id,is_up,shape FROM line</span></span><br><span class="line"><span class="string">WHERE YEAR =%s AND MONTH=%s) b ON a.line_id= b.line_id AND a.line_direction=b.is_up and b.shape is not null GROUP BY line_id,line_direction&#x27;&#x27;&#x27;</span> % (</span><br><span class="line">    YEAR, MONTH, YEAR, MONTH)</span><br><span class="line"><span class="built_in">print</span> sql</span><br><span class="line">keyColumn = <span class="literal">None</span></span><br><span class="line">parameters = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">jdbc_vt = JDBCVirtualTable(ft_name, sql, <span class="string">&#x27;false&#x27;</span>, geom, keyColumn, parameters)</span><br><span class="line">ft = cat.publish_featuretype(ft_name, store, epsg_code, jdbc_virtual_table=jdbc_vt)</span><br><span class="line">layer = cat.get_layer(ft_name)</span><br><span class="line">layer.default_style = cat.get_style(<span class="string">&#x27;stylefile&#x27;</span>)</span><br><span class="line">cat.save(layer)</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>geoserver WFS服务 Filter过滤查询踩坑一个</title>
    <url>/2020/06/28/35327.html</url>
    <content><![CDATA[<p>有时会通过视图方式发布一个图层，然后变相实现接口调用数据。<br>当数据属性中有id字段，并作为过滤字段查询时，使用in会查不出结果，调取geoserver日志，发现id并没有作为字段名称传入，可以采用or查询结果，但是需要在前端重新拼接一下id数组，</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;id=&#x27;</span>+idList.<span class="title function_">join</span>(<span class="string">&#x27;,or id=&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>gl.drawArrays的使用</title>
    <url>/2023/06/01/28338.html</url>
    <content><![CDATA[<p>缓冲区对象是WebGL系统中的一块存储区，可以在里面存储想要绘制的所有顶点数据，通过创建缓冲区，就能够一次性地向顶点着色器传入多个顶点的attribute变量的数据。</p>
<p><strong>gl.drawArrays(mode, first, count)</strong><br>1、modes指的是绘制方式，gl.POINTS,gl.LINES,gl.LINE_STRIP,gl.LINE_LOOP,gl.TRIANGLES,gl.TRIANGLES_STRIP,gl.TRIANGLE_FAN；<br>具体使用如下表<br><img src="/images/2023/06/gldrawarrays_mode.png" alt="mode类型"><br><img src="/images/2023/06/gldrawarrays_mode1.png" alt="mode类型"><br><img src="/images/2023/06/gldrawarrays_mode2.png" alt="预览"><br>2、first指的是从哪一个顶点开始绘制；<br>3、count指的是绘制需要多少个顶点。</p>
]]></content>
      <tags>
        <tag>WebGL</tag>
      </tags>
  </entry>
  <entry>
    <title>openlayers去除左上角放大缩小【+】【-】控件</title>
    <url>/2020/01/15/16123.html</url>
    <content><![CDATA[<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 去除地图左上角的放大缩小控件</span></span><br><span class="line">map.<span class="title function_">getControls</span>().<span class="title function_">forEach</span>(<span class="function"><span class="params">control</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (control <span class="keyword">instanceof</span> ol.<span class="property">control</span>.<span class="property">Zoom</span>) &#123;</span><br><span class="line">    map.<span class="title function_">removeControl</span>(control)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>WebGL缓冲区（buffer object）对象</title>
    <url>/2023/05/23/54690.html</url>
    <content><![CDATA[<p>WebGL 提供了一种很方便的机制，即缓冲区对象(buffer obiect)，它可以一次性地向着色器传人多个顶点的数据。<br>缓冲区对象是 WebGL 系统中的一块内存区域，我们可以一次性地向缓冲区对象中填充大量的顶点数据，然后将这些数据保存在其中，供顶点着色器使用。</p>
]]></content>
      <tags>
        <tag>WebGL</tag>
      </tags>
  </entry>
  <entry>
    <title>【20160808】出差工作日志-武汉</title>
    <url>/2016/08/08/56876.html</url>
    <content><![CDATA[<p>2016年08月08日星期一   网络分析现场辅导<br>早晨起床，窗外已经下起了雨，细雨蒙蒙，袅袅生烟，果然是江城–武汉，湖光山色美哉美哉。<br><img src="/images/P60807-1852291.jpg" alt="武汉大学校园"><br>俗话说武汉人的一天是从一碗热干面开始的，<span id="more"></span>好久不吃，一下来两份，居然都吃完了。住的地方距离培训的机房非常近，缺少了京城的快节奏，不紧不慢到了培训教室。武汉分公司的同事已经来了，我跟门口两位同事介绍了一下自己和来意，高妮给我引荐了余经理，然后都很热情。不一会，随着络绎不绝的老师签到入座，整个偌大的机房已经爆满，来的老师可真不少，之后得知，由于机位有限，有些老师知道晚了，很是遗憾的没能报上名。培训班正式开始后，武汉分公司彭总、余经理和武汉大学遥感信息工程学院各自作了简短的发言。<br><img src="/images/P60807-1852294.jpg" alt="彭总"><br><img src="/images/P60807-1852293.jpg" alt="秦副院长"><br><img src="/images/P60807-1852292.jpg" alt="余经理"><br>之后是一起到室外拍了个集体照，<strong>一个GIS产品能让许多行业方向、这么多人聚集在一起，感觉很有意义</strong>。<br>今天认识了太原大学、河南科技大学、河南理工大学、长江大学等几位高校的老师，此外还有山西、江西、武汉本地高校“组团”过来的一批老师，适时地作了一些简单地沟通与交流，了解他们来自各行各业，有气象、水文、城市规划、灾害、交通等领域，使用ArcGIS软件也都有不同的需求，对ArcGIS的强大很是赞赏，都希望能有专业的系统培训，以便快速上手使用。我也觉得有必要让更多的人了解这个软件产品，让更多的行业得以应用，使得GIS IS Everywhere能够充分体现。<br>同事们讲的很给力、很生动。奈何自己能力有限，水平一般，其实我也是抱着学习的态度来的，略微只能提供现场的小辅导。感觉今天在与别人学习和交流的过程中，学得很快和丰富。<br>今天主要遇到以下几个问题：<br>1、拍集体照的过程中，有个老师问我ArcGIS的使用权问题，如何才能授权使用正版，我较为详细的介绍了一下，然后说明如有购买意向，可以到公司官网联系售后，以作相应的报价和售后服务介绍；<br>2、有些老师反映自己所在的专业一直在用ArcGIS，但是缺乏ArcGIS软件专业系统的培训，用起来感觉没有效率；<br>3、由于公司每年的ArcGIS培训的专题内容不一样，有的单位每年都会派人来学习，但是每批人员不一样，还有一些老师之前只是接触过ArcGIS，比如查看数据，打开地图等基本简单操作，但是今年的主题是高级分析，他们操作起来着实吃力。所以又回到2的问题，他们希望每年都有ArcGIS整体的系统培训；<br>4、大部分高校教师反映由于接触的实际应用案例较少，加之数据和理论缺乏，希望培训的数据和相关内容能够共享，以便高校教学和软件推广使用；<br><img src="/images/20160808205006211.jpg" alt="QQ群数据共享"><br>5、大部分老师和单位人员使用的是Crack软件，有的问我使用Crack版本和正版有什么区别，根据之前我所了解的生产一线惨痛教训案例，我强烈建议他们单位购买和使用正版。我觉得在每次培训时都可以简短的说一下使用正版ArcGIS软件的好处，并做一些实际发生案例展示；<br>6、许多人对公司的ArcGIS知乎社区、官方微博微信还不太熟悉了解。<br><img src="/images/P60807.jpg" alt="学习资源"></p>
]]></content>
      <tags>
        <tag>Esri</tag>
        <tag>武汉</tag>
        <tag>出差</tag>
      </tags>
  </entry>
  <entry>
    <title>python学习小记</title>
    <url>/2017/02/17/4127.html</url>
    <content><![CDATA[<p><strong>1、关于if __name__ == ‘__main__‘ 如何正确理解?</strong><br><strong>name</strong> 是当前模块名，当模块被直接运行时模块名为 <strong>main</strong> 。<br>这句话的意思就是，<br>当模块被直接运行时，以下代码块将被运行，<br>比如当前文件是test.py,双击运行，或者在IDE中运行，<br>那么if __name__ == ‘__main__‘： 下面的代码就会运行，这些代码可用于测试test.py中函数、类写得是否正确</p>
<p>当模块是被导入时，代码块不被运行，<br>比如当前文件test.py被其他文件test123.py导入，<br>即在test123.py中以import test语句导入，<br>则test.py中if __name__ == ‘__main__‘下的语句将不会执行</p>
<p><strong>2、由于for循环与while循环可配合使用</strong></p>
<p><strong>3、正则表达式部分字符解释</strong><br><img src="/images/02171.jpg" alt="正则表达式"></p>
<p><strong>4、Markdown转义字符</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\\ 反斜杠</span><br><span class="line">\` 反引号</span><br><span class="line">\* 星号</span><br><span class="line">\_ 下划线</span><br><span class="line">\&#123;\&#125; 大括号</span><br><span class="line">\[\] 中括号</span><br><span class="line">\(\) 小括号</span><br><span class="line">\# 井号</span><br><span class="line">\+ 加号</span><br><span class="line">\- 减号</span><br><span class="line">\. 英文句号</span><br><span class="line">\! 感叹号</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>杂记</category>
      </categories>
      <tags>
        <tag>杂记</tag>
      </tags>
  </entry>
  <entry>
    <title>【20160809】出差工作日志-武汉</title>
    <url>/2016/08/09/57324.html</url>
    <content><![CDATA[<p>2016年8月9日星期二   地统计分析现场辅导<br>早晨起床后，准备在酒店旁边找个地方吃早餐，然后去机房。身后忽然有人喊江老师，扭头一看，<span id="more"></span>原来是培训的老师，年龄大概将近五十，这次的培训到这个岁数的貌似就几个，对其不断学习的劲头风格很是敬佩，然后第一次被人叫老师，而且还是年长者，略显心虚。遂一块儿去吃早餐，这之间了解到其来自江苏南京的南京工程建筑学院，建筑测绘测量方向，属于个人自费专程来学习的，开始聊得很好，最后在路上的一个问题把我给难住了，他说昨天已经听了一天的课，感觉这个软件确实很强大，那到底应用在那些行业，案例有哪些，与我这个方向到底怎么结合起来呢？一时语塞，之前也看了Esri总裁Jack在2016 UC上的演讲，也了解到ArcGIS肯定可以与建筑工程结合起来，但具体是如何运用的，我一时没有这个概念，感觉自己认识面窄了，回去要好好充电了。<br>上午余经理过来，喊我出去一块抬了一捆宣传册资料，感觉其很风趣幽默，中间还带着我去参观了一下武汉大学遥感测绘国家重点实验室，得知武汉大学自己研制的“珞珈一号”卫星马上要发射了，而且该卫星还是国内第一颗可拍摄夜景灯光数据的卫星，非常激动，很是期待。之前还了解该实验室还参与到我国的北斗卫星导航系统关键设计和技术改进，功不可没。作为GIS届的老牌公司，Esri与武汉大学的强强合作，无论是现在还是将来都是具有战略意义的。<br><img src="/images/b2b8455b6e663b086ae083f9301df474.jpg" alt="武汉大学遥感测绘国家重点实验室"><br>中午和一位看到很眼熟的老师聊天，加了联系方式后，得知其是甘肃科学院的，现在是我研究生学校的在职博士生，跟我还是一个学院的，算是师兄了，只怪世界太小，想想都很激动，居然这么远也赶过来了。<br>上午讲的是理论，实际操作比较少，现场辅导大部分问题是功能使用，没有昨天的数据导入和基本操作问题，自己在听的过程中，感觉对地统计分析的认识又上升一个台阶，明白如何科学合理的运用自己的数据进行合理的插值和预测。下午都是上机操作，主讲李才一步步耐心的教各位老师操作操作，下面大部分老师熟悉软件后都跟得上，加之自己以前专门钻过地统计分析，本科毕业和硕士毕业论文也用到过，出现的一些问题都是比较容易解决。其中两个来自江西气象单位的人员，聊到之前不知道ArcGIS还可以做地统计插值，他们一直用的是GRID，使用起来繁琐，参数和界面不太友好，涉及到编程，成图很不容易，反之ArcGIS只需几步点击操作，就可以生成理想的差值图，很是方便快捷。还有两个研究生是经济学专业，他们学了地统计之后，觉得成图很美观实用，问我怎么使用他们自己的数据坐地统计分析，我问清了他们的研究目的后，详细跟他们讲了一下我的想法，随后聊了不少关于基础数据和涉及到的GIS技术，感觉他们缺乏基础的GIS理论和ArcGIS操作，本来很简单易行的技术操作，由于隔行隔山，对于他们可能是技术壁垒，一时难以实现。现在我也认识到，现在的创新首先需要多学科的交叉，比如将其他行业与GIS技术结合，在新的空间维度上，认识更为明晰，可能有更多的发现。<br>这两天培训，才知道原来ArcGIS软件居然可以应用在这么多专业方向上，出乎意料的是老师们对其兴趣很高，静静想想，这款软件产品经过四十多年的不断更新和完善，大概已经契合到社会应用的方方面面，只是我们还没有挖掘到。所以，像早晨那位喊我老师的欧阳长辈一样，要不断地学习进步！</p>
]]></content>
      <tags>
        <tag>Esri</tag>
        <tag>武汉</tag>
        <tag>出差</tag>
      </tags>
  </entry>
  <entry>
    <title>【20160811】出差工作日志-武汉</title>
    <url>/2016/08/11/33261.html</url>
    <content><![CDATA[<p>2016年8月11日星期四   影像分析<br>研究生期间跟数据打交道中最多的是遥感影像，对一些遥感理论和常用影像都熟悉。但是管理这些复杂数据的时候，显得很混乱，查找、处理和分析数据的效率不高，耗费不少精力，后来才知道<span id="more"></span>ArcGIS中居然有镶嵌数据集这个极佳的影像数据存储方法，影像数据的预处理、镶嵌、融合等都可以实现。所以今天自己也要好好听听关于影像的系统培训。<br>开始来的时候，大概是武汉刚下过几场雨，感觉天气很凉爽，本来想每天下午回到宾馆，休息一会再出去转转大武汉，而之后这两天，气温陡升，终于领略到武汉的火炉烘烤，热浪扑面，全身360度无死角都能感受到，遂打消了，还是不出去折腾了，在宾馆看看奥运会比赛，学点东西，逛逛知乎也是不错的。<br>今天上午讲的是一些影像数据理论，听起来倒也轻松，之后剩下的一小时，是关于数据集的<br>简单创建，老师们都很给力，基本没什么问题，大家都在进步，很欣慰。<br>中午依然是去星湖园餐厅和余经理以及几位高校的教师吃了饭，其中有一位来自地大的刘老师，土地管理方向，目前在做一些土地确权方面的项目，由于知道消息晚了，今天才专程赶过来，我之前也做过土地确权的实习，当时用的是南方CASS软件成图，而现在我们国家统一采使用ArcGIS平台建立数据库，这次过来也是为了项目顺利开展，想过来学习一下。<br>下午依然是上机操作，过程中，貌似也出现不少问题，不少老师的操作都不能顺利进行下去，有些问题我也是第一次碰到，但最后也算解决。之后分析总结了一下，首先大部分可以排除软件的原因，因为有不少老师都成功创建和添加镶嵌数据集，软件安装环境都是一样，所以有几点原因：<br>1、    本来影像是栅格数据，数据量大，可能是拷贝不全，或者文件损害；<br>2、    操作错误，比如误选文件，保存文件名字前有数字等；<br>3、    栅格数据计算量大，也有计算机硬件的问题<br>4、    其他诡异未知的原因。<br>然后下午在这忙前忙后的过程中，就很快地过去了。今天也预示着为期四天的软件操作培训就结束了，余经理后来给老师们都发了调查问卷，期间是广告时间，宣传了一下公司一系列产品。这几天认识了不少来自全国各地的老师，明天是最后一天，期待与他们的交流，倾听他们的所说所感。<br><img src="/images/70.jpg" alt="Jack 2016UC"><br><img src="/images/82.jpg" alt="Jack 2016UC"></p>
]]></content>
      <tags>
        <tag>Esri</tag>
        <tag>武汉</tag>
        <tag>出差</tag>
      </tags>
  </entry>
  <entry>
    <title>【20160810】出差工作日志-武汉</title>
    <url>/2016/08/10/32813.html</url>
    <content><![CDATA[<p>2016年8月10日星期三   3D分析<br>由于之前对ArcGIS的3D分析没有过多了解，昨晚把今天高源要讲的PPT看了一下，不知不觉到了十二点多，睡得有些晚，<span id="more"></span>导致今天早晨成了起床困难户，但一想到武汉的热干面，顿时精神焕发，洗漱完直奔早餐店。来到武汉大学遥感信息工程学院的机房，已经是八点半了，居然是第一个到的，大概是大家熟悉了环境，都想踩着时间点来吧。<br>一直想对ArcGIS的3D分析了解更深入一些，对今天的PPT很是期待，昨天下午有两个老师才来，说主要是为了听3D分析的。。。。由于培训人员爆满，我只有把自己的电脑也带过来了，电脑中已提前备好了操作数据，在现场辅导之余也能亲手操作一遍。<br>早晨陆续有老师问我今年还有没有相关的培训，我建议他们关注公司的微博微信和官网动态，这么来看，这几天的培训反响很是不错，我自己也觉得这次出差也学到不少东西。<br>上午高源讲得很生动，主要是3D分析的基础理论以及数据导入、查看和相互转换，PPT、DEMO实例和操作结合，演讲的节奏把握得也很好，培训的老师都跟得上理解和操作进度，卡在操作步骤上很少，我也跟着学习了一下。但是上午操作的过程中，有个问题我之前确实是没注意到，就是geodatabase数据库文件不能加入TIN数据。还有一个是shp的3D文件不能保存纹理，保存在gdb是可以的。<br>中午和李才去吃饭，余经理和几个老师已经过去了，后来知道有个老师还是我本科学院的，加上昨天碰到研究生学校的师兄，一方面太巧了，另一方面感觉自己一直在这个圈子没走太远，这种缘由很奇怪。。。。<br>上午有个老师反映自己操作实现不了，说是软件有问题，中午吃完饭回去后，经过测试，发现是电脑硬件的问题，于是将其旁边的一台标示为坏了的电脑换了键盘鼠标，居然还可以使用。之前很有意思，这个老师试探性地问我会不会是CRACK版本的原因，这个猜想大概是曾经受到CRACK版本的伤害吧。。。<br>下午依然先是一些理论性的内容，随后是上机实际操作，问题出现了不少，基本上操作有误，或者是数据找错的几处错误，后来与一个老师讨论一些关于TIN数据的问题，加深了对该数据的认识。<br>这几天一直有两个来自江西的研究生问我怎么实现一个区域的经济热点分析，我之前没关注过经济这方面的内容，但是关于热点分析，我却一直很感兴趣，在ArcGIS中实现起来非常简单，我给他们的建议如下<br>1、首先整理好相应的基础数据，比如地图、经济统计数据等；<br>2、然后将这些数据在同一坐标系统下空间化；<br>3、用ArcGIS地统计工具进行表面插值，<br>具体参考<a href="http://resources.arcgis.com/zh-cn/help/main/10.2/index.html#//0031000000nz000000">http://resources.arcgis.com/zh-cn/help/main/10.2/index.html#//0031000000nz000000</a><br>4、然后可以参考<a href="http://blog.csdn.net/kikitaMoon/article/details/46424167%E8%BF%9B%E8%A1%8C%E7%BE%8E%E5%8C%96">http://blog.csdn.net/kikitaMoon/article/details/46424167进行美化</a><br><img src="/images/75.jpg" alt="热力图"><br><img src="/images/b5.jpg" alt="热力图"><br>然后是他们按照我提供的方法在这过程也出现不少问题，但都解决了。<br>热力图是近年来百度等几家公司通过推广宣传展示，才在互联网火起来的，实际上ArcGIS早就有这个实现方案，看来现在的ArcGIS应用一部分是跟着互联网的潮流，也说明该软件具有的前瞻性。<br>下午有老师说之前使用过Cityengine制作3D场景，前天学了ArcGIS的网络分析，问能不能进行建筑或地下的三维网络分析，目的是做一些建筑和地下通道设计评估，由于之前翻译过Esri2016年的UC部分视频，Jack曾经说过以下几句话，答案是显而易见的。<br><img src="/images/79.jpg" alt="Jack 2016UC"><br><img src="/images/27.jpg" alt="Jack 2016UC"><br>从这三天的现场辅导来看，基本所有现场发生的问题都能解决，没有不明原因的错误，应该是正版的原因吧，之前我使用CRACK的时候，经常碰到莫名其妙的错误，最终都是无解，让人抓狂。所以说支持正版，让社会生产环境更加健康有效率的运行。</p>
]]></content>
      <tags>
        <tag>Esri</tag>
        <tag>武汉</tag>
        <tag>出差</tag>
      </tags>
  </entry>
  <entry>
    <title>【20160812】出差工作日志-武汉</title>
    <url>/2016/08/12/33709.html</url>
    <content><![CDATA[<p>2016年8月12日星期五   ArcGIS新产品介绍与教师经验交流会<br><img src="/images/58.jpg" alt="2016年高校教师GIS技能培训"><br>早晨想着提前把房给退了，走的时候轻松一些。没想到其他人也都是这么想的。。。，<span id="more"></span>到了前台，都排起了队，到我弄完时，已经快九点了，培训会当然已经开始了，所以我就迟到了，前几天都是第一个到机房，到了今天的关键时刻却掉了链子，有点不应该，跟武汉的同事说了抱歉，终于落座。开始是武汉分公司罗雄主讲，是关于ArcGIS平台发布的新产品版本以及Esri其他产品介绍，虽然之前看过相关的PPT，但不同的人介绍之后，感觉对ArcGIS新产品特性又有新的认识。随后是进行高校教师GIS教学经验交流会，有三个老师分别作了演讲，他们来自武汉大学和中国地质大学，以及还邀请了我的本科母校学院老师，让我激动好一会儿。各位老师讲的很生动细致，并将GIS教学中的切实可行经验与其他老师分享，想想我现在学到GIS知识都得益于母校老师创新的教学方法。他山石，可攻玉，最后老师们在一块儿作了深入的讨论，互相坦诚交流经验，反映自己的问题，寻求解决的方案，核心的宗旨是让GIS更加深入人心，广泛传播。<br><img src="/images/69.jpg" alt="2016年高校教师GIS技能培训"><br>不知不觉到了中午的十二点，交流会结束了，也预示着2016年的培训会告一段落。送走最后一批老师后，整理了一下会场，已经快到一点，余经理请大家一起去吃饭，但是距高铁开车时间所剩无几，就在会场与武汉同事道了别，感谢他们这一周的热情招待。<br><img src="/images/71.jpg" alt="2016年高校教师GIS技能培训"><br>这次行程，确实收获不少，虽然是现场辅导，但初入职场，还属于技术行列，更多的是学习和锻炼，也认识不少的人，交流的机会大大增多，通过亲自体验，放宽了眼界，了解了GIS的强大甚至是无所不能。<br><img src="/images/182.jpg" alt="2016年高校教师GIS技能培训"></p>
]]></content>
      <tags>
        <tag>Esri</tag>
        <tag>武汉</tag>
        <tag>出差</tag>
      </tags>
  </entry>
  <entry>
    <title>一道难倒不少前端面试者的问题</title>
    <url>/2019/08/15/17967.html</url>
    <content><![CDATA[<blockquote>
<blockquote>
<p><strong>有一数组，里面有若干（数目和薪资一样多）数字，数字有重复，如何找出重复次数最多的数字</strong></p>
</blockquote>
</blockquote>
<hr>
<p>这个问题每次和组员面试时必问，其中能够理出逻辑过程的不到一半，大部分都是先声明一个空数组，然后经过数次循环对比处理，而首先声明空对象的不多（数据结构很重要呀！！！这是我们非科班的硬伤）。<br>常规答案如下：</p>
<span id="more"></span>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">5</span>];   </span><br><span class="line"><span class="keyword">let</span> numCount = &#123;&#125;, maxCountNum = <span class="number">0</span>, maxNum;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>, j = a.<span class="property">length</span>; i &lt; j; i++) &#123;</span><br><span class="line">  <span class="keyword">if</span> (a[i] <span class="keyword">in</span> numCount) &#123;</span><br><span class="line">	numCount[a[i]] += <span class="number">1</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">	numCount[a[i]] = <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (numCount[a[i]] &gt; maxCountNum) &#123;</span><br><span class="line">	maxNum = a[i];</span><br><span class="line"></span><br><span class="line">	maxCountNum=numCount[a[i]]</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(maxNum)</span><br></pre></td></tr></table></figure>
<p>曾经看到有人说通过一句js代码就可以实现，只是这个地方太小，他写不下了。这句话怎么似曾相似呢。。。。</p>
<blockquote>
<p>17世纪初，欧洲流传着公元三世纪古希腊数学家丢番图所写的《算术》一书。1621年，费马在巴黎买到此书并利用业余时间书中的不定方程进行了深入研究，从而创立了数论这门数学分支。在数论领域中，费马的巨大成果主要是费马大定理和费马小定理。其中以费马大定理最为著名。</p>
</blockquote>
<blockquote>
<p>1637年左右，费马在阅读丢番图《算术》的拉丁文译本时，曾在第11卷第8命题旁写道：“将一个立方数分成两个立方数之和，或一个四次幂分成两个四次幂之和，或者一般地将一个高于二次的幂分成两个同次幂之和，这是不可能的。关于此，我确信已发现了一种美妙的证法，可惜这里空白的地方太小，写不下。”</p>
</blockquote>
<blockquote>
<p>这就是著名的费马大定理：当整数n&gt;2时，关于x，y，z的方程没有正整数解。<br>费马大定理也叫“费马最后的定理”，“最后”的意思是：其它猜想都证实了，这是最后一个。费马究竟有没有证明费马大定理，至今是人们津津乐道的话题。费马大定理被提出后，经历多人猜想辩证，历经三百多年的历史，才于1995年由英国数学家怀尔斯证明，且其证明的过程相当艰深。<br><img src="/images/19081501.jpg" alt="费马大定理"></p>
</blockquote>
<p>话说回来，对于一行代码实现文章开头的问题，我开始是深信不疑的，然后今天尝试了一下，最后想法遭到了动摇。<br>在不声明其他变量的情况，我是这样写的：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">5</span>];</span><br><span class="line">a.<span class="title function_">map</span>(<span class="function">(<span class="params">value, index</span>) =&gt;</span> &#123;<span class="keyword">if</span> (index === <span class="number">0</span>) &#123;a[a.<span class="property">length</span>] = &#123;&#125;;a[a.<span class="property">length</span> - <span class="number">1</span>][value] = <span class="number">1</span>;a[a.<span class="property">length</span>] = value&#125; <span class="keyword">else</span> &#123;<span class="keyword">if</span> (value <span class="keyword">in</span> a[a.<span class="property">length</span> - <span class="number">2</span>]) &#123;a[a.<span class="property">length</span> - <span class="number">2</span>][value] += <span class="number">1</span>;<span class="keyword">if</span> (a[a.<span class="property">length</span> - <span class="number">2</span>][value] &gt; a[a.<span class="property">length</span> - <span class="number">1</span>]) &#123;a[a.<span class="property">length</span> - <span class="number">1</span>] =value&#125;&#125;<span class="keyword">else</span> &#123;a[a.<span class="property">length</span> - <span class="number">2</span>][value] = <span class="number">1</span>&#125;&#125;<span class="keyword">if</span>(index+<span class="number">3</span>===a.<span class="property">length</span>)<span class="variable language_">console</span>.<span class="title function_">log</span>(a[a.<span class="property">length</span>-<span class="number">1</span>])&#125;)</span><br></pre></td></tr></table></figure>
<p>实际上面一行是伪代码,ctrl+Alt+L格式化一下，重新排版成酱</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">a.<span class="title function_">map</span>(<span class="function">(<span class="params">value, index</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (index === <span class="number">0</span>) &#123;</span><br><span class="line">    a[a.<span class="property">length</span>] = &#123;&#125;;</span><br><span class="line">    a[a.<span class="property">length</span> - <span class="number">1</span>][value] = <span class="number">1</span>;</span><br><span class="line">    a[a.<span class="property">length</span>] = value</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (value <span class="keyword">in</span> a[a.<span class="property">length</span> - <span class="number">2</span>]) &#123;</span><br><span class="line">      a[a.<span class="property">length</span> - <span class="number">2</span>][value] += <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">if</span> (a[a.<span class="property">length</span> - <span class="number">2</span>][value] &gt; a[a.<span class="property">length</span> - <span class="number">1</span>]) &#123;</span><br><span class="line">        a[a.<span class="property">length</span> - <span class="number">1</span>] = value</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      a[a.<span class="property">length</span> - <span class="number">2</span>][value] = <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (index + <span class="number">3</span> === a.<span class="property">length</span>) <span class="variable language_">console</span>.<span class="title function_">log</span>(a[a.<span class="property">length</span> - <span class="number">1</span>])</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>看起来更复杂了，有兴趣的小伙伴可以试一试，欢迎留言交流</p>
]]></content>
  </entry>
  <entry>
    <title>【代码分享】海图数据批量导出</title>
    <url>/2016/08/28/62898.html</url>
    <content><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> arcpy</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment">#from arcpy import env</span></span><br><span class="line"><span class="comment">#from arcpy import interop</span></span><br><span class="line"><span class="comment">#arcpy.ImportToolbox(&quot;Model Functions&quot;)</span></span><br><span class="line">path=<span class="string">r&quot;C:\Users\Esri\Desktop\S57&quot;</span></span><br><span class="line"><span class="keyword">for</span> filename <span class="keyword">in</span> os.listdir(path):</span><br><span class="line">   filepath=path+<span class="string">&quot;\\&quot;</span>+filename</span><br><span class="line">   output_gdb = <span class="string">&quot;C:\Users\Esri\Desktop\s57togdb\&quot;+filename+&quot;</span>.gd<span class="string">b&quot;</span></span><br><span class="line"><span class="string">   arcpy.QuickImport_interop(filepath,output_gdb)</span></span><br><span class="line"><span class="string">   print filename+&quot;</span>have done<span class="string">&quot;</span></span><br><span class="line"><span class="string">   print &quot;</span>-------------------------------------------------------<span class="string">&quot;</span></span><br><span class="line"><span class="string">print &quot;</span>&lt;----------All are done !!!----------&gt;<span class="string">&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>GIS</category>
      </categories>
      <tags>
        <tag>GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>七牛视频外链测试</title>
    <url>/2016/08/29/9863.html</url>
    <content><![CDATA[<p>【简介】今年暑期上映的科幻大片《独立日2：卷入重来》，又一次带动了国内的票房市场，其绚丽的特效令人惊叹，各种科幻场面令人目不暇接、眼花缭乱，可能你想不到的是：<span id="more"></span>其中的一些3D模型和场景是由ArcGIS平台产品搭建和渲染的，amazing吧，是不是很酷，同样在一些游戏画面中可能也会有类似的应用。但是GIS在3D方面不单单能实现专业的视觉效果，它也构成了城市蓬勃发展的基础，建立智慧的社区和城市指日可待，GIS几乎是无处不在并将改变我们周围的一切。随着现场主持人深情并茂的诗意解读，一起沉浸于ArcGIS创建的未来世界吧。<br><video  height="710 " src="http://zyzz.qiniudn.com/%E7%89%87%E5%A4%B4.mp4" poster=" " controls="controls"><br></video><br><video  height="710 " src="http://zyzz.qiniudn.com/0-ArcGIS%E9%AB%98%E7%BA%A7%E5%88%B6%E5%9B%BE%E9%AD%85%E5%8A%9B.mp4" poster=" " controls="controls"><br></video><br><video  height="710 " src="http://v2.huangguofeng.com/pcs_download.php?id=18131&link=%2Fapps%2Fhgf_blog%2F%E3%80%90%E4%B8%AD%E8%8B%B1%E5%AF%B9%E7%85%A7%E5%AD%97%E5%B9%95%E3%80%915157-smart-3d-cities_960.mp4" poster=" " controls="controls"><br></video></p>
]]></content>
  </entry>
  <entry>
    <title>为什么加班到现在，运维是个大坑货！！！</title>
    <url>/2019/11/19/14351.html</url>
    <content><![CDATA[<p>一套系统，本地运行的没问题，同样的安装流程却无法成功运行。<br>捣鼓了两周，终于在今天晚上搞清了所有问题的原因所在：<br>编码一定保持一致呀喂！<br>编码一定保持一致呀喂！<br>编码一定保持一致呀喂！<br>操作系统的编码应该是UTF-8，非得改成GBK，数据库编码应该时UTF-8，为什么都变成latin….,tomcat为什么不配置跨域呢。。。。<br>运维是个大坑货呀！！！MD，晚上运维的晚饭还是我请的，现在就想弄死他。。。。</p>
]]></content>
  </entry>
  <entry>
    <title>使用ModelBuilder批量处理和命名问题解决</title>
    <url>/2017/01/12/50252.html</url>
    <content><![CDATA[<h2 id="社会分工是动物社会的标志之一，也是人类出现商品经济发展的基础。"><a href="#社会分工是动物社会的标志之一，也是人类出现商品经济发展的基础。" class="headerlink" title="社会分工是动物社会的标志之一，也是人类出现商品经济发展的基础。"></a>社会分工是动物社会的标志之一，也是人类出现商品经济发展的基础。</h2><p>这不，因为分工，我们可能得到一个地区不同部分的数据，这时想将其合并在一块，两三个还行，使用merge（合并）工具轻松解决，如果是10个，100个甚至成千上万个，那就难办了，<br>这时使用ModelBuilder是最方便快捷的。</p>
<span id="more"></span>
<p>首先我们在catalog中右击新创建一个工具箱，命名为“批处理”<br><img src="/images/01121.jpg" alt="创建工具箱"><br>然后右击批处理工具箱，新建一个模型工具<br><img src="/images/01122.jpg" alt="创建模型工具"><br>然后我们看到出现的模型构建器界面如下：<br><img src="/images/01123.jpg" alt="模型构建器"><br>现在我们有一些shp文件（放在同一个文件夹），所以先插入要素选择迭代器，目的是选取所有的shp文件<br><img src="/images/01124.jpg" alt="要素选择迭代器"><br>然后双击下图中的六边形<br><img src="/images/01125.jpg" alt="双击六边形"><br>选择shp文件所在的文件夹,然后点击确定<br><img src="/images/01126.jpg" alt="文件夹选择"><br>接下来插入collect value (不会翻译:-D)，目的是将选取的所有shp文件放在一起<br><img src="/images/01127.jpg" alt="collect value"><br>最后是全场核心合并工具上场，在系统工具箱中找到合并工具，直接拖到ModelBuilder中，PS：我这里是直接通过搜索找到，更为方便快捷，平时我们想实现某种功能时，可以使用关键字在搜索框中尝试搜索<br><img src="/images/01128.jpg" alt="合并工具"><br>点击模型验证，确认整个模型是否OK，确认无误后，就可以执行批量合并处理了<br><img src="/images/01129.jpg" alt="批量合并处理"><br>实际上在ModelBuilder中批量处理本质就是先能找到数据，然后合理的组织、处理和输出。</p>
<hr>
<h2 id="这里还有个问题是：比如但我们使用Zonal-Statistics-as-Table工具，利用ModelBuilder批量统计栅格区域时，"><a href="#这里还有个问题是：比如但我们使用Zonal-Statistics-as-Table工具，利用ModelBuilder批量统计栅格区域时，" class="headerlink" title="这里还有个问题是：比如但我们使用Zonal Statistics as Table工具，利用ModelBuilder批量统计栅格区域时，"></a>这里还有个问题是：比如但我们使用Zonal Statistics as Table工具，利用ModelBuilder批量统计栅格区域时，</h2><p><img src="/images/011210.jpg" alt="Zonal Statistics as Table工具"><br>输出表格名字为%Name%，运行会出现报错，提示名字不合法<br><img src="/images/011211.jpg" alt="报错"><br>目前还没有直接的解决办法，我这里提供办法是：将tif文件都导入gdb中，能够完美解决，可能是因为Esri鼓励大家将数据存储到gdb中，然后进行处理操作。</p>
<hr>
]]></content>
      <categories>
        <category>GIS</category>
      </categories>
      <tags>
        <tag>ModelBuilder</tag>
        <tag>批量</tag>
      </tags>
  </entry>
  <entry>
    <title>与ArcGIS有冲突的软件---黑名单（不定期更新）</title>
    <url>/2017/01/18/31842.html</url>
    <content><![CDATA[<h2 id="先亮个相：福昕阅读器、有道词典、搜狗输入法"><a href="#先亮个相：福昕阅读器、有道词典、搜狗输入法" class="headerlink" title="先亮个相：福昕阅读器、有道词典、搜狗输入法"></a>先亮个相：福昕阅读器、有道词典、搜狗输入法</h2><p>之前在用ArcGIS时，遇到了两个致命的问题，不管是重装软件，甚至是重装系统，都无法解决，但是其他人的软件都没有这种现象，无奈使用其他的功能去实现。<br>后来发现是软件之间的冲突导致。方法很简单，卸载冲突的软件或者关闭掉进程<br>下面列举黑名单，不，冲突的软件</p>
<span id="more"></span>
<h2 id="1、福昕阅读器"><a href="#1、福昕阅读器" class="headerlink" title="1、福昕阅读器"></a>1、福昕阅读器</h2><p>情景：这是在ArcGIS server 10.2（之后的版本貌似没有了）版本中碰到的，地图服务无法开启，提示4000端口被占用<br>解决方案：<a href="http://zyouzz.me/2016/08/20/28027.html">http://zyouzz.me/2016/08/20/28027.html</a></p>
<h2 id="2、有道词典"><a href="#2、有道词典" class="headerlink" title="2、有道词典"></a>2、有道词典</h2><p><img src="/images/01181.jpg" alt="有道词典"><br>情景：这是一位同事不幸碰到的，在Arcmap中执行工具时，会弹出警告，虽然工具可以执行，但是很扰民的<br>解决方案：关掉有道词典的取词功能</p>
<h2 id="3、搜狗输入法"><a href="#3、搜狗输入法" class="headerlink" title="3、搜狗输入法"></a>3、搜狗输入法</h2><p>情景：Arcmap中编辑状态，复制某个要素后，无法粘贴。可以使用merge工具或高级编辑中的复制工具代替<br>解决方案：关闭sogoucloud.exe进程，或者修改搜狗输入法设置\高级\云计算候选功能，<br><img src="/images/01182.jpg" alt="有道词典"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>具体原理我不太清楚，现在我说一下自己的猜测：<br>先从软件设计说起，一个软件中可能会有多个进程，每个进程占用不同接口，这里是没问题的<br>但是各个软件间没有达成协议或者标准，导致并没有考虑进程接口重复和相互占用的现象，</p>
<p>好比在中国是一夫一妻，而在非洲某些国家是一夫多妻，都是合法的，<br>但是如果一个非洲小伙娶了一个中国菇凉，而这个非洲小伙却没有告诉中国菇凉：他在自己国家已经有六个老婆了，到时一见面，那么文化冲突就来了。<br>好像比喻得有些~~~~</p>
<p>不扯了，通过以上几个软件，可能你发现了：他们默认是随电脑开机启动的，而ArcGIS（特别是桌面）基本不会有随机启动的进程。<br>当一个软件和另一个软件中某个进程使用相同的接口，先开机启动的软件进程会独占该接口，<br>之后使用相同接口的其他软件进程会起不来，对应的功能就用不了了，可想而知，软件卸载和系统重装都是徒劳的。</p>
]]></content>
      <categories>
        <category>GIS</category>
      </categories>
      <tags>
        <tag>GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Python进行语音识别---将音频转为文字</title>
    <url>/2017/03/31/13689.html</url>
    <content><![CDATA[<p>自从入职以来，一直在做关于ArcGIS视频的中英字幕，前前后后已经做了不少。基本都上传到网上了，有兴趣的可以看看<a href="http://i.youku.com/arcgis">http://i.youku.com/arcgis</a><br>说实话，这是个挺废时间的工作，一般一个5-6分钟的视频，从听写字幕脚本到时间轴校对，校对完之后逐句翻译，本着自己的水平，不求信达雅，只求通畅就行，然后再加一些DuangDuang字幕特效，最后将字幕和视频进行，基本是3-4个小时，可能看起来不可思议，有兴趣的可以亲自去尝试一下。<br>虽然过程是枯燥乏味的，但是最终看到自己的成果，成就感也是油然而生的。<br><img src="/images/03311.jpg" alt="中英字幕 小样"></p>
<span id="more"></span>
<p>前段时间美国Esri举办了全球的开发者大会，我在YouTube上看到陆续有上传的现场视频，于是下了下来，想着翻译一些，然后在ArcGIS知乎上等渠道做一下传播推广。但是有个问题是，这些视频没有字幕脚本，更坑爹的是，里面大部分是印度人主讲，带着印度咖喱腔的英语，听起来着实费解，所以翻译进度远不如之前，慢得出其，让我很困惑。做了几个视频的字幕后，实在没动力了，于是就暂停了。。。。<br>今天看了一篇报道，说是语音识别的技术，成熟度已经很可观了。突然想到：能不能将视频转为音频，然后使用一些语音识别的技术，完成这个艰巨的活呢。于是说干就干，百度搜索了许多音频转文字的技术。最后发现IBM公司有这项技术，对音频的识别率很高，并且提供有1000分钟的免费API（可以在<a href="https://console.ng.bluemix.net/">https://console.ng.bluemix.net</a>注册一下，获取API用户名和密码，后续会有用，这个很关键！！！），<br><img src="/images/03315.jpg" alt="IBM注册 应用部署"><br><img src="/images/03316.jpg" alt="账户密码"><br>正好也支持Python调用，整个过程很简单，就是先安装IBM的模块，这里我使用的是speechrecognition模块，在pycharm直接可以搜索到并安装，<br><img src="/images/03312.jpg" alt="speechrecognition模块"><br>speechrecognition模块不仅包含了IBM的语音识别API，还有微软、谷歌的语音识别API等等，带上github项目地址<a href="https://github.com/Uberi/speech_recognition#readme">https://github.com/Uberi/speech_recognition#readme</a><br><img src="/images/03313.jpg" alt="speechrecognition模块"><br>感叹到：Python的功能真是应有尽有，没有你想不到的。<br>然后我写了不多的几行代码，这个艰难的事情就迎刃而解了<br>思路主要如下，就是将视频转为WAV格式的音频（转为MP3等其他格式，可能识别不了），然后调用识别模块，就静静的等着或者去忙其他的事，最后会返回识别出来的文本<br><img src="/images/03314.jpg" alt="返回的识别文本"><br>准确率还是很高的，估摸有80%-90%<br>如果你手上正好有一堆的音频想转为文字，赶紧来试试，解放生产力的时候到了！！哈哈~~~<br>附上我写的拙劣代码<br>见笑见笑！</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*-coding:utf-8 -*-</span></span><br><span class="line">__author__ = <span class="string">&#x27;jiang&#x27;</span></span><br><span class="line"><span class="comment"># import eyed3</span></span><br><span class="line"><span class="comment"># import wave</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> speech_recognition <span class="keyword">as</span> sr</span><br><span class="line"><span class="comment"># from pydub import AudioSegment</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="comment"># ##获取音频时长</span></span><br><span class="line"><span class="comment"># f = wave.open(r&quot;C:\Users\Esri\Desktop\speech.wav&quot;,&quot;rb&quot;)</span></span><br><span class="line"><span class="comment"># timelength=int(f.getparams()[3]/f.getparams()[2])</span></span><br><span class="line"><span class="comment"># print(int(5.6))</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># ##音频分割输出</span></span><br><span class="line"><span class="comment"># readaudio=AudioSegment.from_wav(r&#x27;C:\Users\Esri\Desktop\speech.wav&#x27;)</span></span><br><span class="line"><span class="comment"># kn=int(timelength/30)+1</span></span><br><span class="line"><span class="comment"># for i in range(kn):</span></span><br><span class="line"><span class="comment">#      readaudio[i*30*1000:((i+1)*30+2)*1000].export(r&#x27;C:\Users\Esri\Desktop\speech\speech%d.wav&#x27;%(i+1), format=&quot;wav&quot;)</span></span><br><span class="line"><span class="comment">##获取文件夹下的音频文件名</span></span><br><span class="line">starttime = datetime.datetime.now()</span><br><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> os.listdir(<span class="string">r&#x27;C:\Users\Esri\Desktop\speech&#x27;</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%d %s 开始转换&quot;</span> % (i, name))</span><br><span class="line">    <span class="comment">##音频分块识别</span></span><br><span class="line">    r = sr.Recognizer()</span><br><span class="line">    <span class="comment"># for i in range(kn):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> sr.WavFile(<span class="string">r&#x27;C:\Users\Esri\Desktop\speech\%s&#x27;</span> % name) <span class="keyword">as</span> source:</span><br><span class="line">            audio = r.record(source)</span><br><span class="line">            IBM_USERNAME = <span class="string">&#x27;*******************&#x27;</span></span><br><span class="line">            IBM_PASSWORD = <span class="string">&#x27;*****&#x27;</span></span><br><span class="line">            text = r.recognize_ibm(audio, username=IBM_USERNAME, password=IBM_PASSWORD, language=<span class="string">&#x27;en-US&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(text)</span><br><span class="line">            <span class="built_in">open</span>(<span class="string">r&#x27;C:\Users\Esri\Desktop\text\%s.txt&#x27;</span> % name, <span class="string">&#x27;a+&#x27;</span>).write(text)</span><br><span class="line">            time.sleep(<span class="number">5</span>)</span><br><span class="line">            temptime = datetime.datetime.now().strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;%s %d %s 已完成&#x27;</span> % (temptime,i, name))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(e)</span><br><span class="line">        temptime = datetime.datetime.now().strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s %d %s 未完成&#x27;</span> % (temptime, i, name))</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">jietime = datetime.datetime.now()</span><br><span class="line">last=jietime-starttime</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;总共花费时间：%s&#x27;</span>%last)</span><br></pre></td></tr></table></figure>

<p><font size=4><b><br>测试结果分析：<br>1、IBM的API能识别英语、中文等好几种语言，识别的正确率很不错；<br>2、经过我的初步测试，IBM的识别机制是按照这样来的：先是将你的音频传到IBM的服务器，然后是打开音频实时识别，听起来很拗口，意思就是将音频放一遍，服务器边放边识别，最后将所有的识别以文本的形式（貌似是JSON格式，但是在speechrecognition模块中，已经转为文本）返回给你；<br>3、看完上面的识别机制，你可能会产生疑问：如果音频时间比较长，中间出现网络中断，之前识别的内容不就没了么。因此最好采取分段的方法，将音频分割为较短的几段，等效于实时的返回，减少丢失的问题；<br>4、经过测试，又有新问题，如果分段的话，超过10段以上，远程服务器会中断服务，也就是说：不能频繁的调接口，跟网站的发爬虫一样。多进程就别想了。最后部门石经理提供的解决办法是：识别一段后。等个5秒左右再循环下一个，照此方法可行。由于我自己的视频不长，数量也不多，就没做等待处理；<br>5、IBM的语音识别着实厉害，其他的语音识别等有时间再做测试。<br></b></font></p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>GIS</tag>
        <tag>python</tag>
        <tag>多字段</tag>
        <tag>符号渲染</tag>
      </tags>
  </entry>
  <entry>
    <title>使用python多进程爬取全国航班数据与可视化【附代码与excel数据（包含经纬度坐标）】</title>
    <url>/2018/05/07/60507.html</url>
    <content><![CDATA[<p>周末去天津浪了一圈，首先当然是去海边，海风吹着，可带劲了，和面筋歌的心情是一样的。</p>
<span id="more"></span>
<p><img src="/images/18050701.jpg" alt="可带劲了"><br>然后基本是在天津的海滨新区逛逛，参观了大沽口炮台遗址，内心是沉重的。<br><img src="/images/18050702.jpg" alt="大沽口炮台遗址"></p>
<p>此行本来看航母的，后来由于原因，没能登上航母，甚是遗憾呀，好在看到国产航母舾装完毕，即将进入海试，很激动呀。</p>
<p>废话中的废话不多说，进入正题。</p>
<p>–=============================================–</p>
<p>提示：没用到爬虫架构，请放心食用。<br>此次爬取的数据源是“哪儿哪儿都不想去网站”(<a href="https://link.zhihu.com/?target=http://flight.qunar.com/schedule/alphlet_order.jsp">https://link.zhihu.com/?target=http%3A//flight.qunar.com/schedule/alphlet_order.jsp</a>)<br>，开始时尝试了一下，该网站居然没有采取反爬虫措施，那就so easy了，多进程搞起！</p>
<p>在写爬虫前，我们要熟悉抓取的页面以及url结构规律，然后才能更有效率</p>
<p>例如北京到大同的航班查询url为<br><a href="http://flight.qunar.com/schedule/fsearch_list.jsp?departure=%E5%8C%97%E4%BA%AC&amp;arrival=%E5%A4%A7%E5%90%8C">http://flight.qunar.com/schedule/fsearch_list.jsp?departure=北京&amp;arrival=大同</a></p>
<p>那么我们就可以通过这个页面的城市来拼凑出所有的url地址<br><a href="https://link.zhihu.com/?target=http://flight.qunar.com/schedule/alphlet_order.jsp">https://link.zhihu.com/?target=http%3A//flight.qunar.com/schedule/alphlet_order.jsp</a><br><img src="/images/18050703.jpg" alt="大沽口炮台遗址"><br>由于要使用多进程，我这里预先将查询到的所有有航班url写入到txt中，</p>
<p>python环境是python2版本，按照惯例导入需要使用的模块，</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool</span><br><span class="line"><span class="keyword">import</span> sys</span><br></pre></td></tr></table></figure>
<p>然后利用multiprocessing模块进行多进程分任务抓取页面信息，并使用美丽的鲜汤（BeautifulSoup）解析需要的内容存进txt中，信息如下<br>“出发城市    出发城市y    出发城市x    到达城市    到达城市y    到达城市x    里程（公里）    航班班次    航空公司    机型    起飞时间    降落时间    起飞机场    起飞机场y    起飞机场x    降落机场    降落机场y    降落机场x    准点率    平均误点世间    周一班期    周二班期    周三班期    周四班期    周五班期    周六班期    周日班期    航班有效期开始    航班有效期结束”<br>该过程我主要写了三个函数来实现业务逻辑：任务分配、包装请求和网页内容获取、页面有效信息提取。<br><img src="/images/18050704.jpg" alt="业务逻辑函数"><br>然后基于百度的地理编码API获取出发城市、达到城市、出发机场、到达机场的经纬度坐标。</p>
<p>然后我就获得了全国15074条航班数据。<br><img src="/images/18050705.jpg" alt="航班数据"></p>
<p>该过程所有代码附后，代码拙劣，见笑见笑。</p>
<p>通过分析获取的数据，我们看到：</p>
<p>目前全国有185个城市或地区有航班<br><img src="/images/18050706.jpg" alt="开通航班城市"><br>一共有214个机场用于民用航线的起降<br><img src="/images/18050707.jpg" alt="机场"><br>我们都知道，一般飞机场都建在城市郊区或者更远的地方，各城市与当地机场的距离最远的排名Top30如下，PS：生活在这些城市的小伙伴们有木有切身的体会呢？<br><img src="/images/18050708.jpg" alt="城市到机场距离Top30"><br>另外，在一万五千次航班中，机型最多的是波音737(中)，其次是空客A320(中)，国产的新舟60(小)接近150架次<br><img src="/images/18050709.jpg" alt="机型"><br>其他的信息，大家可以自行探索了，就不一一赘述了。</p>
<p>然后我们可以使用ArcMap中的xy to line工具生成全国的航班换线图<br><img src="/images/18050710.jpg" alt="航线图"><br>由于爬取的数据比较完整，完全可以动态展示。后期有时间会再写一篇教程。</p>
<p>最后附上源码和数据</p>
<p>PS：以上展示或者数据计算可能有误，欢迎指出并交流。</p>
<p>excel数据（包含经纬度坐标）<br>链接:<a href="https://pan.baidu.com/s/149x089ZdxMQXZbymentYwQ">https://pan.baidu.com/s/149x089ZdxMQXZbymentYwQ</a> 密码:p1rn</p>
<p>源码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">geturl</span>(<span class="params">url</span>):</span><br><span class="line">    headers=&#123;<span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36&#x27;</span>&#125;</span><br><span class="line">    hbpage = requests.get(url, headers=headers).text</span><br><span class="line">    <span class="built_in">print</span> hbpage</span><br><span class="line">    <span class="keyword">return</span> hbpage</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">flyin</span>(<span class="params">city_citys,numm</span>):</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;&gt;&gt;&gt;&gt;&gt;进程%d开始&gt;&gt;&gt;&gt;&gt;&#x27;</span>%(numm+<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># time.sleep(5)</span></span><br><span class="line">    pageinfo = []</span><br><span class="line">    <span class="keyword">for</span> city_city <span class="keyword">in</span> city_citys:</span><br><span class="line">        hbpage=geturl(city_city)</span><br><span class="line">        <span class="comment"># print hbpage</span></span><br><span class="line">        bg=<span class="built_in">str</span>(city_city.split(<span class="string">&#x27;=&#x27;</span>)[-<span class="number">2</span>]).replace(<span class="string">&#x27;&amp;arrival&#x27;</span>,<span class="string">&#x27;&#x27;</span>)<span class="comment">#始发</span></span><br><span class="line">        dg=city_city.split(<span class="string">&#x27;=&#x27;</span>)[-<span class="number">1</span>]<span class="comment">#飞往</span></span><br><span class="line">        ft=(bg+dg)</span><br><span class="line">        <span class="built_in">print</span> ft</span><br><span class="line">        <span class="keyword">if</span> BeautifulSoup(hbpage, <span class="string">&#x27;lxml&#x27;</span>).select(<span class="string">&#x27;p[class=&quot;msg2&quot;]&#x27;</span>):</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;此线路无航班&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            hblc = BeautifulSoup(hbpage, <span class="string">&#x27;lxml&#x27;</span>).select(<span class="string">&#x27;em&#x27;</span>)[<span class="number">0</span>].get_text()</span><br><span class="line">            <span class="built_in">print</span> hblc</span><br><span class="line">            <span class="comment">#航班班次 第一列</span></span><br><span class="line">            hbtitle=BeautifulSoup(hbpage,<span class="string">&#x27;lxml&#x27;</span>).select(<span class="string">&#x27;span[class=&quot;title&quot;]&#x27;</span>)</span><br><span class="line">            hbbc1=[]</span><br><span class="line">            hkgs1=[]</span><br><span class="line">            jixing1=[]</span><br><span class="line">            <span class="keyword">for</span> ht <span class="keyword">in</span> hbtitle:</span><br><span class="line">                hbbc=re.findall(<span class="string">r&#x27;\w.?\d*&#x27;</span>,ht.get_text())[<span class="number">0</span>]<span class="comment">#航班班次</span></span><br><span class="line">                hkgs=ht.get_text().split(hbbc)[<span class="number">0</span>]<span class="comment">#航空公司</span></span><br><span class="line">                jixing=ht.get_text().split(hbbc)[<span class="number">1</span>]<span class="comment">#机型</span></span><br><span class="line">                hbbc1.append(hbbc)</span><br><span class="line">                hkgs1.append(hkgs)</span><br><span class="line">                jixing1.append(jixing)</span><br><span class="line">            <span class="comment">#起降时间 第二列</span></span><br><span class="line">            hbtime=BeautifulSoup(hbpage,<span class="string">&#x27;lxml&#x27;</span>).select(<span class="string">&#x27;span[class=&quot;c2&quot;]&#x27;</span>)[<span class="number">1</span>:]</span><br><span class="line">            qfsj1=[]</span><br><span class="line">            jlsj1=[]</span><br><span class="line">            <span class="keyword">for</span> qj <span class="keyword">in</span> hbtime:</span><br><span class="line">                qfsj=qj.get_text()[:<span class="number">5</span>]<span class="comment">#起飞时间</span></span><br><span class="line">                jlsj=qj.get_text()[<span class="number">5</span>:]<span class="comment">#降落时间</span></span><br><span class="line">                qfsj1.append(qfsj)</span><br><span class="line">                jlsj1.append(jlsj)</span><br><span class="line"></span><br><span class="line">            <span class="comment">#机场 第三列</span></span><br><span class="line">            hbjc=BeautifulSoup(hbpage,<span class="string">&#x27;lxml&#x27;</span>).select(<span class="string">&#x27;span[class=&quot;c3&quot;]&#x27;</span>)[<span class="number">1</span>:]</span><br><span class="line">            qfjc1=[]</span><br><span class="line">            jljc1=[]</span><br><span class="line">            <span class="keyword">for</span> jc <span class="keyword">in</span> hbjc:</span><br><span class="line">                qfjc=jc.get_text().split(<span class="string">&#x27;机场&#x27;</span>.decode(<span class="string">&#x27;utf-8&#x27;</span>))[<span class="number">0</span>]+<span class="string">&#x27;机场&#x27;</span>.decode(<span class="string">&#x27;utf-8&#x27;</span>)<span class="comment">#起飞机场</span></span><br><span class="line">                jljc=jc.get_text().split(<span class="string">&#x27;机场&#x27;</span>.decode(<span class="string">&#x27;utf-8&#x27;</span>))[<span class="number">1</span>]+<span class="string">&#x27;机场&#x27;</span>.decode(<span class="string">&#x27;utf-8&#x27;</span>)<span class="comment">#降落机场</span></span><br><span class="line">                qfjc1.append(qfjc)</span><br><span class="line">                jljc1.append(jljc)</span><br><span class="line"></span><br><span class="line">            <span class="comment">#准点率 第四列</span></span><br><span class="line">            zdl=BeautifulSoup(hbpage,<span class="string">&#x27;lxml&#x27;</span>).select(<span class="string">&#x27;span[class=&quot;c4&quot;]&#x27;</span>)[<span class="number">1</span>:]</span><br><span class="line">            zdl1=[]</span><br><span class="line">            wdsj1=[]</span><br><span class="line">            <span class="keyword">for</span> zd <span class="keyword">in</span> zdl:</span><br><span class="line">                zdlv=zd.get_text().split(<span class="string">&#x27;%&#x27;</span>)[<span class="number">0</span>]+<span class="string">&#x27;%&#x27;</span></span><br><span class="line">                wdsj=zd.get_text().split(<span class="string">&#x27;%&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">                zdl1.append(zdlv)</span><br><span class="line">                wdsj1.append(wdsj)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">#班期 第五列</span></span><br><span class="line">            bq=BeautifulSoup(hbpage,<span class="string">&#x27;lxml&#x27;</span>).select(<span class="string">&#x27;span[class=&quot;c5&quot;]&#x27;</span>)[<span class="number">1</span>:]</span><br><span class="line">            <span class="comment"># xx=[]</span></span><br><span class="line">            duty1 = []</span><br><span class="line">            <span class="keyword">for</span> xq <span class="keyword">in</span> bq:</span><br><span class="line">                week=re.split(<span class="string">&#x27;\&quot;&gt;\d&lt;/span&gt;&#x27;</span>,<span class="built_in">str</span>(xq))[:-<span class="number">1</span>]</span><br><span class="line">                week1=[]</span><br><span class="line">                ii=<span class="number">1</span></span><br><span class="line">                <span class="keyword">for</span> day <span class="keyword">in</span> week:</span><br><span class="line">                    <span class="keyword">if</span> ii==<span class="number">1</span>:</span><br><span class="line">                        dd=<span class="string">&#x27;周一&#x27;</span></span><br><span class="line">                    <span class="keyword">elif</span> ii==<span class="number">2</span>:</span><br><span class="line">                        dd = <span class="string">&#x27;周二&#x27;</span></span><br><span class="line">                    <span class="keyword">elif</span> ii==<span class="number">3</span>:</span><br><span class="line">                        dd = <span class="string">&#x27;周三&#x27;</span></span><br><span class="line">                    <span class="keyword">elif</span> ii==<span class="number">4</span>:</span><br><span class="line">                        dd = <span class="string">&#x27;周四&#x27;</span></span><br><span class="line">                    <span class="keyword">elif</span> ii==<span class="number">5</span>:</span><br><span class="line">                        dd = <span class="string">&#x27;周五&#x27;</span></span><br><span class="line">                    <span class="keyword">elif</span> ii==<span class="number">6</span>:</span><br><span class="line">                        dd = <span class="string">&#x27;周六&#x27;</span></span><br><span class="line">                    <span class="keyword">elif</span> ii==<span class="number">7</span>:</span><br><span class="line">                        dd = <span class="string">&#x27;周日&#x27;</span></span><br><span class="line">                    <span class="keyword">if</span> day[-<span class="number">4</span>:]==<span class="string">&#x27;blue&#x27;</span>:</span><br><span class="line">                        duty=<span class="string">&#x27;%s有班期&#x27;</span>%dd</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        duty=<span class="string">&#x27;%s没有班期&#x27;</span>%dd</span><br><span class="line">                    ii+=<span class="number">1</span></span><br><span class="line">                    week1.append(duty)</span><br><span class="line">                duty1.append(week1)</span><br><span class="line"></span><br><span class="line">            <span class="comment">#班期有效期 第七列</span></span><br><span class="line">            bqyxq = BeautifulSoup(hbpage, <span class="string">&#x27;lxml&#x27;</span>).select(<span class="string">&#x27;span[class=&quot;c7&quot;]&#x27;</span>)[<span class="number">1</span>:]</span><br><span class="line">            qs1=[]</span><br><span class="line">            js1=[]</span><br><span class="line">            <span class="keyword">for</span> yxq <span class="keyword">in</span> bqyxq:</span><br><span class="line"></span><br><span class="line">                yxs=yxq.get_text()[:<span class="number">10</span>]<span class="comment">#起始</span></span><br><span class="line">                yxe=yxq.get_text()[:<span class="number">10</span>]<span class="comment">#结束</span></span><br><span class="line">                qs1.append(yxs)</span><br><span class="line">                js1.append(yxe)</span><br><span class="line"></span><br><span class="line">            <span class="built_in">print</span> hbbc1</span><br><span class="line">            <span class="keyword">for</span> li <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(hbbc1)):</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&#x27;标记&#x27;</span></span><br><span class="line">                pageinfo.append(bg + <span class="string">&#x27;,&#x27;</span> + dg + <span class="string">&#x27;,&#x27;</span> + hblc + <span class="string">&#x27;,&#x27;</span> + hbbc1[li] + <span class="string">&#x27;,&#x27;</span> + hkgs1[li] + <span class="string">&#x27;,&#x27;</span> + jixing1[li] + <span class="string">&#x27;,&#x27;</span> + qfsj1[li] + <span class="string">&#x27;,&#x27;</span> + jlsj1[li] + <span class="string">&#x27;,&#x27;</span> + qfjc1[li] + <span class="string">&#x27;,&#x27;</span> + jljc1[li] + <span class="string">&#x27;,&#x27;</span> + zdl1[li] + <span class="string">&#x27;,&#x27;</span> + wdsj1[li] + <span class="string">&#x27;,&#x27;</span> + duty1[li][<span class="number">0</span>] + <span class="string">&#x27;,&#x27;</span> + duty1[li][<span class="number">1</span>] + <span class="string">&#x27;,&#x27;</span> + duty1[li][<span class="number">2</span>] + <span class="string">&#x27;,&#x27;</span> +duty1[li][<span class="number">3</span>] + <span class="string">&#x27;,&#x27;</span> + duty1[li][<span class="number">4</span>] + <span class="string">&#x27;,&#x27;</span> + duty1[li][<span class="number">5</span>] + <span class="string">&#x27;,&#x27;</span> + duty1[li][<span class="number">6</span>] + <span class="string">&#x27;,&#x27;</span> + qs1[li] + <span class="string">&#x27;,&#x27;</span> + js1[li] + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="built_in">print</span> bg + <span class="string">&#x27;,&#x27;</span> + dg + <span class="string">&#x27;,&#x27;</span> + hblc + <span class="string">&#x27;,&#x27;</span> + hbbc1[li] + <span class="string">&#x27;,&#x27;</span> + hkgs1[li] + <span class="string">&#x27;,&#x27;</span> + jixing1[li] + <span class="string">&#x27;,&#x27;</span> + qfsj1[li] + <span class="string">&#x27;,&#x27;</span> + jlsj1[li] + <span class="string">&#x27;,&#x27;</span> + qfjc1[li] + <span class="string">&#x27;,&#x27;</span> + jljc1[li] + <span class="string">&#x27;,&#x27;</span> + zdl1[li] + <span class="string">&#x27;,&#x27;</span> + wdsj1[li] + <span class="string">&#x27;,&#x27;</span> + duty1[li][<span class="number">0</span>] + <span class="string">&#x27;,&#x27;</span> + duty1[li][<span class="number">1</span>] + <span class="string">&#x27;,&#x27;</span> + duty1[li][<span class="number">2</span>] + <span class="string">&#x27;,&#x27;</span> +duty1[li][<span class="number">3</span>] + <span class="string">&#x27;,&#x27;</span> + duty1[li][<span class="number">4</span>] + <span class="string">&#x27;,&#x27;</span> + duty1[li][<span class="number">5</span>] + <span class="string">&#x27;,&#x27;</span> + duty1[li][<span class="number">6</span>] + <span class="string">&#x27;,&#x27;</span> + qs1[li] + <span class="string">&#x27;,&#x27;</span> + js1[li] + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">    <span class="built_in">print</span> pageinfo</span><br><span class="line">    <span class="keyword">return</span> pageinfo</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">urlsplit</span>(<span class="params">urls,jiange</span>):</span><br><span class="line">    urli=[]</span><br><span class="line">    <span class="keyword">for</span> newj <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(urls),jiange):</span><br><span class="line">        urli.append(urls[newj:newj+jiange])</span><br><span class="line">    <span class="keyword">return</span> urli</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    finalre=[]</span><br><span class="line">    files = <span class="built_in">open</span>(<span class="string">r&#x27;C:\Users\username\Desktop\url.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">    urls=[]</span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> files.read().split():</span><br><span class="line">        urls.append(url)</span><br><span class="line">    urlss=urls[:<span class="number">6</span>]</span><br><span class="line">    urlll=urlsplit(urlss,<span class="number">2</span>)</span><br><span class="line">    p = Pool(<span class="number">2</span>)</span><br><span class="line">    result=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(urlll)):</span><br><span class="line">        result.append(p.apply_async(flyin,args=(urlll[i],i)))</span><br><span class="line">    p.close()</span><br><span class="line">    p.join()</span><br><span class="line">    <span class="built_in">print</span> result</span><br><span class="line">    <span class="keyword">for</span> result_i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(result)):</span><br><span class="line">        <span class="built_in">print</span> result[result_i]</span><br><span class="line">        fin_info_result_list = result[result_i].get().decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        finalre.extend(fin_info_result_list)</span><br><span class="line">    filers=<span class="built_in">open</span>(<span class="string">r&#x27;C:\Users\username\Desktop\url55.txt&#x27;</span>,<span class="string">&#x27;a+&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> fll <span class="keyword">in</span> finalre:</span><br><span class="line">        filers.write(<span class="built_in">str</span>(fll).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>关于bash中的2&gt;&amp;1 &amp;理解</title>
    <url>/2023/06/01/62539.html</url>
    <content><![CDATA[<p>经常运行一些python脚本或者jar包，如果直接运行python *.py，或者 java -jar *.jar,再进行其他操作，需要终止运行，所以应该是后台运行。<br>这也就经常看到这样的句式：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nohup python *.py &gt; nohup.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>

<p>1、开始的nohup（no hang up, 不挂起），用于系统后台不挂断的运行命令；<br>2、中间的python *.py我们好理解，就是运行脚本；<br>3、&gt; nohup.log 意思将新建nohup.log文件，并将运行日志写到该文件中，我们可以使用&gt;&gt;，表示追加日志内容；<br>4、bash中0，1，2分别表示STDIN_FILENO（标准输入）,STDOUT_FILENO（ 标准输出）,STDERR_FILENO（标准错误），输入输出可以重定向，如cat &lt; text.c将test.c重定向为cat命令的输入源，输出重定向就是将指定具体的输出目标以替换默认的标准输出。默认输入只有一个（0，STDIN_FILENO），而默认输出有两个（标准输出1，STDOUT_FILENO，标准错误输出2，STDERR_FILENO），因此输出的错误信息会被输出到2，而普通信息会输出到1，但我们希望在一个终端下看到所有的信息，那么综上就应该是2&gt;1,而2&gt;&amp;1中&amp;是为了bash将1解释成标准输出而不是文件1，至于2&gt;&amp;1 &amp;中最后一个&amp;则是让bash在后台运行。</p>
]]></content>
      <tags>
        <tag>bash</tag>
      </tags>
  </entry>
  <entry>
    <title>内牛满面装Portal for ArcGIS</title>
    <url>/2016/08/28/28862.html</url>
    <content><![CDATA[<p>之前尝试用过ArcGIS Server，感觉装起来很容易，发布服务也很方便。<br>之后又了解到Portal for ArcGIS（简单说，就是管理集群部署和分工协作的解决方案等等，我觉得现在的集群部署的存在，还是因为单机器硬件的问题短板），于是很想尝试安装一下。<span id="more"></span><br>因为已经装过Server，就直接解压Portal for ArcGIS，嗯，安装软件很顺利，信心爆棚，并不像ArcGIS知乎上反映的那么难。<br>首次是Portal for ArcGIS主页自动打开，我本以为是一个令人惊喜的画面，谁知提示需要再装一个Web Adaptor，纳尼，什么鬼，侬不理解。。怎么貌似有些小复杂，后来证明确实有些复杂，“小”字也可以去掉了。<br>随后查了一下，如下：<br><strong>webadaptor本身的功能就是做请求转发。使用了Webadaptor后，不再通过portal的默认端口7080和7443端口曝露portal 网络地址，而是通过80和443端口曝露portal服务。与现有web server集成，向portal转发从webs erver来的请求。使用webadaptor可以提高portal的安全性，走80或者443端口后，就不用在其地址中曝露7080或者7443端口。<br>参考：<a href="http://zhihu.esrichina.com.cn/question/13070">为什么webadaptor是portal的一个必须组件</a></strong><br>装完webadaptor，觉得应该大功告成了，但是图样图森破。<br>配置配置Portal与Web Adaptor时，需要输入portal的全限定域名称，这不得不说的是，到这一步才提示，真是一个雷区，之前装的Portal for ArcGIS看起来是废了，好吧，计算机改成全限定域名称，提示需要重启电脑，索性也将ArcGIS Server、Portal for ArcGIS和webAdaptor卸载掉。<br>最终还是成功了！<br><img src="/images/30.jpg" alt="Portal for ArcGIS"><br>装Portal for ArcGIS感觉Esri对网络安全做的很好，比如WebAdaptor的使用。但是对于新手或者网络小白来说，装的过程着实是内牛满面，希望以后会有更为简便的安装。</p>
]]></content>
      <categories>
        <category>GIS</category>
      </categories>
      <tags>
        <tag>GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>发现一个大坑！！！</title>
    <url>/2019/06/14/38442.html</url>
    <content><![CDATA[<h2 id="本篇文章是为了重现element-ui的新版本（2-9-1）BUG所提交的issue"><a href="#本篇文章是为了重现element-ui的新版本（2-9-1）BUG所提交的issue" class="headerlink" title="本篇文章是为了重现element-ui的新版本（2.9.1）BUG所提交的issue"></a>本篇文章是为了重现element-ui的新版本（2.9.1）BUG所提交的issue</h2><p>前几天没事重新安装了依赖，也是闲的蛋疼，更新完后就悲剧了，表格高度全都变为100px。<br><img src="/images/19061401.jpg" alt="100px!!!"><br>然后捯饬了半天，一直到今天上午，what the f/*/*K!。<br>这个问题解决不了，因此自己无法打包工程部署，只能麻烦组员了。<br>下午决定再次攻克一下：</p>
<p>**使用排除法</p>
<p>1、排除开发环境：操作系统+idea+npm+node+vue版本都一致；<br>2、排除代码错误：都在git上同一分支下；<br>3、排除接口数据：都是同一个后台接口环境；</p>
<p>以上，那么真相只有一个：都是蛋疼惹的事—依赖版本</p>
<p>**破案过程：<br>由于package.json中声明所有依赖使用最新版本，所以写了一个脚本放在我和组员的依赖文件夹（node_modules）下，获取安装依赖的名称和版本；<br>然后使用notepad++中的compare插件对比，才发现是element-ui的版本不一致，去其官网查看，果然半个月前更新了版本，然后区GitHub的代码仓库查看release，下图可以说明一些问题，<br><img src="/images/19061402.jpg" alt="element-ui 2.9.1"><br>于是回退版本，这个鸟问题终于解决了！<br>目前的解决方案是将将package.json中的</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;element-ui&quot;</span>: <span class="string">&quot;^2.8.2&quot;</span>,</span><br></pre></td></tr></table></figure>
<p>改为</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;element-ui&quot;</span>: <span class="string">&quot;2.8.2&quot;</span>,</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>关于多圆（大于2）重叠的面积计算</title>
    <url>/2019/06/24/56673.html</url>
    <content><![CDATA[<p>这个问题是我在计算公交站点覆盖率（公交300米范围面积/服务区面积）中遇到的。<br>有以下两种计算方式</p>
<p>1、ArcGIS<br>使用buffer（缓冲区）工具，将所有的公交站点生成300米的缓冲圆<br><img src="/images/19062401.jpg" alt="缓冲区"><br>注意：融合类型选择为全部</p>
<span id="more"></span>
<p>2、自己实现<br>之前以为这个计算应该不难，用纯数学计算就可以求得结果，但是接下来的问题让我陷入了对人生的思考，经过查找文献，得到以下结论。<br>1）两圆重叠—简单！！！<br>2）两个圆以上的重叠精确计算—数学界的世纪难题！！！<br><img src="/images/19062403.jpg" alt="多圆重叠面积"><br>所以，只能通过模拟计算，这也是计算机最初诞生的原因。<br>经典的蒙特卡洛模拟计算真是屡试不爽。</p>
<p>这里我以前端的JavaScript为例<br>情景：在地图上随机框画了一个圆形区域，框选区域内部有若干个公交站点<br>通过模拟计算的流程是这样：<br><img src="/images/19062404.jpg" alt="画圆"></p>
<p>代码脚本如下</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用蒙特卡洛方法模拟计算站点覆盖率</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> sample 样本数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> drawCircleToPolygon 所画区域外接多边形</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> stopsLngLatList 所画区域内站点坐标</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> distance 站点覆盖半径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span> &#123;<span class="type">string</span>&#125; 返回站点覆盖率</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">calculateStopCoverRate</span>(<span class="params">sample, drawCircleToPolygon, stopsLngLatList, distance</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> insidePointsNumber = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">let</span> randomPoints = turf.<span class="title function_">random</span>(<span class="string">&#x27;points&#x27;</span>, sample, &#123;<span class="attr">bbox</span>: drawCircleToPolygon.<span class="title function_">getExtent</span>()&#125;).<span class="property">features</span>.<span class="title function_">map</span>(<span class="function"><span class="params">value</span> =&gt;</span> value.<span class="property">geometry</span>.<span class="property">coordinates</span>);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> m = <span class="number">0</span>, n = randomPoints.<span class="property">length</span>; m &lt; n; m++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>, j = stopsLngLatList.<span class="property">length</span>; i &lt; j; i++) &#123;</span><br><span class="line">      <span class="keyword">let</span> centerRandomPoint = ol.<span class="property">proj</span>.<span class="title function_">fromLonLat</span>([randomPoints[m][<span class="number">0</span>], randomPoints[m][<span class="number">1</span>]]);</span><br><span class="line">      <span class="keyword">if</span> (<span class="title class_">Math</span>.<span class="title function_">pow</span>(centerRandomPoint[<span class="number">0</span>] - stopsLngLatList[i][<span class="number">0</span>], <span class="number">2</span>) + <span class="title class_">Math</span>.<span class="title function_">pow</span>(centerRandomPoint[<span class="number">1</span>] - stopsLngLatList[i][<span class="number">1</span>], <span class="number">2</span>) &lt;= distance * distance) &#123;</span><br><span class="line">        insidePointsNumber = insidePointsNumber + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> (insidePointsNumber / sample * <span class="number">100</span>).<span class="title function_">toFixed</span>(<span class="number">2</span>) + <span class="string">&#x27; %&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>1）首先引入turf插件，使用turf.random在所画的圆内生成随机点，获取每个随机点的坐标；<br>2）使用openlayers的ol.proj.fromLonLat转换方法，将经纬度转为平面坐标；<br>3）计算随机点是否在圈出的站点300米（distance）范围内，如果在，标记一下，break该点退出，计算下一个随机点，<br>4）用标记到在站点范围的统计数值insidePointsNumber除以样本值就是站点覆盖率，<br>5）同样,覆盖面积就等于所画圆的面积乘以覆盖率</p>
<p>**<br>sample 样本数数值越大，所需时间越长，计算结果越准确</p>
<p>关于蒙特卡洛，有很多有趣的事，比如计算Π值，古代的蒲丰投针<br><img src="/images/19062402.gif" alt="计算Π"></p>
<p>相比精确的数学计算，模拟计算有点玄学的意味，但不失为简单粗暴的途径。</p>
]]></content>
  </entry>
  <entry>
    <title>在ArcGIS以弹窗形式挂接图片</title>
    <url>/2016/11/22/869.html</url>
    <content><![CDATA[<p>1、首先右击图层打开属性表，添加一个文本型的字段，长度改为150<br><img src="/images/11221.jpg" alt="ArcGIS 挂接图片"></p>
<span id="more"></span>
<p>2、开启编辑，图加图片路径，然后关闭编辑保存<br> <img src="/images/11225.jpg" alt="ArcGIS 挂接图片"><br>3、右击图层，打开图层属性，点击弹窗选项课，如下所示，选择图片路径字段就OK了<br> <img src="/images/11224.jpg" alt="ArcGIS 挂接图片"><br>4、使用工具条上的弹窗工具，点击要素，<br> <img src="/images/11223.jpg" alt="ArcGIS 挂接图片"><br>5、就可以显示图片了<br> <img src="/images/11222.jpg" alt="ArcGIS 挂接图片"></p>
]]></content>
      <categories>
        <category>GIS</category>
      </categories>
      <tags>
        <tag>GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Docker搭建自己的定制化地图服务器</title>
    <url>/2019/07/02/956.html</url>
    <content><![CDATA[<p>–==========================–<br>产品经理是帮你成长的最强动力。<br>–==========================–<br>这不，饱受吐槽的UI终于被产品经理提上了日程，第一个献祭的就是地图底图修改。<br>之前一直用的是捷泰午夜蓝地图，这个配色是我个人最喜欢的<br><img src="/images/19070201.jpg" alt="午夜蓝"><br>但是产品经理要求是这样的配色</p>
<span id="more"></span>
<p><img src="/images/19070202.jpg" alt="产品经理的配色"><br>于是找了一圈，类似的样式倒是有，细节仍然不中，接连被否<br><img src="/images/19070203.jpg" alt="思考人生"><br>遂暂时搁置，今天查资料的时候，偶然看到OpenMapTiles Map Server这个神奇的宝贝；<br>打开其官网<a href="https://openmaptiles.com/">OpenMapTiles Map Server</a>，<br>越看越激动，终于有了转机。<br>我们可以基于OpenMapTiles Map Server构建自己的自定义离线底图服务，支持OGC标准的WMS，WMTS，矢量和栅格切片都是ok的。<br>由于基于Docker搭建，过程及其简单，跟将大象装进冰箱一样样的，小伙伴们不用慌。<br>搭建过程如下：<br>一、安装虚拟机和centos系统，版本如下<br>1)vmware：15.0.4 build-12990004，【下载地址：<a href="https://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.0.4-12990004.exe">https://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.0.4-12990004.exe</a>】<br>2)centos: 7.3.1611，【下载地址：<a href="http://mirror.nsc.liu.se/centos-store/7.3.1611/isos/x86_64/">http://mirror.nsc.liu.se/centos-store/7.3.1611/isos/x86_64/</a>】<br>二、安装Docker<br>执行以下语句就ok了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -sSL https://get.docker.com/ | sh</span><br></pre></td></tr></table></figure>
<p>三、安装应用</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run --rm -it -v $(pwd):/data -p 8080:80 klokantech/openmaptiles-server</span><br></pre></td></tr></table></figure>
<p><img src="/images/19070204.jpg" alt="安装应用"><br>这里会提示你在浏览器中通过8080端口访问配置页面<a href="https://localhost:8080/">https://localhost:8080</a><br><img src="/images/19070205.jpg" alt="配置"><br>最主要的是第三步样式配置<br><img src="/images/19070206.jpg" alt="自定义样式配置"><br>这里单击Advanced options,会看到上传样式配置文件json的地方，<br> <img src="/images/19070207.jpg" alt="自定义样式配置"><br> 关于生成json文件的地方，我们可以去自定义样式<a href="https://editor.openmaptiles.org/">https://editor.openmaptiles.org/</a><br>  <img src="/images/19070208.jpg" alt="自定义样式配置"></p>
<p>【笔记】：每次开机手动启动docker命令为</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl start docker </span><br></pre></td></tr></table></figure>
<p> 这样，we choose freedom!<br> <img src="/images/19070209.jpg" alt="freedom"></p>
]]></content>
  </entry>
  <entry>
    <title>如何在ArcGIS中绘制漂亮的萤火图</title>
    <url>/2018/04/24/14122.html</url>
    <content><![CDATA[<p>这几天看到有人在一些群里问下面的图是怎么做的<br><img src="/images/18042401.jpg" alt="萤火图"><br>该图叫做萤火图，看起来非常漂亮、酷炫。<br>那么在ArcGIS平台中如何制作这样的地图呢？</p>
<span id="more"></span>
<p>实际在ArcMap、ArcGIS Pro和ArcGIS Enterprise中都是可以实现的<br>核心是要有一张带透明通道的png图片<br><img src="/images/18042402.jpg" alt="png图片"><br>首先以ArcMap为例，我们知道萤火虫是在夏天的夜晚出现的，所以我们选择黑色主题的午夜蓝底图<br><img src="/images/18042403.jpg" alt="午夜蓝底图"><br><img src="/images/18042405.jpg" alt="午夜蓝底图"><br>PS：如果添加地图的选项为灰色，要看一下状态栏的ArcMap网络是否连通<br><img src="/images/18042404.jpg" alt="网络连通"><br>如果还是不通，该底图的链接为：<a href="https://map.geoq.cn/arcgis/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/WMTS/1.0.0/WMTSCapabilities.xml">https://map.geoq.cn/arcgis/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/WMTS/1.0.0/WMTSCapabilities.xml</a><br>通过以下方式添加底图<br><img src="/images/18042408.jpg" alt="WMTS底图"></p>
<p>开始~~<br>（1）加载我们的数据点，看起来很普通。。。<br><img src="/images/18042406.jpg" alt="数据点"><br>（2）添加前面说到的核心：一张带透明通道的png图片<br><img src="/images/18042407.jpg" alt="添加图片符号"><br>有些效果了<br><img src="/images/18042409.jpg" alt="添加图片符号"><br>（3）我们可以调整该图层的符号大小，依据的是“水质”字段<br><img src="/images/18042410.jpg" alt="符号大小量化渲染"><br>（4）符号大小设置为从18到28<br><img src="/images/18042411.jpg" alt="符号大小"><br>完成！效果如下<br><img src="/images/18042412.jpg" alt="萤火图"></p>
<p>实际ArcGIS Pro和ArcGIS Enterprise中也都一样，这里就不一一讲述了。<br>最终效果如下：<br><img src="/images/18042413.jpg" alt="萤火图-ArcGIS Pro"><br><img src="/images/18042414.jpg" alt="萤火图-ArcGIS Enterprise"></p>
<p>最后附上示例数据下载链接: <a href="https://pan.baidu.com/s/1tiZqaERqrGj-YUskYlTVIQ">https://pan.baidu.com/s/1tiZqaERqrGj-YUskYlTVIQ</a> 密码: eckw</p>
]]></content>
      <categories>
        <category>GIS</category>
      </categories>
      <tags>
        <tag>ArcGIS</tag>
        <tag>萤火图</tag>
      </tags>
  </entry>
  <entry>
    <title>如何让Arcmap支持加载Excel 2003以上的xlsx格式文件</title>
    <url>/2017/07/25/61373.html</url>
    <content><![CDATA[<p>相信大家在Arcmap中加载Excel的xlsx文件时，可能会出现该格式不支持的状况，而xls没问题。<br>esri官方解释是：需要装office 2007版本或者office 2007 驱动程序<br>因此操作系统装了office 2010甚至更高的版本是不行的<br>解决的方法是：安装一个office 2007 驱动程序就行了。<br>附上下载地址<a href="https://pan.baidu.com/s/1qYjXQ80">2007 驱动程序</a><br><img src="/images/07251.jpg" alt="Excel的xlsx文件"></p>
]]></content>
      <categories>
        <category>GIS</category>
      </categories>
      <tags>
        <tag>arcgis</tag>
        <tag>arcmap</tag>
        <tag>xlsx</tag>
      </tags>
  </entry>
  <entry>
    <title>字段值固定位数，位数不够补0位</title>
    <url>/2017/08/11/17385.html</url>
    <content><![CDATA[<p>1、首先新建一个字段<br><img src="/images/081101.jpg" alt="Excel的xlsx文件"><br>2、字段类型选择文本型<br><img src="/images/081102.jpg" alt="字段类型"><br>3、右击该字段，打开字段计算器<br>选择Python，输入表达式 str(!SHAPE_Length!+1).zfill(15)<br>其中!SHAPE_Length!是你要计算的字段，15是位数<br><img src="/images/081103.jpg" alt="表达式"></p>
]]></content>
      <tags>
        <tag>arcgis</tag>
        <tag>arcmap</tag>
        <tag>字段计算器</tag>
      </tags>
  </entry>
  <entry>
    <title>将每个面内所有点的属性赋给面的一个字段中</title>
    <url>/2017/09/19/1100.html</url>
    <content><![CDATA[<p>描述：有一个面数据和一个点数据，每个面要素内包含多个点<br><img src="/images/091901.jpg" alt="数据"><br>问题：如何将每个面要素内多个点名称赋到面的一个字段中<br>实现方法：<br>1、使用spatial join 工具，具体设置如图所示；<br>面作为目标要素图层输入，点作为连接要素输入<br><img src="/images/091902.jpg" alt="数据输入"></p>
<span id="more"></span>
<p>2、然后添加一个字段，具体设置如图所示；<br>注意合并类型选择join<br><img src="/images/091903.jpg" alt="添加字段"><br>3、右击刚才添加的字段，选择输入字段，将点的name字段添加进去；<br><img src="/images/091904.jpg" alt="选择输入字段"><br><img src="/images/091905.jpg" alt="选择输入字段"><br>4、点击OK即可。看一下输出结果<br>可以看到面图层joinname字段中现在已经包含点的名称<br><img src="/images/091906.jpg" alt="输出结果"></p>
]]></content>
      <categories>
        <category>GIS</category>
      </categories>
      <tags>
        <tag>ArcGIS</tag>
      </tags>
  </entry>
  <entry>
    <title>将点进行排序并编号---ArcGIS脚本工具的制作</title>
    <url>/2017/06/16/8578.html</url>
    <content><![CDATA[<p>好久没更新博客了，就好像好久没谈过恋爱，实际压根没谈过（手动滑稽），今天跟别人说，他们都很诧异，想想自己已近中年（联合国的标准），确实不可思议，所以很遗憾呀！<br>有人说到了什么年龄就该做什么事，这样才不负时光，而我感觉在这十年里，时光仿佛静止了一样，自己停滞不前，任风云万变，如今却一声长叹。<br>唉，又发了个牢骚，人到中年是不是这个状态呢？</p>
<p>切到正题！<br>前段时间，和同事都接到一个问题，是关于点排序的，用户想将一些点，按照空间位置，从左到右，再从上之下排序编号，如下图所示：<br><img src="/images/06161.jpg" alt="样例"></p>
<span id="more"></span>
<p>本来是个很简单的事情，主要使用sort工具就可以。<br>但是用户觉得麻烦，<br>因为详细的步骤还是有些繁琐的，步骤如下：<br>1、先要在点要素属性表中添加X和Y两个字段，<br><img src="/images/06162.jpg" alt="添加XY字段"><br>2、然后将这两个作为排序字段，生成排序后的点数据<br><img src="/images/06163.jpg" alt="使用sort工具"><br>3、之后再添加一个排序结果字段，将OBJECTID字段值赋给这个字段<br><img src="/images/06164.jpg" alt="使用sort工具"><br>确实步骤有些多，最后通过脚本工具一键生成排序序号<br>创建脚本工具的过程如下<br>1、首先创建工具箱<br><img src="/images/06165.jpg" alt="工具箱创建"><br>2、添加脚本<br><img src="/images/06166.jpg" alt="添加脚本"><br>3、打开脚本工具创建向导，填写信息<br><img src="/images/06167.jpg" alt="工具向导"><br>4、添加Python脚本<br>这一步要加载已经写好的Python文件（*.py格式）<br>Python脚本的思路主要为：<br>4.1 首先规划好该工具需要多少个参数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Script Tool Parameters</span></span><br><span class="line">InputFeature = arcpy.GetParameterAsText(<span class="number">0</span>)</span><br><span class="line">Order = arcpy.GetParameterAsText(<span class="number">1</span>)</span><br><span class="line">Sort_X = arcpy.GetParameterAsText(<span class="number">2</span>)</span><br><span class="line">Sort_Y = arcpy.GetParameterAsText(<span class="number">3</span>)</span><br><span class="line">OutputFeature = arcpy.GetParameterAsText(<span class="number">4</span>)</span><br></pre></td></tr></table></figure>
<p>4.2 然后使用arcpy.CopyFeatures_management()将原数据复制一下<br>4.3 再使用arcpy.AddXY_management()将复制得到的数据添加XY两个字段<br>4.3 随后判断一下点排序的大体方向<br>这里要注意一下，由于编码问题，当代码有中文字符，需要使用.decode()方法解码中文，不然工具运行时会报错</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> Order == <span class="string">&#x27;横向&#x27;</span>.decode(<span class="string">&#x27;UTF-8&#x27;</span>):</span><br><span class="line">    sortfield = [[<span class="string">&quot;POINT_Y&quot;</span>, Sort_Y],[<span class="string">&quot;POINT_X&quot;</span>, Sort_X] ]</span><br><span class="line"><span class="keyword">elif</span> Order == <span class="string">&#x27;纵向&#x27;</span>.decode(<span class="string">&#x27;UTF-8&#x27;</span>):</span><br><span class="line">    sortfield = [[<span class="string">&quot;POINT_X&quot;</span>, Sort_X],[<span class="string">&quot;POINT_Y&quot;</span>, Sort_Y]]</span><br></pre></td></tr></table></figure>
<p>4.4 准备好输入参数后，使用arcpy.Sort_management()，生成排序后数据<br>4.5 接着用arcpy.AddField_management()添加排序编号字段<br>4.6 最终使用字段计算工具arcpy.CalculateField_management(),将OBJECTID字段值赋给这个字段</p>
<p>python脚本完成！</p>
<p>所有代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> arcpy</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># Script Tool Parameters</span></span><br><span class="line">InputFeature = arcpy.GetParameterAsText(<span class="number">0</span>)</span><br><span class="line">Order = arcpy.GetParameterAsText(<span class="number">1</span>)</span><br><span class="line">Sort_X = arcpy.GetParameterAsText(<span class="number">2</span>)</span><br><span class="line">Sort_Y = arcpy.GetParameterAsText(<span class="number">3</span>)</span><br><span class="line">OutputFeature = arcpy.GetParameterAsText(<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">tempfea = InputFeature+<span class="built_in">str</span>(time.time()).split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">0</span>][-<span class="number">5</span>:-<span class="number">1</span>]</span><br><span class="line">	</span><br><span class="line">arcpy.CopyFeatures_management(InputFeature, tempfea)</span><br><span class="line">arcpy.AddXY_management(tempfea)</span><br><span class="line"><span class="keyword">if</span> Order == <span class="string">&#x27;横向&#x27;</span>.decode(<span class="string">&#x27;UTF-8&#x27;</span>):</span><br><span class="line">    sortfield = [[<span class="string">&quot;POINT_Y&quot;</span>, Sort_Y],[<span class="string">&quot;POINT_X&quot;</span>, Sort_X] ]</span><br><span class="line"><span class="keyword">elif</span> Order == <span class="string">&#x27;纵向&#x27;</span>.decode(<span class="string">&#x27;UTF-8&#x27;</span>):</span><br><span class="line">    sortfield = [[<span class="string">&quot;POINT_X&quot;</span>, Sort_X],[<span class="string">&quot;POINT_Y&quot;</span>, Sort_Y]]</span><br><span class="line">arcpy.Sort_management(tempfea,OutputFeature,sortfield)</span><br><span class="line">arcpy.AddField_management(OutputFeature,<span class="string">&#x27;order1&#x27;</span>,<span class="string">&#x27;DOUBLE&#x27;</span>)</span><br><span class="line">arcpy.CalculateField_management(OutputFeature, <span class="string">&#x27;order1&#x27;</span>,<span class="string">&#x27;!OBJECTID!&#x27;</span>, <span class="string">&quot;PYTHON_9.3&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>添加完Python脚本文件后，继续往下<br>5、添加界面参数<br>这一步很重要，各个参数属性要逐个填入，分别如下<br>其中Order、Sort_X、Sort_Y属于list参数<br><img src="/images/06168.jpg" alt="InputFeature"><br><img src="/images/06169.jpg" alt="Order"><br><img src="/images/061610.jpg" alt="Sort_X"><br><img src="/images/061611.jpg" alt="Sort_Y"><br><img src="/images/061612.jpg" alt="OutputFeature"></p>
<p>6、脚本工具创建向导完后，要对上述的三个参数设置list列表<br>6.1 点击脚本工具的属性<br><img src="/images/061613.jpg" alt="工具属性"><br>6.2 切换至验证选项卡(Validation),点击Edit,编辑验证代码，添加如下3行代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">self.params[<span class="number">1</span>].<span class="built_in">filter</span>.<span class="built_in">list</span> = [<span class="string">&#x27;横向&#x27;</span>,<span class="string">&#x27;纵向&#x27;</span>]</span><br><span class="line">self.params[<span class="number">2</span>].<span class="built_in">filter</span>.<span class="built_in">list</span> = [<span class="string">&quot;ASCENDING&quot;</span>,<span class="string">&quot;DESCENDING&quot;</span>]</span><br><span class="line">self.params[<span class="number">3</span>].<span class="built_in">filter</span>.<span class="built_in">list</span> = [<span class="string">&quot;ASCENDING&quot;</span>,<span class="string">&quot;DESCENDING&quot;</span>]</span><br></pre></td></tr></table></figure>
<p><img src="/images/061614.jpg" alt="编辑验证代码"><br>至此，ArcGIS的点排序编号脚本工具基本完成，为了方便别人使用，可以添加描述等辅助信息<br><img src="/images/061615.jpg" alt="打开工具描述"><br><img src="/images/061616.jpg" alt="编辑工具信息"></p>
<p>体验一下该工具<br><img src="/images/061617.jpg" alt="工具界面"><br><img src="/images/061618.jpg" alt="工具结果"><br>查看结果编号<br><img src="/images/061619.jpg" alt="结果"></p>
]]></content>
      <tags>
        <tag>ArcGIS</tag>
        <tag>GIS</tag>
        <tag>Python脚本工具</tag>
        <tag>点排序</tag>
        <tag>编号</tag>
      </tags>
  </entry>
  <entry>
    <title>年底-昨天、今天、明天</title>
    <url>/2018/12/17/24576.html</url>
    <content><![CDATA[<h1 id="眼见2018年的最后一个月已过了一半，真快！回想这一年，心中不免五味杂陈。"><a href="#眼见2018年的最后一个月已过了一半，真快！回想这一年，心中不免五味杂陈。" class="headerlink" title="眼见2018年的最后一个月已过了一半，真快！回想这一年，心中不免五味杂陈。"></a>眼见2018年的最后一个月已过了一半，真快！回想这一年，心中不免五味杂陈。</h1><p>如果要用两个字形容这一年，那就是：【折腾】，不过人生不就是折腾来折腾去么，倒也符合常态。但总有些与众不同，有些注定在未来某一天成为突然想起的尘封记忆，或喜、或悲、或怒、亦或是波澜不惊，也许现在难以想象的到。</p>
<p>那就开始蒙太奇的回忆吧。。。</p>
<p>从去年2017的年底开始，当时对于下一年的所思所想做了一些SWOT的分析，之后充满了焦虑，还自诩为我的”焦虑元年“，然而确实就这样伴随了我的2018年，90后的”中年危机“就这么来了，有时感觉自己特没主见，作为一个男人真不应该，别人稍微将你聊开了，你就和盘托出，于是逢人就像祥林嫂一样诉说自己的忧虑和担心，但是回过头来，读了一些书，看了一些东西，这样做没有什么意义，将自己切身的感受说给别人听，不管你描述得多么生动，别人几乎是随心而过，感同身受是无法实现的，大家作为一个个个体，又无责为你承担些什么。有些时候，未来的路只能沉默的走下去，要面对这个现实。</p>
<p>《月亮与六便士》里有这么一段描述：我们每个人生在这个世界上都是孤独的。每个人都被囚禁在一座铁塔里，只能靠一些符号同别人传达自己的思想；而这些符号并没有共同的价值，因此他们的意义是模糊的、不确定的。我们非常可怜地想把自己心中的财富传送给别人，但是他们却没有接受这些财富的能力。因此我们只能孤独地行走，尽管身体互相依傍却并不在一起，即不了解别人也不能为别人所了解。这句话简直妙不可及。</p>
<p>有这么个映像：人们对于第一件事，不管其为自己带来了什么，或许都难以忘怀，比如第一份工作、第一次做饭、第一次青涩感情的投入（提到这个，翻涌出阵呕~~~）。</p>
<p>从2016年乘着火车，穿过漫天黄沙的戈壁，从西北一所垂垂老矣、难以回春的大学（所以也没有跟着老师继续读博，容我目光所限）来到帝都，经过数不清的面试，终于进入了一家业内有名气的公司，接到录用通知时，和2013年考上研究生一样，兴奋了许久，倍感珍惜（这词在第一次做的事情上应该通用），想想当时也够单纯，各种正当的要求都没认真的去了解和争取，都草草的入了职，丝毫没有人生规划和职业发展的战略思考。接下来的两年里学习了一些东西，重点是认识了不少人，好像每天感觉很充实，当时自己精力充沛，极力摸索，早出晚归，不放过周末节假日，不去了解除工作意外的东西，像上学一样封闭自己，两耳不闻世事，但年初的总结里，隐隐约约里看到了虚假的充实，这种带有自欺欺人、难以有较大提升的感觉，充斥每天的情绪，周围的同事很好、领导也很好，不好的是自己。然后还有前面提到的原因（可能这个是最大的原因所在，下面细说），最后得到了答案：该换份工作了。</p>
<p>马云曾说，换工作无非有两个原因：一是对老板不爽；二是对工资不满意。实话说我来这个公司两年，虽然时不时见到大BOSS，但真的从来没说过话，交集为零，直属的三个（没错，就是三个，两个女领导，一个男领导）领导都很不错，所以这一条不存在。然后应该就是第二个，没错，我承认自己很俗，也没办法，当时促使我慎重思考薪资的，是因为一件事。在一线租房真是很痛苦的事，想想每天早出晚归，累的不行，每个月将自己工资的很大部分，给了每天提着鸟笼子的北京土著房东（这里没有地域感情色彩），真的很心痛，但是没办法，谁让自己来大城市求食、求生存呢。然后就是这么操着某地域口音（这里有些地域色彩，但我非以偏概全，）的一群人，接管了房东（懒成啥样。。。，最后不还是自己自作自受）的房子，用一些下三滥的手段诈取钱财，让北漂们露宿街头。光天化日，朗朗乾坤，帝都就这么真真切切发生近似明抢的强盗行为。作为当时的受害者，真是气愤呀！！！某个夜晚有了单纯的世俗想法：再挣多点，心就不会这么疼了。</p>
<p>都说开发工资高，凭着两年的自学和积累，然后从公司的开发者大会之前开始，那段时间每晚在一些招聘网站，像两年前一样海投了一番，陆陆续续接到一些求职反馈，基本是拒绝的，大概是看到没有实际的开发经验，然后就在开发者大会那天,终于接到来自深圳座机来电，聊了一些后，下午从会场直接过了去。</p>
<p>。。。。。待续</p>
<p>多读书、多思考、会折腾（突然想到这句话，暂时记上）</p>
]]></content>
  </entry>
  <entry>
    <title>巧用Excel透视表计算每个公交站点的人数</title>
    <url>/2016/10/27/29903.html</url>
    <content><![CDATA[<p>今天早晨看到有人在ArcGIS上问了如何计算每个公交站点的人数，部分数据如下图：<span id="more"></span><br><img src="/images/10271.png" alt="Excel,透视表"><br>虽然不是GIS的问题，但是觉得很有趣，看到有个ID叫turtle的已经回答了，并且自己也学到不少，他的实现步骤如下：<br>遇到在excel中分类统计汇总的可优先考虑透视表（具体操作题主自己搜索，透视表用起来很爽）；<br>针对题主所提到的多条件查询汇总的可使用sumifs()函数（支持多条件汇总，应该是从office2007引入的）；<br>下面我简单选择了部分数据进行实现，公式详见附件</p>
<p>公式解释如下：<br><img src="/images/10272.png" alt="Excel,透视表"><br><img src="/images/10273.png" alt="Excel,透视表"><br>=SUMIFS(Sheet1!$H$2:$H$26,Sheet1!$C$2:$C$26,”&gt;=7:00”,Sheet1!$C$2:$C$26,”&lt;8:00”,Sheet1!$B$2:$B$26,Sheet2!B$2)</p>
<ol>
<li>Sheet1!$H$2:$H$26表示要进行汇总统计的列，这里我认为是车上人数，当然也可以修改为其他上客人数或下车人数，美元符号代表该数据范围是固定不变的；</li>
<li>Sheet1!$C$2:$C$26,”&gt;=7:00”表示第一个统计条件为时间要在7点之后；</li>
<li>Sheet1!$C$2:$C$26,”&lt;8:00” 表示第二个统计条件为时间要在8点之前；连同条件一共同创建一个7-8点的时间范围；</li>
<li>Sheet1!$B$2:$B$26,Sheet2!B$2表示第三个统计条件为站名，这里需要注意美元符号,B2只在2前面添加美元符号，当将公式移动至其他单元格时，横坐标不发生变化，仅纵坐标发生变化，以便将公式复制到后续单元格中</li>
</ol>
<p>备注：</p>
<ol>
<li>由于题主数据sheet1中有些不完整，建议修订为一个无空数据的完整数据表格，若无记录可填充0；</li>
<li>我只选择部分数据，对于其他站的统计，只要将该行的公式往后拖就可以了；</li>
<li>如果需要增加其他条件，只要按照以上方式添加查询条件即可</li>
</ol>
<hr>
<p>先把时间转为数字取整，然后使用数据透视表也比较方便，我顺着思路实现如下：<br><img src="/images/10274.jpg" alt="Excel,透视表"><br><img src="/images/10275.jpg" alt="Excel,透视表"><br><img src="/images/10276.jpg" alt="Excel,透视表"></p>
]]></content>
      <tags>
        <tag>Excel</tag>
        <tag>透视表</tag>
      </tags>
  </entry>
  <entry>
    <title>打开Portal后页面空白问题解决案例</title>
    <url>/2018/01/25/6720.html</url>
    <content><![CDATA[<p>昨晚吃完饭回来，操作系统莫名其妙在自动升级<br><img src="/images/1801251.jpg" alt="update"><br>等了大概有2个小时，看来是大版本更新呀</p>
<span id="more"></span>
<p>接下来问题就接踵而来了，开始菜单的程序名称都变成两个，只是后边加了个（1）<br><img src="/images/1801252.jpg" alt="WTF"><br>好，这个可以忍。<br>但是很多软件都打不开了。。。。<br>此处一万个草泥马奔腾而过<br><img src="/images/1801253.jpg" alt="ma"></p>
<p>自然而然，ArcMap也不能用了，数据互操作也打不开了<br>最后重装解决。</p>
<p>然而,Portal却可以打开，但是一片空白<br><img src="/images/1801254.png" alt="portal页面"><br>好吧，这跟打不开有什么区别呢。<br>查看跟踪请求，发现<a href="https://arc.arcgiser.com:7443/arcgis/sharing/rest/portals/self?culture=zh-cn&amp;f=json%E8%AF%B7%E6%B1%82%E4%B8%80%E7%9B%B4%E6%98%AF404">https://arc.arcgiser.com:7443/arcgis/sharing/rest/portals/self?culture=zh-cn&amp;f=json请求一直是404</a><br>其中有一个zh-cn，这不是中文界面么，但是我的Portl一直是英文界面。<br>于是连接上Portal内置的postgresql数据库，打开gw_accounts数据表<br><img src="/images/1801255.jpg" alt="gw_accounts数据表"><br>修改属性值为Zh-cn<br><img src="/images/1801256.jpg" alt="gw_accounts数据表"><br>然后重启Datastore、server、Portal服务，Portal就可以正常打开了</p>
]]></content>
  </entry>
  <entry>
    <title>手把手教你抓取地图矢量数据【附代码和北京矢量地图区、街道办数据下载】【一】</title>
    <url>/2019/09/06/5908.html</url>
    <content><![CDATA[<p>Hello,大家好，我是James.</p>
<p>偶然看道天地图北京的官网有行政区深圳街道办的边界数据<br><img src="/images/19090601.jpg" alt="天地图"></p>
<span id="more"></span>
<p>惯性使然打开F12，惊奇地看道一串串熟悉的坐标<br><img src="/images/19090602.jpg" alt="线索"></p>
<p>曾经搜遍论坛网站各个角落，今天在官方却能轻而易举的找到，真是太激动</p>
<p>于是先研究了url请求结构，最终得到了北京16个区和下属街道办的边界信息</p>
<p>接下来跟大家分享抓取过程，</p>
<p>1、首先进入首页（<a href="http://beijing.tianditu.gov.cn/bjtdt-mapcenter/%EF%BC%89%EF%BC%8C">http://beijing.tianditu.gov.cn/bjtdt-mapcenter/），</a><br><img src="/images/19090603.jpg" alt="首页"></p>
<p>2、点击【行政区划】，F12我们可以看到在<a href="http://beijing.tianditu.gov.cn/tdt-web-sysmanager/services/catalog/special/getLoginOutCatalogSpecials/38ed87a3fe8e4bb1a01949c47baf5244%E8%AF%B7%E6%B1%82%E7%BB%93%E6%9E%9C%E4%B8%AD%E5%8C%85%E5%90%AB%E4%BA%86%E5%8C%97%E4%BA%AC%E4%B8%8B%E5%B1%9E%E7%9A%8416%E4%B8%AA%E5%8C%BA%EF%BC%81">http://beijing.tianditu.gov.cn/tdt-web-sysmanager/services/catalog/special/getLoginOutCatalogSpecials/38ed87a3fe8e4bb1a01949c47baf5244请求结果中包含了北京下属的16个区！</a><br><img src="/images/19090605.jpg" alt="北京16个区"></p>
<p>3、展开其中一个后，看道更为详细的信息<br><img src="/images/19090606.jpg" alt="北京16个区详细信息"></p>
<p>4、点击东城区，我发现在<a href="http://beijing.tianditu.gov.cn/tdt-web-sdks/biz/httpproxy/httpproxy.jsp?url=http://www.bjmap.gov.cn:8080/dfc/services/sgssfs/2220?request=getfeature&amp;filter=+GBCODE=%27110101%27%E8%AF%B7%E6%B1%82%E7%BB%93%E6%9E%9C%E4%B8%AD%E6%9C%89%E4%B8%8D%E5%BE%97%E4%BA%86%E7%9A%84%E5%9D%90%E6%A0%87%E4%B8%B2%EF%BC%8C%E6%98%8E%E6%98%BE%E6%98%AF%E8%A1%8C%E6%94%BF%E5%8C%BA%E5%88%92%E7%9A%84%E8%BE%B9%E7%95%8C%E8%8A%82%E7%82%B9%E5%9D%90%E6%A0%87%E4%B8%B2%E5%98%9B">http://beijing.tianditu.gov.cn/tdt-web-sdks/biz/httpproxy/httpproxy.jsp?url=http://www.bjmap.gov.cn:8080/dfc/services/sgssfs/2220?request=getfeature&amp;filter=+GBCODE%3D%27110101%27请求结果中有不得了的坐标串，明显是行政区划的边界节点坐标串嘛</a><br><img src="/images/19090607.jpg" alt="区坐标串"></p>
<p>5、继续点击建国门街道，同样在<a href="http://beijing.tianditu.gov.cn/tdt-web-sdks/biz/httpproxy/httpproxy.jsp?url=http://www.bjmap.gov.cn:8080/dfc/services/sgssfs/2220?request=getfeature&amp;filter=+GBCODE=%27110101001%27%E7%9C%8B%E9%81%93%E8%A1%97%E9%81%93%E5%8A%9E%E7%9A%84%E5%9D%90%E6%A0%87%E7%A9%BF%EF%BC%8C%E5%AE%8C%E7%BE%8E%EF%BC%81">http://beijing.tianditu.gov.cn/tdt-web-sdks/biz/httpproxy/httpproxy.jsp?url=http://www.bjmap.gov.cn:8080/dfc/services/sgssfs/2220?request=getfeature&amp;filter=+GBCODE%3D%27110101001%27看道街道办的坐标穿，完美！</a><br><img src="/images/19090608.jpg" alt="街道办坐标串"></p>
<p>接下来上python代码<br>1、首先惯例，我使用的是python2,首先声明编码，导入request、json解析模块<br><img src="/images/19090609.jpg" alt="导入模块"></p>
<p>2、接下来需要写4个函数方法，<br>主要是：<br>（1）解析、构造url地址<br>（2）组织爬取的信息<br><img src="/images/19090610.jpg" alt="函数方法"></p>
<p>3、然后是调取以上函数方法，写入至txt文件<br><img src="/images/19090611.jpg" alt="调取、写入"></p>
<p>4、最后分别得到行政区和街道办边界节点的txt文本<br><img src="/images/19090616.jpg" alt="txt文本"><br><img src="/images/19090612.jpg" alt="行政区边界节点的txt文本"><br><img src="/images/19090615.jpg" alt="街道办边界节点的txt文本"></p>
<p>本节结束，这里附上完整的代码和txt文本下载链接<br>链接：<a href="https://pan.baidu.com/s/1eaDApBPATqf3D9sWwfAMow">https://pan.baidu.com/s/1eaDApBPATqf3D9sWwfAMow</a><br>提取码：gnkx<br>或者长按以下二维码获取下载<br><img src="/images/19090610.png" alt="二维码获取下载"></p>
]]></content>
  </entry>
  <entry>
    <title>【批量代码分享】不同gdb批量投影 批量要素类复制</title>
    <url>/2016/09/24/18549.html</url>
    <content><![CDATA[<p>不同gdb批量投影 <span id="more"></span></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> arcpy</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">arcpy.env.workspace = <span class="string">&quot;C:\\Users\\Esri\\Desktop\\test__20160919\\qian&quot;</span></span><br><span class="line">arcpy.env.overwriteOutput = <span class="literal">True</span></span><br><span class="line">outWorkspace = <span class="string">&quot;C:\\Users\\Esri\\Desktop\\test__20160919\\hou&quot;</span></span><br><span class="line">workspacess = arcpy.ListWorkspaces(<span class="string">&quot;*&quot;</span>, <span class="string">&quot;FileGDB&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> filenamegdb <span class="keyword">in</span> os.listdir(arcpy.env.workspace):</span><br><span class="line">   arcpy.CreateFileGDB_management(outWorkspace,filenamegdb)</span><br><span class="line"><span class="keyword">for</span> workspace <span class="keyword">in</span> workspacess:</span><br><span class="line">    walk = arcpy.da.Walk(workspace, datatype=<span class="string">&quot;FeatureClass&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> dirpath, dirnames, filenames <span class="keyword">in</span> walk:</span><br><span class="line">        <span class="keyword">for</span> filename <span class="keyword">in</span> filenames:</span><br><span class="line">            facname=os.path.join(dirpath, filename)</span><br><span class="line">            asss=dirpath.split(<span class="string">&quot;\\&quot;</span>)[-<span class="number">1</span>]</span><br><span class="line">            outfea = os.path.join(outWorkspace,asss,filename)</span><br><span class="line">            arcpy.Project_management(facname,outfea,<span class="string">&quot;PROJCS[&#x27;CGCS2000_GK_CM_117E&#x27;,GEOGCS[&#x27;GCS_China_Geodetic_Coordinate_System_2000&#x27;,DATUM[&#x27;D_China_2000&#x27;,SPHEROID[&#x27;CGCS2000&#x27;,6378137.0,298.257222101]],PRIMEM[&#x27;Greenwich&#x27;,0.0],UNIT[&#x27;Degree&#x27;,0.0174532925199433]],PROJECTION[&#x27;Gauss_Kruger&#x27;],PARAMETER[&#x27;False_Easting&#x27;,500000.0],PARAMETER[&#x27;False_Northing&#x27;,0.0],PARAMETER[&#x27;Central_Meridian&#x27;,117.0],PARAMETER[&#x27;Scale_Factor&#x27;,1.0],PARAMETER[&#x27;Latitude_Of_Origin&#x27;,0.0],UNIT[&#x27;Meter&#x27;,1.0]]&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;GEOGCS[&#x27;GCS_China_Geodetic_Coordinate_System_2000&#x27;,DATUM[&#x27;D_China_2000&#x27;,SPHEROID[&#x27;CGCS2000&#x27;,6378137.0,298.257222101]],PRIMEM[&#x27;Greenwich&#x27;,0.0],UNIT[&#x27;Degree&#x27;,0.0174532925199433]]&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>批量要素类复制</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Pretreatment.py</span></span><br><span class="line"><span class="comment"># Created on: 2016-09-22</span></span><br><span class="line"><span class="comment">#   (generated</span></span><br><span class="line"><span class="comment"># Description:。</span></span><br><span class="line"><span class="comment"># Import arcpy module</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> arcpy</span><br><span class="line">inputDir = <span class="string">&quot;C:\\Users\\Esri\\Desktop\\testdata&quot;</span></span><br><span class="line">Output = <span class="string">&quot;C:\\Users\\Esri\\Desktop\\new&quot;</span></span><br><span class="line">arcpy.env.workspace = <span class="string">&quot;C:\\Users\\Esri\\Desktop\\testdata&quot;</span></span><br><span class="line">workspacess = arcpy.ListWorkspaces(<span class="string">&quot;*&quot;</span>,<span class="string">&quot;Access&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> workspace <span class="keyword">in</span> workspacess:</span><br><span class="line">    asss = workspace.split(<span class="string">&quot;\\&quot;</span>)[-<span class="number">1</span>]</span><br><span class="line">    arcpy.CreatePersonalGDB_management(Output, asss)</span><br><span class="line">    dimao=os.path.join(workspace,<span class="string">u&quot;地貌&quot;</span>)</span><br><span class="line">    walk = arcpy.da.Walk(dimao, datatype=<span class="string">&quot;FeatureClass&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> walk:</span><br><span class="line">        <span class="keyword">for</span> f <span class="keyword">in</span> files:</span><br><span class="line">            fc=os.path.join(dimao,f)</span><br><span class="line">            out_data =os.path.join(Output,asss,f)</span><br><span class="line">            arcpy.Copy_management(fc, out_data)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;处理完成&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>手把手教你抓取地图矢量数据【附代码和矢量地图数据】（续）</title>
    <url>/2019/09/09/877.html</url>
    <content><![CDATA[<p>续<a href="http://giser.tk/2019/09/06/5908.html">上一节</a>。<br>现在我们已经抓取到北京行政区和街道办的节点串坐标数据<br><img src="/images/19090612.jpg" alt="行政区边界节点的txt文本"><br><img src="/images/19090615.jpg" alt="街道办边界节点的txt文本"></p>
<span id="more"></span>
<p>接下来就需要在ArcMap中使用若干工具将这些点转为线，然后转为行政区划面了。</p>
<p>1、首先将txt文本导入至ArcMap<br><img src="/images/19090901.jpg" alt="加载txt文本"><br>2、然后加载点数据，注意要选择WGS1984作为空间参考<br><img src="/images/19090902.jpg" alt="加载点数据"><br><img src="/images/19090903.jpg" alt="加载点数据"><br>3、由于数据量较大，这里需要将数据转存至GDB中<br><img src="/images/19090905.jpg" alt="数据转存至GDB"><br>4、接下来使用<a href="http://giser.tk/2019/09/06/5908.html">上一篇</a>文章提到的【点集转线】工具将节点转为线<br>注意参数选择：<br>【线字段 (可选)】选择为i字段（i为行政区划的编号）；<br>【排序字段 (可选)】选择为j字段（j为每个行政区划下的节点编号）；<br>【闭合线 (可选)】勾选上<br><img src="/images/19090906.jpg" alt="点集转线"><br>结果如下：<br><img src="/images/19090907.jpg" alt="结果"><br>5、使用【要素转面】工具将闭合区线转为面<br><img src="/images/19090908.jpg" alt="要素转面"></p>
<p><strong>重复上述步骤可将街道办转换为面</strong><br>最终结果如下<br><img src="/images/19090909.jpg" alt="北京行政区划"><br><img src="/images/19090911.jpg" alt="飞地"><br>可以看到在顺义区有一块属于朝阳区的飞地<br><img src="/images/19090910.jpg" alt="飞地"><br>叠加底图查看，该地是首都机场。<br>问题来了，已经有了“朝阳群众”的朝阳区，为什么还要在顺义区特别“抢了一块地”呢？<br>下一节，我们将从GIS选址的角度剖析一二，敬请期待。</p>
]]></content>
  </entry>
  <entry>
    <title>接下来假期的安排</title>
    <url>/2019/01/28/29651.html</url>
    <content><![CDATA[<p>调休了这么多天，终于迎来了14天的假期<br>1、<br>一定要将JAVA基础看一遍！！！一定要将JAVA基础看一遍！！！一定要将JAVA基础看一遍！！！<br>2、<br>学习Spring Boot<br>3、<br>学习Spring Cloud</p>
<p>以上的目标，就是为了写接口不再求人。</p>
<p>期间顺便将2018没读完的书看完。</p>
<p>去国家图书馆呆一天，爬爬香山。</p>
<p>================<br>2019，只关心粮食和蔬菜。</p>
]]></content>
  </entry>
  <entry>
    <title>更换注册ArcGIS Web Adaptor后，Portal for ArcGIS需要做的内容迁移</title>
    <url>/2017/01/16/43705.html</url>
    <content><![CDATA[<p>情境描述:<br>之前在我的电脑上装了Portal for ArcGIS和ArcGIS Server，并且共用一个ArcGIS Web Adaptor，<br>后来Server组的同事建议Portal for ArcGIS和ArcGIS Server分别用一个ArcGIS Web Adaptor，<br>于是我先将Portal for ArcGIS和ArcGIS Server解除联合，然后卸载掉ArcGIS Web Adaptor，<br>接着安装了两个ArcGIS Web Adaptor，注册server的命名为server，注册portal的命名为arcgis。<br>安装之后，分别注册Portal for ArcGIS和ArcGIS Server，接着联合，成功！</p>
<span id="more"></span>
<p>问题描述：<br>但是接下来确出现一个大的问题，打开portal中之前做好的地图，都加载不了，检查要素，显示连接404错误，地址还是之前的，没有更换过来，<br><img src="/images/01161.jpg" alt="404错误"><br>解决方法:<br>1、于是到系统内容目录下（形如：X:\arcgisportal\content\items），按照该地图的ID号（在portal我的内容可以看到），<br><img src="/images/01162.jpg" alt="我的内容"><br>2、找到对应的文件夹<br><img src="/images/01163.jpg" alt="文件夹"><br>3、用notepad打开一个文件<br><img src="/images/01164.jpg" alt="查看文件"><br>4、打开后，果然连接是之前的<br><img src="/images/01165.jpg" alt="查看文件"><br>5、可想而知，所有的item应该都是这样，于是用notepad的批量替换功能，将所有的地址改为现在正确的<br><img src="/images/01166.jpg" alt="批量替换"><br>6、然后重启portal服务<br><img src="/images/01167.jpg" alt="重启portal服务"><br>7、加载一个地图查看，问题得到解决<br><img src="/images/01168.jpg" alt="地图查看"></p>
<p>PS：ArcGIS Web Adaptor看来是不能随意更换，特别是ArcGIS Web Adaptor的名字</p>
]]></content>
      <categories>
        <category>GIS</category>
      </categories>
      <tags>
        <tag>GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>搜房网多进程代码-python</title>
    <url>/2016/08/16/26086.html</url>
    <content><![CDATA[<span id="more"></span>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! -*-coding:utf-8-*-</span></span><br><span class="line"><span class="comment"># Function: 房价调查</span></span><br><span class="line"><span class="comment"># Author：蘭兹</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse, request</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> BS</span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> lxml</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> cProfile</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> copy</span><br><span class="line"><span class="keyword">import</span> xlsxwriter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">starttime = datetime.datetime.now()</span><br><span class="line"></span><br><span class="line">base_url = <span class="string">r&#x27;http://bj.fangjia.com/ershoufang/&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test_search_dict = &#123;<span class="string">&#x27;昌平&#x27;</span>: &#123;<span class="string">&#x27;霍营&#x27;</span>: &#123;<span class="string">&#x27;13号线&#x27;</span>: <span class="string">&#x27;http://bj.fangjia.com/ershoufang/--r-%E6%98%8C%E5%B9%B3|w-13%E5%8F%B7%E7%BA%BF|b-%E9%9C%8D%E8%90%A5&#x27;</span>&#125;&#125;&#125;</span><br><span class="line"></span><br><span class="line">search_list = []  <span class="comment"># 房源信息url列表</span></span><br><span class="line">tmp_list = []  <span class="comment"># 房源信息url缓存列表</span></span><br><span class="line">layer = -<span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取列表页面</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_page</span>(<span class="params">url</span>):</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">r&#x27;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) &#x27;</span></span><br><span class="line">                      <span class="string">r&#x27;Chrome/45.0.2454.85 Safari/537.36 115Browser/6.0.3&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Referer&#x27;</span>: <span class="string">r&#x27;http://bj.fangjia.com/ershoufang/&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Host&#x27;</span>: <span class="string">r&#x27;bj.fangjia.com&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Connection&#x27;</span>: <span class="string">&#x27;keep-alive&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    timeout = <span class="number">60</span></span><br><span class="line">    socket.setdefaulttimeout(timeout)  <span class="comment"># 设置超时</span></span><br><span class="line">    req = request.Request(url, headers=headers)</span><br><span class="line">    response = request.urlopen(req).read()</span><br><span class="line">    page = response.decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> page</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取查询关键词dict</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_search</span>(<span class="params">page, key</span>):</span><br><span class="line">    soup = BS(page, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">    search_list = soup.find_all(href=re.<span class="built_in">compile</span>(key), target=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    search_dict = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(search_list)):</span><br><span class="line">        soup = BS(<span class="built_in">str</span>(search_list[i]), <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">        key = soup.select(<span class="string">&#x27;a&#x27;</span>)[<span class="number">0</span>].get_text()</span><br><span class="line">        value = soup.a.attrs[<span class="string">&#x27;href&#x27;</span>]</span><br><span class="line">        search_dict[key] = value</span><br><span class="line">    <span class="keyword">return</span> search_dict</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取房源信息列表(嵌套字典遍历)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_info_list</span>(<span class="params">search_dict, layer, tmp_list, search_list</span>):</span><br><span class="line">    layer += <span class="number">1</span>  <span class="comment"># 设置字典层级</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(search_dict)):</span><br><span class="line">        tmp_key = <span class="built_in">list</span>(search_dict.keys())[i]  <span class="comment"># 提取当前字典层级key</span></span><br><span class="line">        tmp_list.append(tmp_key)   <span class="comment"># 将当前key值作为索引添加至tmp_list</span></span><br><span class="line">        tmp_value = search_dict[tmp_key]</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(tmp_value, <span class="built_in">str</span>):   <span class="comment"># 当键值为url时</span></span><br><span class="line">            tmp_list.append(tmp_value)   <span class="comment"># 将url添加至tmp_list</span></span><br><span class="line">            search_list.append(copy.deepcopy(tmp_list))   <span class="comment"># 将tmp_list索引url添加至search_list</span></span><br><span class="line">            tmp_list = tmp_list[:layer]  <span class="comment"># 根据层级保留索引</span></span><br><span class="line">        <span class="keyword">elif</span> tmp_value == <span class="string">&#x27;&#x27;</span>:   <span class="comment"># 键值为空时跳过</span></span><br><span class="line">            layer -= <span class="number">2</span>           <span class="comment"># 跳出键值层级</span></span><br><span class="line">            tmp_list = tmp_list[:layer]   <span class="comment"># 根据层级保留索引</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            get_info_list(tmp_value, layer, tmp_list, search_list)  <span class="comment"># 当键值为列表时，迭代遍历</span></span><br><span class="line">            tmp_list = tmp_list[:layer]</span><br><span class="line">    <span class="keyword">return</span> search_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取房源信息详情</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_info_pn_list</span>(<span class="params">search_list</span>):</span><br><span class="line">    fin_search_list = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(search_list)):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&gt;&gt;&gt;正在抓取%s&#x27;</span> % search_list[i][:<span class="number">3</span>])</span><br><span class="line">        search_url = search_list[i][<span class="number">3</span>]</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            page = get_page(search_url)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;获取页面超时&#x27;</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        soup = BS(page, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">        <span class="comment"># 获取最大页数</span></span><br><span class="line">        pn_num = <span class="number">40</span></span><br><span class="line">        <span class="comment">#soup.select(&#x27;span[class=&quot;mr5&quot;]&#x27;)[0].get_text()</span></span><br><span class="line">        rule = re.<span class="built_in">compile</span>(<span class="string">r&#x27;\d+&#x27;</span>)</span><br><span class="line">        max_pn =pn_num</span><br><span class="line">        <span class="comment"># 组装url</span></span><br><span class="line">        <span class="keyword">for</span> pn <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, max_pn+<span class="number">1</span>):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;************************正在抓取%s页************************&#x27;</span> % pn)</span><br><span class="line">            pn_rule = re.<span class="built_in">compile</span>(<span class="string">&#x27;[|]&#x27;</span>)</span><br><span class="line">            fin_url = pn_rule.sub(<span class="string">r&#x27;|e-%s|&#x27;</span> % pn, search_url, <span class="number">1</span>)</span><br><span class="line">            tmp_url_list = copy.deepcopy(search_list[i][:<span class="number">3</span>])</span><br><span class="line">            tmp_url_list.append(fin_url)</span><br><span class="line">            fin_search_list.append(tmp_url_list)</span><br><span class="line">    <span class="keyword">return</span> fin_search_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取tag信息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_info</span>(<span class="params">fin_search_list, process_i</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;进程%s开始&#x27;</span> % process_i)</span><br><span class="line">    fin_info_list = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(fin_search_list)):</span><br><span class="line">        url = fin_search_list[i][<span class="number">3</span>]</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            page = get_page(url)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;获取tag超时&#x27;</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        soup = BS(page, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">        title_list = soup.select(<span class="string">&#x27;a[class=&quot;h_name&quot;]&#x27;</span>)</span><br><span class="line">        address_list = soup.select(<span class="string">&#x27;span[class=&quot;address&quot;]&#x27;</span>)</span><br><span class="line">        attr_list = soup.select(<span class="string">&#x27;span[class=&quot;attribute&quot;]&#x27;</span>)</span><br><span class="line">        price_list = soup.find_all(attrs=&#123;<span class="string">&quot;class&quot;</span>: <span class="string">&quot;xq_aprice xq_esf_width&quot;</span>&#125;)  <span class="comment"># select对于某些属性值（属性值中间包含空格）无法识别，可以用find_all(attrs=&#123;&#125;)代替</span></span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>):</span><br><span class="line">            tag_tmp_list = []</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                title = title_list[num].attrs[<span class="string">&quot;title&quot;</span>]</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">r&#x27;************************正在获取%s************************&#x27;</span> % title)</span><br><span class="line">                address = re.sub(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>, address_list[num].get_text())</span><br><span class="line">                area = re.search(<span class="string">&#x27;\d+[\u4E00-\u9FA5]&#123;2&#125;&#x27;</span>, attr_list[num].get_text()).group(<span class="number">0</span>)</span><br><span class="line">                layout = re.search(<span class="string">&#x27;\d[^0-9]\d.&#x27;</span>, attr_list[num].get_text()).group(<span class="number">0</span>)</span><br><span class="line">                floor = re.search(<span class="string">&#x27;\d/\d&#x27;</span>, attr_list[num].get_text()).group(<span class="number">0</span>)</span><br><span class="line">                price = re.search(<span class="string">&#x27;\d+[\u4E00-\u9FA5]&#x27;</span>, price_list[num].get_text()).group(<span class="number">0</span>)</span><br><span class="line">                unit_price = re.search(<span class="string">&#x27;\d+[\u4E00-\u9FA5]/.&#x27;</span>, price_list[num].get_text()).group(<span class="number">0</span>)</span><br><span class="line">                tag_tmp_list = copy.deepcopy(fin_search_list[i][:<span class="number">3</span>])</span><br><span class="line">                <span class="keyword">for</span> tag <span class="keyword">in</span> [title, address, area, layout, floor, price, unit_price]:</span><br><span class="line">                    tag_tmp_list.append(tag)</span><br><span class="line">                fin_info_list.append(tag_tmp_list)</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;【抓取失败】&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;进程%s结束&#x27;</span> % process_i)</span><br><span class="line">    <span class="keyword">return</span> fin_info_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 分配任务</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">assignment_search_list</span>(<span class="params">fin_search_list, project_num</span>):  <span class="comment"># project_num每个进程包含的任务数，数值越小，进程数越多</span></span><br><span class="line">    assignment_list = []</span><br><span class="line">    fin_search_list_len = <span class="built_in">len</span>(fin_search_list)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, fin_search_list_len, project_num):</span><br><span class="line">        start = i</span><br><span class="line">        end = i+project_num</span><br><span class="line">        assignment_list.append(fin_search_list[start: end])  <span class="comment"># 获取列表碎片</span></span><br><span class="line">    <span class="keyword">return</span> assignment_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 存储抓取结果</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_excel</span>(<span class="params">fin_info_list, file_name</span>):</span><br><span class="line">    tag_name = [<span class="string">&#x27;区域&#x27;</span>, <span class="string">&#x27;板块&#x27;</span>, <span class="string">&#x27;地铁&#x27;</span>, <span class="string">&#x27;标题&#x27;</span>, <span class="string">&#x27;位置&#x27;</span>, <span class="string">&#x27;平米&#x27;</span>, <span class="string">&#x27;户型&#x27;</span>, <span class="string">&#x27;楼层&#x27;</span>, <span class="string">&#x27;总价&#x27;</span>, <span class="string">&#x27;单位平米价格&#x27;</span>]</span><br><span class="line">    book = xlsxwriter.Workbook(<span class="string">r&#x27;C:\Users\Esri\Desktop\%s.xlsx&#x27;</span> % file_name)  <span class="comment"># 默认存储在桌面上</span></span><br><span class="line">    tmp = book.add_worksheet()</span><br><span class="line">    row_num = <span class="built_in">len</span>(fin_info_list)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, row_num):</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">1</span>:</span><br><span class="line">            tag_pos = <span class="string">&#x27;A%s&#x27;</span> % i</span><br><span class="line">            tmp.write_row(tag_pos, tag_name)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            con_pos = <span class="string">&#x27;A%s&#x27;</span> % i</span><br><span class="line">            content = fin_info_list[i-<span class="number">1</span>]  <span class="comment"># -1是因为被表格的表头所占</span></span><br><span class="line">            tmp.write_row(con_pos, content)</span><br><span class="line">    book.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    file_name = <span class="built_in">input</span>(<span class="string">r&#x27;抓取完成，输入文件名保存：&#x27;</span>)</span><br><span class="line">    fin_save_list = []  <span class="comment"># 抓取信息存储列表</span></span><br><span class="line">    <span class="comment"># 一级筛选</span></span><br><span class="line">    page = get_page(base_url)</span><br><span class="line">    search_dict = get_search(page, <span class="string">&#x27;r-&#x27;</span>)</span><br><span class="line">    <span class="comment"># 二级筛选</span></span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> search_dict:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">r&#x27;************************一级抓取：正在抓取【%s】************************&#x27;</span> % k)</span><br><span class="line">        url = search_dict[k]</span><br><span class="line">        second_page = get_page(url)</span><br><span class="line">        second_search_dict = get_search(second_page, <span class="string">&#x27;b-&#x27;</span>)</span><br><span class="line">        search_dict[k] = second_search_dict</span><br><span class="line">    <span class="comment"># 三级筛选</span></span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> search_dict:</span><br><span class="line">        second_dict = search_dict[k]</span><br><span class="line">        <span class="keyword">for</span> s_k <span class="keyword">in</span> second_dict:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">r&#x27;************************二级抓取：正在抓取【%s】************************&#x27;</span> % s_k)</span><br><span class="line">            url = second_dict[s_k]</span><br><span class="line">            third_page = get_page(url)</span><br><span class="line">            third_search_dict = get_search(third_page, <span class="string">&#x27;w-&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;%s&gt;%s&#x27;</span> % (k, s_k))</span><br><span class="line">            second_dict[s_k] = third_search_dict</span><br><span class="line">    fin_info_list = get_info_list(search_dict, layer, tmp_list, search_list)</span><br><span class="line">    fin_info_pn_list = get_info_pn_list(fin_info_list)</span><br><span class="line">    p = Pool(<span class="number">8</span>)  <span class="comment"># 设置进程池</span></span><br><span class="line">    assignment_list = assignment_search_list(fin_info_pn_list, <span class="number">6</span>)  <span class="comment"># 分配任务，用于多进程</span></span><br><span class="line">    result = []  <span class="comment"># 多进程结果列表</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(assignment_list)):</span><br><span class="line">        result.append(p.apply_async(get_info, args=(assignment_list[i], i)))</span><br><span class="line">    p.close()</span><br><span class="line">    p.join()</span><br><span class="line">    <span class="keyword">for</span> result_i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(result)):</span><br><span class="line">        fin_info_result_list = result[result_i].get()</span><br><span class="line">        fin_save_list.extend(fin_info_result_list)  <span class="comment"># 将各个进程获得的列表合并</span></span><br><span class="line">    save_excel(fin_save_list, file_name)</span><br><span class="line">    endtime = datetime.datetime.now()</span><br><span class="line">    time = (endtime - starttime).seconds</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;总共用时：%s s&#x27;</span> % time)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>多进程</tag>
      </tags>
  </entry>
  <entry>
    <title>类型化数组</title>
    <url>/2023/05/26/33653.html</url>
    <content><![CDATA[<p>为了绘制三维图形，WebGL通常需要同时处理大量相同类型的数据，例如顶点的坐标和颜色数据。为了优化性能，WebGL为每种基本数据类型引入了一种特殊的数组（类型化数组）。浏览器事先知道数组中的数据类型，所以处理起来也更加有效率。<br><img src="/images/arrays.jpg" alt="类型化数组"><br><img src="/images/array_methods_202305311.jpg" alt="类型化数组方法"><br>注意：</p>
<ol>
<li>类型化数组不支持push,pop方法；</li>
<li>类型化数组初始化唯一方法是new,如 new Float32Array([0.0, 0.5, -0.5, -0.5, 0.5, -0.5])；</li>
<li>另外，可以通过定义长度初始化一个数组 new Float32Array(4)</li>
</ol>
]]></content>
      <tags>
        <tag>WebGL</tag>
      </tags>
  </entry>
  <entry>
    <title>深夜纵有千言胆，天明必悔</title>
    <url>/2020/05/19/59224.html</url>
    <content><![CDATA[<p>1、总是钟情于一，难以自拔，这可能是我最大的可悲之处。<br>2、可能受制于眼界，困囿于自己，无法走出自己的圈子。<br>3、从未如此长时间的想念一个人这么久、这么频繁，每天每个小时，除了至亲。<br>4、时不时看到罗曼罗兰的英雄主义，我认为这种阐释很有道理，但是自己却没有深刻体会到。<br>5、这次身体的异样算是给自己敲响了警钟，体会到极致的孤独就是自己一个在医院，各种检查用尽，不知是否虚惊一场，未来是不是也这样。<br>6、从前排斥的东西，是否需要重新审视，因为我也知道那是在压抑自己，实际自己内心也无比渴望。<br>7、从前纵情挥霍的东西，现在也需要收敛抑或是改正了，真的不好。<br>8、昨天跟人说自己年纪大了，任何事还是悠着点，旁人听完笑说你才多大，不知安慰还是事实，但是三十而立的坎儿算是来了。<br>9、周末去和家人好好说说吧，毕竟这次疫情半年多没见面了，我决定摊牌了。<br>10、深夜纵有千言胆，天明必悔，所以我还是光天化日琢磨一下，除了白日做梦，其他的就很理性了。</p>
]]></content>
  </entry>
  <entry>
    <title>缓冲区对象工作流程</title>
    <url>/2023/05/25/47570.html</url>
    <content><![CDATA[<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、创建缓冲区对象（gl.createBuffer()）;</span><br><span class="line"><span class="number">2</span>、绑定缓冲区对象（gl.bindBuffer()）;</span><br><span class="line"><span class="number">3</span>、将数据写入缓冲区对象（gl.bufferData()）;</span><br><span class="line"><span class="number">4</span>、将缓冲区对象分配给一个<span class="keyword">attribute</span>变量（gl.vertexAttribPointer()）;</span><br><span class="line"><span class="number">5</span>、开启<span class="keyword">attribute</span>变量（gl.enableVertexAttribArray()）</span><br></pre></td></tr></table></figure>

<p><img src="/images/buffer_object20230525.png" alt="缓冲区对象工作流程1"><br><img src="/images/202305261.jpg" alt="缓冲区对象工作流程2"></p>
]]></content>
      <tags>
        <tag>WebGL</tag>
      </tags>
  </entry>
  <entry>
    <title>欲戴其冠,必承其重---谈谈ArcGIS制图表达</title>
    <url>/2016/11/01/7022.html</url>
    <content><![CDATA[<p>很早的时候，ArcGIS中就增加了制图表达的功能，只是用的人不多，所以一直不为大多数人所知。本来ArcGIS的基本标注已经满足大部分的出图需求，制图表达如同没有开封的美酒，一直等待去开启，但是任何东西都要有个度，如果酒喝多了也不好，影像做事效率。<span id="more"></span><br>例如，以下是广州的行政区划图，很简单的一张图，根据不同区域分类着色，然后添加文字标注就行了，放大缩小加载都很快，但是看起来很单调，没有美观可言。<br><img src="/images/110102.jpg" alt="原图"><br>下图简单增加制图表达后，如颜色渐变和缓冲区立体效果，立刻显得很有艺术的气息 (<em>^__^</em>) 嘻嘻……)，但是美丽的背后带来不小的副作用，图层缩放加载非常慢，影响制图效率，所以预先要将一些简单地标注完成再转为制图表达。<br><img src="/images/110101.jpg" alt="添加制图表达"><br>有一句话说得好，”欲戴其冠,必承其重“，对于制图表达加载效率的这个问题，需要以后版本的改进，也有可能我没触及到，比如ArcGIS Pro中是否已经解决这个问题。<br>虽然官方在ArcGIS 10.1版本的时候就说过支持制图表达发布为服务，但是支持的范围是有限的，目前来说10.4.1依然没多大，报错的情况还挺多的，希望以后的server能做一下改进，但是结合Arcgis API for js，应该也可以实现我们所要求的一些效果。<br>总而言之，对于专题出图和打印，制图表达仍然是非常有用的功能，他让你的地图抽象地更接地气，更为合理，更为美观，也希望以后愈加完美生动地展示在不同的平台。</p>
]]></content>
      <categories>
        <category>GIS</category>
      </categories>
      <tags>
        <tag>GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>网站服务器(Apach)日志读取分析成图及代码</title>
    <url>/2017/02/09/65202.html</url>
    <content><![CDATA[<p>先说一句招黑的话：python是最好的编程语言！<br><img src="/images/02091.jpg" alt="还有王法吗？"><br>没有之一<br><img src="/images/02092.jpg" alt="还有谁"></p>
<span id="more"></span>
<p>近来一直在学python，<br>最先知道python可以做爬虫，简单几行代码，轻松爬取网站的内容<br>上手也比较快，即学即上岗<br><img src="/images/02094.jpg" alt="即学即上岗"><br>python真是无所不能呀，越来越被人重视，现在是引用这张经典照片的时候了<br><img src="/images/02093.jpg" alt="人生苦短，我用python"><br>比如现在使用Arcpy写一写批处理的脚本，解决很多繁琐的问题<br>还有爬虫，将爬到的数据分析一下，很有成就感<br>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<br>过年放假前，接到一项挑战：将公司论坛网站（<a href="http://zhihu.esrichina.com.cn/">ArcGIS知乎</a>）服务器上的Apach日志分析一下，看看网站论坛的搜索情况<br>日志是每天生成一个，一共是二百多天的，总共大概1.3个G，数量不大。</p>
<h2 id="读取数据-每天搜索次数统计"><a href="#读取数据-每天搜索次数统计" class="headerlink" title="读取数据 每天搜索次数统计"></a>读取数据 每天搜索次数统计</h2><p>1、首先肯定是看一下这些文件名字，嗯，很正规，方便后续的读取和存储<br><img src="/images/02095.jpg" alt="日志"><br>2、然后随便打开一个文件，分析一下存储结构，<br>然后找到自己需要的内容，初步思考怎么提取出来<br><img src="/images/02096.jpg" alt="文件"><br>3、接着尝试写代码读取一个文件看看，无压力<br>4、现在要的是将里面有形如“GET //search/ajax/search_result/search_type-questions__q-%E5%85%A5%E9%97%A8”搜索的请求行取出来，找到其中q-%E5%85%A5%E9%97%A8字符串，<br>然后使用“urllib.parse.unquote”转码，转为可以读懂的关键词，这就是要的结果了<br>5、读取到每个日志文件中的关键词后，将其存储到文本中,代码如下，</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">###读取源数据，通过挑选、反编码并写入内存</span></span><br><span class="line">rootdir = <span class="string">&quot;C://Users//Esri//Desktop//log&quot;</span></span><br><span class="line">loglist = []</span><br><span class="line">tongjilist = []</span><br><span class="line"><span class="keyword">for</span> parent, dirnames, filenames <span class="keyword">in</span> os.walk(rootdir):</span><br><span class="line">    day = <span class="number">1</span></span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> filenames:</span><br><span class="line">        filedate = filename[<span class="number">7</span>:-<span class="number">4</span>]</span><br><span class="line">        filepath = os.path.join(parent, filename)</span><br><span class="line">        <span class="comment"># print(filedate)</span></span><br><span class="line">        <span class="comment"># print(filepath)</span></span><br><span class="line">        <span class="built_in">input</span> = <span class="built_in">open</span>(filepath, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">        num = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> <span class="built_in">input</span>:</span><br><span class="line">            <span class="keyword">if</span> (</span><br><span class="line">                    <span class="string">&#x27;GET //search/ajax/search_result/search_type-questions__q-&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;template-__page-1&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;search_type-questions&#x27;</span>) <span class="keyword">in</span> line:</span><br><span class="line">                kw1 = line.split()[<span class="number">6</span>][<span class="number">53</span>:-<span class="number">19</span>]</span><br><span class="line">                kw = urllib.parse.unquote(kw1).replace(<span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">&#x27;?&#x27;</span> <span class="keyword">in</span> kw:</span><br><span class="line">                    <span class="keyword">pass</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="comment"># file1 = open(&#x27;C://Users//Esri//Desktop//statistics//原始数据.txt&#x27;, &#x27;a&#x27;,encoding=&#x27;utf-8&#x27;)</span></span><br><span class="line">                    logline = <span class="built_in">str</span>(line.split()[<span class="number">0</span>]) + <span class="string">&#x27;,&#x27;</span> + <span class="built_in">str</span>(line.split()[<span class="number">3</span>][<span class="number">1</span>:]) + <span class="string">&#x27;,&#x27;</span> + kw + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">                    loglist.append(logline)</span><br><span class="line">                    <span class="comment"># file1 = file1.write(line1)</span></span><br><span class="line">                    <span class="comment"># print(i)</span></span><br><span class="line">                    i += <span class="number">1</span></span><br><span class="line">                    num += <span class="number">1</span></span><br><span class="line">        day += <span class="number">1</span></span><br><span class="line">        <span class="built_in">print</span>(filedate + <span class="string">&quot;:共有&quot;</span> + <span class="built_in">str</span>(num) + <span class="string">&quot;次搜索&quot;</span>)</span><br><span class="line">        <span class="comment"># file2 = open(&#x27;C://Users//Esri//Desktop//statistics//每天搜索次数统计.txt&#x27;, &#x27;a&#x27;)</span></span><br><span class="line">        tongjiline = filedate + <span class="string">&#x27;,&#x27;</span> + <span class="built_in">str</span>(num) + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">        tongjilist.append(tongjiline)</span><br><span class="line"><span class="comment">###创建文本并写入数据表头</span></span><br><span class="line">log = <span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//原始数据.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">loghead = <span class="string">&quot;IP&quot;</span> + <span class="string">&#x27;,&#x27;</span> + <span class="string">&quot;日期&quot;</span> + <span class="string">&#x27;,&#x27;</span> + <span class="string">&quot;搜索关键词&quot;</span> + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">log.write(loghead)  <span class="comment"># 写文件头</span></span><br><span class="line">log.close()</span><br><span class="line">tongji = <span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//每天搜索次数统计.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">tongjihead = <span class="string">&quot;日期&quot;</span> + <span class="string">&#x27;,&#x27;</span> + <span class="string">&quot;次数&quot;</span> + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">tongji.write(tongjihead)  <span class="comment"># 写文件头</span></span><br><span class="line">tongji.close()</span><br><span class="line"><span class="comment">###将内存的list保存到文本中</span></span><br><span class="line">openlog = <span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//原始数据.txt&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">openlog.writelines(loglist)</span><br><span class="line">openlog.close()</span><br><span class="line">opentongji = <span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//每天搜索次数统计.txt&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">opentongji.writelines(tongjilist)</span><br><span class="line">opentongji.close()</span><br><span class="line"><span class="keyword">del</span> loglist</span><br><span class="line"><span class="keyword">del</span> tongjilist</span><br><span class="line">day -= <span class="number">1</span></span><br><span class="line">sumday = i - <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(day) + <span class="string">&quot;天一共有：&quot;</span> + <span class="built_in">str</span>(sumday) + <span class="string">&quot;次搜索&quot;</span>)</span><br><span class="line"><span class="comment"># print(filedate)</span></span><br><span class="line">startday = (datetime.datetime.strptime(filedate, <span class="string">&quot;%Y-%m-%d&quot;</span>) - datetime.timedelta(days=day - <span class="number">1</span>)).strftime(<span class="string">&quot;%Y-%m-%d&quot;</span>)</span><br><span class="line"><span class="comment"># print(startday)</span></span><br></pre></td></tr></table></figure>

<p>PS：读取完文件花了10S</p>
<h2 id="同一IP、日期、搜索关键词结果去重"><a href="#同一IP、日期、搜索关键词结果去重" class="headerlink" title="同一IP、日期、搜索关键词结果去重"></a>同一IP、日期、搜索关键词结果去重</h2><p>好了，得到初步结果。<br>通过代码，可以看到：每天搜索次数统计.txt中包含了三方面的内容：IP，时间，搜索关键词，<br>对于同一IP，同一时间，同一搜索关键词进行去重，得到清洗后的数据源，才能进行后续的有效分析<br>代码如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;同一IP、日期、搜索关键词结果去重&#x27;&#x27;&#x27;</span></span><br><span class="line">lines_seen = <span class="built_in">set</span>()</span><br><span class="line">outfile = <span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//nodate.txt&#x27;</span>, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> <span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//原始数据.txt&#x27;</span>, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>):</span><br><span class="line">    outfile = <span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//nodate.txt&#x27;</span>, <span class="string">&quot;a&quot;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    rline1 = line.split(<span class="string">&#x27;,&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># print(rline1)</span></span><br><span class="line">    rline2 = line.split(<span class="string">&#x27;,&#x27;</span>)[<span class="number">2</span>]</span><br><span class="line">    <span class="comment"># print(rline2)</span></span><br><span class="line">    rline3 = line.split(<span class="string">&#x27;,&#x27;</span>)[<span class="number">1</span>][:-<span class="number">9</span>]</span><br><span class="line">    <span class="comment"># print(rline3)</span></span><br><span class="line">    reline = rline1 + <span class="string">&#x27;,&#x27;</span> + rline3 + <span class="string">&#x27;,&#x27;</span> + rline2</span><br><span class="line">    <span class="keyword">if</span> reline <span class="keyword">not</span> <span class="keyword">in</span> lines_seen:</span><br><span class="line">        <span class="comment"># print(&#x27;reline:&#x27;+reline)</span></span><br><span class="line">        outfile.write(reline)</span><br><span class="line">        lines_seen.add(reline)</span><br><span class="line">opendupbeta = <span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//nodate.txt&#x27;</span>, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">opendup = <span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//爬取的数据源.txt&#x27;</span>, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">opendup.write(re.sub(<span class="string">r&#x27;IP,,搜索关键词&#x27;</span>, <span class="string">&#x27;IP,日期,搜索关键词&#x27;</span>, opendupbeta.read()))</span><br><span class="line">opendupbeta.close()</span><br><span class="line">opendup.close</span><br></pre></td></tr></table></figure>

<h2 id="搜索关键词Top100统计"><a href="#搜索关键词Top100统计" class="headerlink" title="搜索关键词Top100统计"></a>搜索关键词Top100统计</h2><p>有了数据能做些什么呢？<br>既然是网站论坛的搜索关键词统计，那么统计一下搜索次数最高的关键词 TOP100！<br>python很容易上手，那么问题来了：你将对Python的了解不够深入。<br>所以在你开始实现自己的想法时，一种“朴素的编程思想”贯穿脑中，费尽心力写了几十行，还不怎么完美<br>最后发现该功能已经写成函数了，你只需用一行去调用即可。<br>这里不禁感叹python的强大：没有做不到的，只有你想不到的。<br>好吧，这是我的心得体会！<br>附上统计Top100的代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;搜索关键词Top100统计&#x27;&#x27;&#x27;</span></span><br><span class="line">outfile1 = <span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//frequencybeta.txt&#x27;</span>, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">outfile2 = <span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//爬取的数据源.txt&#x27;</span>, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> outfile2:</span><br><span class="line">    reline1 = line.split(<span class="string">&#x27;,&#x27;</span>)[<span class="number">2</span>]</span><br><span class="line">    outfile1.write(reline1)</span><br><span class="line">outfile1.close()</span><br><span class="line">outfile2.close()</span><br><span class="line">f1 = <span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//frequencybeta.txt&#x27;</span>, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">f2 = <span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//frequency.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">f2.write(re.sub(<span class="string">r&#x27;搜索关键词&#x27;</span>, <span class="string">&#x27;&#x27;</span>, f1.read()))</span><br><span class="line">f1.close()</span><br><span class="line">f2.close()</span><br><span class="line">openfre = <span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//frequency.txt&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">str1 = openfre.read().lower().split()</span><br><span class="line"><span class="comment"># print(str1)</span></span><br><span class="line"><span class="comment"># print(&quot;原文本:\n %s&quot;% str1)</span></span><br><span class="line"><span class="comment"># print(&quot;\n各词出现的次数：\n %s&quot; % collections.Counter(str1))</span></span><br><span class="line"><span class="comment"># print(type(collections.Counter(str1)))</span></span><br><span class="line"><span class="comment"># cishu= collections.Counter(str1)</span></span><br><span class="line"><span class="comment"># for  ci in str1:</span></span><br><span class="line"><span class="comment"># print(ci, cishu[ci])</span></span><br><span class="line"><span class="comment"># print(collections.Counter(str1)[&#x27;arcgis&#x27;])#以字典的形式存储，每个关键词对应的键值就是在文本中出现的次数</span></span><br><span class="line">mc100 = re.sub(<span class="string">&#x27;\ |\[|\]|\(|\)|\&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="built_in">str</span>(collections.Counter(str1).most_common(<span class="number">100</span>)))</span><br><span class="line"><span class="comment"># print(mc100)</span></span><br><span class="line">msarr = mc100.split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line"><span class="comment"># print(type(msarr))</span></span><br><span class="line">openfre.close()</span><br><span class="line">file3 = <span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//关键词top100.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">line3 = <span class="string">&quot;关键词&quot;</span> + <span class="string">&#x27;,&#x27;</span> + <span class="string">&quot;次数&quot;</span> + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">file3_ = file3.write(line3)</span><br><span class="line">i = <span class="number">1</span></span><br><span class="line">x = []</span><br><span class="line">y = []</span><br><span class="line">file3.close()</span><br><span class="line"><span class="keyword">for</span> xunhuan <span class="keyword">in</span> msarr:</span><br><span class="line">    file4 = <span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//关键词top100.txt&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> != <span class="number">0</span>:</span><br><span class="line">        xunhuandot = xunhuan + <span class="string">&quot;,&quot;</span></span><br><span class="line">        file4.write(xunhuandot)</span><br><span class="line">        x.append(xunhuan)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        xunhuanbr = xunhuan + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">        file4.write(xunhuanbr)</span><br><span class="line">        y.append(<span class="built_in">int</span>(xunhuan))</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line"><span class="comment"># print(x)</span></span><br><span class="line"><span class="comment"># print(y)</span></span><br><span class="line">file3.close()</span><br><span class="line">file4.close()</span><br></pre></td></tr></table></figure>

<h2 id="按月份统计搜索次数"><a href="#按月份统计搜索次数" class="headerlink" title="按月份统计搜索次数"></a>按月份统计搜索次数</h2><p>有了每天的搜索次数，就可以得到每月的搜索次数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;按月份统计汇总&#x27;&#x27;&#x27;</span></span><br><span class="line">openutj = <span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//uheadtongji.txt&#x27;</span>,<span class="string">&quot;r&quot;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">umonth=[]</span><br><span class="line"><span class="keyword">for</span> line5 <span class="keyword">in</span> openutj.read().split(<span class="string">&#x27;\n&#x27;</span>):</span><br><span class="line">    umonth.append(line5[:<span class="number">7</span>])</span><br><span class="line"><span class="comment">#print(year)</span></span><br><span class="line"><span class="comment">#print(month)</span></span><br><span class="line">openutj.close()</span><br><span class="line">outfile7 = <span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//每月搜索次数统计.txt&#x27;</span>, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">headms=<span class="string">&#x27;月份&#x27;</span>+<span class="string">&#x27;,&#x27;</span>+<span class="string">&#x27;次数&#x27;</span>+<span class="string">&#x27;\n&#x27;</span></span><br><span class="line">outfile7.write(headms)</span><br><span class="line">outfile7.close()</span><br><span class="line">uyemon=[]</span><br><span class="line"><span class="keyword">for</span> mon <span class="keyword">in</span> umonth:</span><br><span class="line">    <span class="comment">#print(mon)</span></span><br><span class="line">    openutj1 = <span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//uheadtongji.txt&#x27;</span>, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    summ=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> line6 <span class="keyword">in</span> openutj1.read().split(<span class="string">&#x27;\n&#x27;</span>):</span><br><span class="line">        monn=line6[:<span class="number">7</span>]</span><br><span class="line">        <span class="keyword">if</span> monn==mon:</span><br><span class="line">            summ+=<span class="built_in">int</span>(line6[<span class="number">11</span>:])</span><br><span class="line">    uyemon.append(summ)</span><br><span class="line"><span class="comment">#print(uyemon)</span></span><br><span class="line">month=[]</span><br><span class="line"><span class="keyword">for</span> dmonth <span class="keyword">in</span> umonth:</span><br><span class="line">    <span class="keyword">if</span> dmonth <span class="keyword">not</span> <span class="keyword">in</span> month:</span><br><span class="line">        month.append(dmonth)</span><br><span class="line"><span class="comment">#print(month)</span></span><br><span class="line">yemon=[]</span><br><span class="line"><span class="keyword">for</span> dyemon <span class="keyword">in</span> uyemon:</span><br><span class="line">    <span class="keyword">if</span> dyemon <span class="keyword">not</span> <span class="keyword">in</span> yemon:</span><br><span class="line">        yemon.append(dyemon)</span><br><span class="line"><span class="comment">#print(yemon)</span></span><br><span class="line">openutj1.close()</span><br><span class="line">i22=<span class="number">0</span></span><br><span class="line">sousuo=[]</span><br><span class="line"><span class="keyword">for</span> c22 <span class="keyword">in</span> month:</span><br><span class="line">    i22+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> i22!=<span class="built_in">len</span>(month):</span><br><span class="line">        sousuo.append(<span class="built_in">str</span>(c22)+<span class="string">&#x27;,&#x27;</span>+<span class="built_in">str</span>(yemon[i22-<span class="number">1</span>])+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        sousuo.append(<span class="built_in">str</span>(c22) + <span class="string">&#x27;,&#x27;</span> + <span class="built_in">str</span>(yemon[i22 - <span class="number">1</span>]))</span><br><span class="line"><span class="comment">#print(sousuo)</span></span><br><span class="line">openmeiyue=<span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//每月搜索次数统计.txt&#x27;</span>, <span class="string">&quot;a&quot;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">openmeiyue.writelines(sousuo)</span><br><span class="line"><span class="comment">#print(sousuo)</span></span><br><span class="line">openmeiyue.close()</span><br></pre></td></tr></table></figure>

<h2 id="统计结果成图"><a href="#统计结果成图" class="headerlink" title="统计结果成图"></a>统计结果成图</h2><p>得到统计结果后，可以通过python的matplotlib等库可视化数据</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;每天统计成图&#x27;&#x27;&#x27;</span></span><br><span class="line">opentj1 = <span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//每天搜索次数统计.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">openu1 = <span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//uheadtongji.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">jishu = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> line1 <span class="keyword">in</span> opentj1.read().split(<span class="string">&#x27;\n&#x27;</span>):</span><br><span class="line">    <span class="comment"># print(line1)</span></span><br><span class="line">    jishu += <span class="number">1</span></span><br><span class="line"><span class="comment"># print(jishu)</span></span><br><span class="line">num = <span class="number">0</span></span><br><span class="line">opentj2 = <span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//每天搜索次数统计.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> opentj2.read().split(<span class="string">&#x27;\n&#x27;</span>):</span><br><span class="line">    <span class="comment"># print(line)</span></span><br><span class="line">    openu2 = <span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//uheadtongji.txt&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="comment"># print(line3)</span></span><br><span class="line">    <span class="keyword">if</span> line == <span class="string">&#x27;日期,次数&#x27;</span> <span class="keyword">or</span> line == <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> num != jishu - <span class="number">2</span>:</span><br><span class="line">            openu2.write(line + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            openu2.write(line)</span><br><span class="line">    num += <span class="number">1</span></span><br><span class="line">opentj1.close()</span><br><span class="line">opentj2.close()</span><br><span class="line">f5 = <span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//uheadtongji.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>).read().replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;,&#x27;</span>).split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line"><span class="comment"># print(f5)</span></span><br><span class="line">jishu2 = <span class="number">1</span></span><br><span class="line">x = []</span><br><span class="line">y = []</span><br><span class="line"><span class="keyword">for</span> uh <span class="keyword">in</span> f5:</span><br><span class="line">    <span class="comment"># print(uh)</span></span><br><span class="line">    <span class="keyword">if</span> jishu2 % <span class="number">2</span> != <span class="number">0</span>:</span><br><span class="line">        x.append(uh)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        y.append(<span class="built_in">int</span>(uh))</span><br><span class="line">    jishu2 += <span class="number">1</span></span><br><span class="line">jishu1 = <span class="number">1</span></span><br><span class="line">x1 = []</span><br><span class="line"><span class="keyword">for</span> jishu1 <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(x) + <span class="number">1</span>):</span><br><span class="line">    x1.append(<span class="built_in">int</span>(jishu1))</span><br><span class="line"><span class="comment"># print(x1)</span></span><br><span class="line">DataX = <span class="built_in">tuple</span>(x1)</span><br><span class="line"><span class="comment"># print(type(DataX))</span></span><br><span class="line">DataY = <span class="built_in">tuple</span>(y)</span><br><span class="line"></span><br><span class="line">fig3 = pl.figure()</span><br><span class="line">fig3.set_size_inches(<span class="number">30</span>, <span class="number">10.5</span>)</span><br><span class="line">plt.title(</span><br><span class="line">    <span class="string">&#x27;ArcGIS知乎站内搜索每天统计（&#x27;</span> + startday + <span class="string">&#x27;至&#x27;</span> + filedate + <span class="string">&#x27;）&#x27;</span> + <span class="string">&#x27;\n&#x27;</span> + <span class="string">&#x27;(&#x27;</span> + <span class="built_in">str</span>(day) + <span class="string">&quot;天一共有：&quot;</span> + <span class="built_in">str</span>(sumday) + <span class="string">&quot;次搜索)&quot;</span>,</span><br><span class="line">    fontsize=<span class="number">26</span>)</span><br><span class="line">plt.xticks(fontsize=<span class="number">20</span>)</span><br><span class="line">plt.yticks(fontsize=<span class="number">20</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;日期(&#x27;</span> + startday + <span class="string">&#x27;+)&#x27;</span>, fontsize=<span class="number">23</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;次数&#x27;</span>, fontsize=<span class="number">23</span>)</span><br><span class="line">plt.plot(x1, y, <span class="string">&#x27;b*&#x27;</span>)  <span class="comment"># use pylab to plot x and y</span></span><br><span class="line">plt.plot(x1, y, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i, (_x, _y,_z) <span class="keyword">in</span> <span class="built_in">enumerate</span>(<span class="built_in">zip</span>(x1, y,y)):</span><br><span class="line">    plt.text(_x, _y, _z, color=<span class="string">&#x27;red&#x27;</span>, fontsize=<span class="number">25</span>)</span><br><span class="line">savets = <span class="string">&quot;C:/Users/Esri/Desktop/&quot;</span> + re.sub(<span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="built_in">str</span>(datetime.datetime.now())) + <span class="string">&quot;ts.png&quot;</span></span><br><span class="line">fig3.savefig(savets, dpi=<span class="number">100</span>)</span><br><span class="line"><span class="comment"># pl.show()  # show the plot on the screen</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;每月统计折点图&#x27;&#x27;&#x27;</span></span><br><span class="line">openmonth=<span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//每月搜索次数统计.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">realmonth=[]</span><br><span class="line">monsta=[]</span><br><span class="line"><span class="keyword">for</span> monybeta <span class="keyword">in</span> openmonth:</span><br><span class="line">    mony=monybeta.replace(<span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;&#x27;</span>).split(<span class="string">&#x27;,&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> mony!=<span class="string">&#x27;次数&#x27;</span>:</span><br><span class="line">        monsta.append(mony)</span><br><span class="line">        realmonth.append(monybeta[<span class="number">5</span>:<span class="number">7</span>])</span><br><span class="line">mons=[]</span><br><span class="line"><span class="comment">#print(len(monsta))</span></span><br><span class="line"><span class="keyword">for</span> monx <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(monsta)):</span><br><span class="line">    mons.append(monx+<span class="number">1</span>)</span><br><span class="line"><span class="comment">#print(monsta)</span></span><br><span class="line"><span class="comment">#print(mons)</span></span><br><span class="line">fig4 = plt.figure()</span><br><span class="line">fig4.set_size_inches(<span class="number">30</span>, <span class="number">10.5</span>)</span><br><span class="line">plt.title(</span><br><span class="line">    <span class="string">&#x27;ArcGIS知乎站内搜索每月统计（&#x27;</span> + startday + <span class="string">&#x27;至&#x27;</span> + filedate + <span class="string">&#x27;）&#x27;</span> + <span class="string">&#x27;\n&#x27;</span> + <span class="string">&#x27;(&#x27;</span> + <span class="built_in">str</span>(day) + <span class="string">&quot;天一共有：&quot;</span> + <span class="built_in">str</span>(sumday) + <span class="string">&quot;次搜索)&quot;</span>,</span><br><span class="line">    fontsize=<span class="number">26</span>)</span><br><span class="line">plt.xticks(fontsize=<span class="number">20</span>)</span><br><span class="line">plt.yticks(fontsize=<span class="number">20</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;月份(&#x27;</span> + <span class="built_in">str</span>(startday)[<span class="number">5</span>:<span class="number">7</span>] + <span class="string">&#x27;月份开始--)&#x27;</span>, fontsize=<span class="number">23</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;次数&#x27;</span>, fontsize=<span class="number">23</span>)</span><br><span class="line">plt.plot(mons, monsta, <span class="string">&#x27;bo&#x27;</span>,mons, monsta, <span class="string">&#x27;r&#x27;</span>)  <span class="comment"># use pylab to plot x and y</span></span><br><span class="line"><span class="comment">#plt.plot(mons, monsta, &#x27;r&#x27;)</span></span><br><span class="line">plt.xticks(mons, realmonth, fontsize=<span class="number">20</span>)</span><br><span class="line"><span class="keyword">for</span> i, (_x, _y,_z) <span class="keyword">in</span> <span class="built_in">enumerate</span>(<span class="built_in">zip</span>(mons, monsta,monsta)):</span><br><span class="line">    plt.text(_x, _y, _z, color=<span class="string">&#x27;red&#x27;</span>, fontsize=<span class="number">25</span>)</span><br><span class="line">savemonth = <span class="string">&quot;C:/Users/Esri/Desktop/&quot;</span> + re.sub(<span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="built_in">str</span>(datetime.datetime.now())) + <span class="string">&quot;month.png&quot;</span></span><br><span class="line">fig4.savefig(savemonth, dpi=<span class="number">100</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;top20成图&#x27;&#x27;&#x27;</span></span><br><span class="line">x = x[:<span class="number">20</span>]</span><br><span class="line">y = y[:<span class="number">20</span>]</span><br><span class="line">i = <span class="number">1</span></span><br><span class="line">x1 = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(x) + <span class="number">1</span>):</span><br><span class="line">    x1.append(<span class="built_in">int</span>(i)+<span class="number">5</span>)</span><br><span class="line">DataX = <span class="built_in">tuple</span>(x1)</span><br><span class="line"><span class="comment"># print(type(DataX))</span></span><br><span class="line">DataY = <span class="built_in">tuple</span>(y)</span><br><span class="line"><span class="comment"># print(type(DataY))</span></span><br><span class="line">fig1 = plt.figure()</span><br><span class="line">fig1.set_size_inches(<span class="number">30</span>, <span class="number">15</span>)</span><br><span class="line"><span class="comment"># plt.xlim()</span></span><br><span class="line">rects = plt.bar(left=DataX, height=DataY, width=<span class="number">0.5</span>, align=<span class="string">&quot;center&quot;</span>, yerr=<span class="number">0.000001</span>, facecolor=<span class="string">&#x27;lightskyblue&#x27;</span>,</span><br><span class="line">                edgecolor=<span class="string">&#x27;white&#x27;</span>)</span><br><span class="line">plt.plot(DataX,DataY)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">autolabel</span>(<span class="params">rects</span>):</span><br><span class="line">    <span class="keyword">for</span> rect <span class="keyword">in</span> rects:</span><br><span class="line">        height = rect.get_height()</span><br><span class="line">        plt.text(rect.get_x() + rect.get_width() / <span class="number">3.</span>, <span class="number">1.01</span> * height, <span class="string">&#x27;%s&#x27;</span> % <span class="built_in">int</span>(height), color=<span class="string">&#x27;red&#x27;</span>, fontsize=<span class="number">25</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">autolabel(rects)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;关键词&#x27;</span>, fontsize=<span class="number">23</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;次数&#x27;</span>, fontsize=<span class="number">23</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;ArcGIS知乎站内搜索关键词统计（&#x27;</span> + startday + <span class="string">&#x27;至&#x27;</span> + filedate + <span class="string">&#x27;）top20统计&#x27;</span> + <span class="string">&#x27;\n&#x27;</span> + <span class="string">&#x27;(&#x27;</span> + <span class="built_in">str</span>(day) + <span class="string">&quot;天一共有：&quot;</span> + <span class="built_in">str</span>(</span><br><span class="line">    sumday) + <span class="string">&quot;次搜索)&quot;</span>, fontsize=<span class="number">26</span>)</span><br><span class="line">plt.yticks(fontsize=<span class="number">20</span>)</span><br><span class="line">plt.xticks(DataX, <span class="built_in">tuple</span>(x), fontsize=<span class="number">20</span>)</span><br><span class="line">savename = <span class="string">&quot;C:/Users/Esri/Desktop/&quot;</span> + re.sub(<span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="built_in">str</span>(datetime.datetime.now())) + <span class="string">&quot;.png&quot;</span></span><br><span class="line"><span class="comment"># print(savename)</span></span><br><span class="line">fig1.savefig(savename, dpi=<span class="number">100</span>)</span><br><span class="line"><span class="comment"># plt.show()</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;top20成图&#x27;&#x27;&#x27;</span></span><br><span class="line">x = x[:<span class="number">20</span>]</span><br><span class="line">y = y[:<span class="number">20</span>]</span><br><span class="line">i = <span class="number">1</span></span><br><span class="line">x1 = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(x) + <span class="number">1</span>):</span><br><span class="line">    x1.append(<span class="built_in">int</span>(i)+<span class="number">5</span>)</span><br><span class="line">DataX = <span class="built_in">tuple</span>(x1)</span><br><span class="line"><span class="comment"># print(type(DataX))</span></span><br><span class="line">DataY = <span class="built_in">tuple</span>(y)</span><br><span class="line"><span class="comment"># print(type(DataY))</span></span><br><span class="line">fig1 = plt.figure()</span><br><span class="line">fig1.set_size_inches(<span class="number">30</span>, <span class="number">15</span>)</span><br><span class="line"><span class="comment"># plt.xlim()</span></span><br><span class="line">rects = plt.bar(left=DataX, height=DataY, width=<span class="number">0.5</span>, align=<span class="string">&quot;center&quot;</span>, yerr=<span class="number">0.000001</span>, facecolor=<span class="string">&#x27;lightskyblue&#x27;</span>,</span><br><span class="line">                edgecolor=<span class="string">&#x27;white&#x27;</span>)</span><br><span class="line">plt.plot(DataX,DataY)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">autolabel</span>(<span class="params">rects</span>):</span><br><span class="line">    <span class="keyword">for</span> rect <span class="keyword">in</span> rects:</span><br><span class="line">        height = rect.get_height()</span><br><span class="line">        plt.text(rect.get_x() + rect.get_width() / <span class="number">3.</span>, <span class="number">1.01</span> * height, <span class="string">&#x27;%s&#x27;</span> % <span class="built_in">int</span>(height), color=<span class="string">&#x27;red&#x27;</span>, fontsize=<span class="number">25</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">autolabel(rects)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;关键词&#x27;</span>, fontsize=<span class="number">23</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;次数&#x27;</span>, fontsize=<span class="number">23</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;ArcGIS知乎站内搜索关键词统计（&#x27;</span> + startday + <span class="string">&#x27;至&#x27;</span> + filedate + <span class="string">&#x27;）top20统计&#x27;</span> + <span class="string">&#x27;\n&#x27;</span> + <span class="string">&#x27;(&#x27;</span> + <span class="built_in">str</span>(day) + <span class="string">&quot;天一共有：&quot;</span> + <span class="built_in">str</span>(</span><br><span class="line">    sumday) + <span class="string">&quot;次搜索)&quot;</span>, fontsize=<span class="number">26</span>)</span><br><span class="line">plt.yticks(fontsize=<span class="number">20</span>)</span><br><span class="line">plt.xticks(DataX, <span class="built_in">tuple</span>(x), fontsize=<span class="number">20</span>)</span><br><span class="line">savename = <span class="string">&quot;C:/Users/Esri/Desktop/&quot;</span> + re.sub(<span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="built_in">str</span>(datetime.datetime.now())) + <span class="string">&quot;.png&quot;</span></span><br><span class="line"><span class="comment"># print(savename)</span></span><br><span class="line">fig1.savefig(savename, dpi=<span class="number">100</span>)</span><br><span class="line"><span class="comment"># plt.show()</span></span><br></pre></td></tr></table></figure>

<h2 id="由于上述都是以txt文档的形式保存数据，为方便出图，可以转成Excel格式，实现代码如下"><a href="#由于上述都是以txt文档的形式保存数据，为方便出图，可以转成Excel格式，实现代码如下" class="headerlink" title="由于上述都是以txt文档的形式保存数据，为方便出图，可以转成Excel格式，实现代码如下"></a>由于上述都是以txt文档的形式保存数据，为方便出图，可以转成Excel格式，实现代码如下</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">txt_to_xlsx</span>(<span class="params">txtpath</span>):</span><br><span class="line">    exc = xlsxwriter.Workbook(</span><br><span class="line">        <span class="string">&#x27;C://Users//Esri//Desktop//statistics//&#x27;</span> + txtpath.split(<span class="string">&#x27;//&#x27;</span>)[-<span class="number">1</span>].split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">0</span>] + <span class="string">&#x27;.xlsx&#x27;</span>)</span><br><span class="line">    worksheet = exc.add_worksheet()</span><br><span class="line">    openf = <span class="built_in">open</span>(txtpath, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    opentxt = openf.read().split(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    txtline = <span class="number">0</span></span><br><span class="line">    spaceline = <span class="number">0</span></span><br><span class="line">    storesp = <span class="built_in">set</span>()</span><br><span class="line">    newtxt = []</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;首先去掉空行&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> opentxt:</span><br><span class="line">        <span class="comment"># print(line)</span></span><br><span class="line">        txtline += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> line != <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">            newtxt.append(line)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            spaceline += <span class="number">1</span></span><br><span class="line">            storesp.add(txtline)</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;将内存中list写入xlsx&#x27;&#x27;&#x27;</span></span><br><span class="line">    colnums = <span class="built_in">len</span>(newtxt[<span class="number">0</span>].split(<span class="string">&#x27;,&#x27;</span>))</span><br><span class="line">    maxwidth = <span class="number">0</span></span><br><span class="line">    linenum = <span class="built_in">len</span>(newtxt)</span><br><span class="line">    <span class="keyword">for</span> colnum <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, colnums):</span><br><span class="line">        <span class="keyword">for</span> linenums <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, linenum):</span><br><span class="line">            wid = <span class="built_in">len</span>(newtxt[linenums].split(<span class="string">&#x27;,&#x27;</span>)[colnum])</span><br><span class="line">            <span class="keyword">if</span> wid &gt;= maxwidth:</span><br><span class="line">                maxwidth = wid</span><br><span class="line">        worksheet.set_column(colnum, colnum, width=maxwidth)</span><br><span class="line">        <span class="keyword">for</span> linenumss <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, linenum):</span><br><span class="line">            worksheet.write(linenumss, colnum, newtxt[linenumss].split(<span class="string">&#x27;,&#x27;</span>)[colnum])</span><br><span class="line">    exc.close()</span><br><span class="line">    openf.close()</span><br><span class="line">    <span class="comment"># &#x27;&#x27;&#x27;文本信息&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># print(&#x27;=====================================&#x27;+&#x27;\n&#x27;+&#x27;导入文本信息&#x27;+&#x27;\n&#x27;+&#x27;=====================================&#x27;)</span></span><br><span class="line">    <span class="comment"># print(&#x27;该文本共有%d行&#x27; % txtline + &#x27;\n&#x27; + &#x27;有%d行为空&#x27; % spaceline + &#x27;\n&#x27; + &#x27;空行行数分别为:&#x27; + re.sub(&#x27;&#123;|&#125;&#x27;, &#x27;&#x27;, str(storesp)))</span></span><br></pre></td></tr></table></figure>

<p>到这，代码运行无误的话，数据分析结果已经得到<br>如果我进一步想将分析的结果以邮件的形式发送给别人，可以用下面的代码实现</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">_user = <span class="string">&quot;发送人邮箱地址&quot;</span></span><br><span class="line">smtpserver=<span class="string">&#x27;邮箱SMTP地址&#x27;</span></span><br><span class="line">_<span class="keyword">from</span> = <span class="string">&#x27;发送人姓名&lt;发送人邮箱地址&gt;&#x27;</span></span><br><span class="line">_pwd = <span class="string">&quot;邮箱密码&quot;</span></span><br><span class="line"><span class="comment">#----如果发送多个人用英文半角逗号隔开---</span></span><br><span class="line">_to = <span class="string">&#x27;收件人名字&lt;收件人邮箱地址&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;我们编写了一个函数_format_addr()来格式化一个邮件地址。</span></span><br><span class="line"><span class="string">注意不能简单地传入name &lt;addr@example.com&gt;，</span></span><br><span class="line"><span class="string">因为如果包含中文，需要通过Header对象进行编码。---廖雪峰&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">_format_addr</span>(<span class="params">s</span>):</span><br><span class="line">    name, addr = parseaddr(s)</span><br><span class="line">    <span class="keyword">return</span> formataddr((Header(name, <span class="string">&#x27;utf-8&#x27;</span>).encode(), addr))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如名字所示Multipart就是分多个部分</span></span><br><span class="line">msg = MIMEMultipart()</span><br><span class="line">msg[<span class="string">&quot;Subject&quot;</span>] = <span class="string">&quot;邮件名字&quot;</span></span><br><span class="line">msg[<span class="string">&quot;From&quot;</span>] =_format_addr( _<span class="keyword">from</span>)</span><br><span class="line">msg[<span class="string">&quot;To&quot;</span>] = _to</span><br><span class="line"></span><br><span class="line"><span class="comment"># ---这是文字图片部分---</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">addimg</span>(<span class="params">src, imgid</span>):<span class="comment"># 添加图片函数，参数1：图片路径，参数2：图片id</span></span><br><span class="line">    fp = <span class="built_in">open</span>(src, <span class="string">&#x27;rb&#x27;</span>)<span class="comment"># 打开文件</span></span><br><span class="line">    msgImage = MIMEImage(fp.read())<span class="comment"># 创建MIMEImage对象，读取图片内容并作为参数</span></span><br><span class="line">    fp.close()<span class="comment"># 关闭文件</span></span><br><span class="line">    msgImage.add_header(<span class="string">&#x27;Content-ID&#x27;</span>, imgid)<span class="comment"># 指定图片文件的Content-ID，imgid，&lt;img&gt;标签中的src用到</span></span><br><span class="line">    <span class="keyword">return</span> msgImage<span class="comment"># 返回msgImage对象</span></span><br><span class="line"><span class="comment">#msg = MIMEMultipart(&#x27;related&#x27;)# 创建MIMEMultipart对象，采用related定义内嵌资源的邮件体</span></span><br><span class="line"><span class="comment">#msg[&quot;Subject&quot;] = &quot;ArcGISzhihu&quot;</span></span><br><span class="line">part = MIMEText(<span class="string">&#x27;&lt;font size=&quot;18px&quot; color=red&gt;&lt;b&gt;&lt;center&gt;ArcGIS知乎站内搜索关键词统计（详情见附件）&lt;/center&gt;&lt;/b&gt;&lt;/font&gt;&#x27;</span>+<span class="string">&#x27;&lt;br/&gt;&lt;b&gt;&lt;center&gt;数据图表获取生成时间：&#x27;</span>+<span class="built_in">str</span>(datetime.datetime.now())+<span class="string">&#x27;&lt;/center&gt;&lt;/b&gt;&lt;img width=&quot;1300px&quot; src=&quot;cid:pic&quot;&gt;&#x27;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;utf-8&quot;</span> )</span><br><span class="line">msg.attach(part)</span><br><span class="line"><span class="comment"># image = MIMEImage(open(&#x27;C://Users//Esri//Desktop//0b7b02087bf40ad14cc91cbd5f2c11dfa9eccebb.jpg&#x27;,&#x27;rb&#x27;).read()).add_header(&#x27;Content-ID&#x27;,&#x27;men&#x27;)</span></span><br><span class="line">msg.attach(addimg(savename,<span class="string">&quot;pic&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># ---这是附件部分---</span></span><br><span class="line"></span><br><span class="line">part = MIMEApplication(<span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//爬取的数据源.xlsx&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>).read())</span><br><span class="line">part.add_header(<span class="string">&#x27;Content-Disposition&#x27;</span>, <span class="string">&#x27;attachment&#x27;</span>, filename=(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;&#x27;</span>,<span class="string">&quot;爬取的数据源.xlsx&quot;</span>))</span><br><span class="line">msg.attach(part)</span><br><span class="line"></span><br><span class="line">part = MIMEApplication(<span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//每天搜索次数统计.txt&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>).read())</span><br><span class="line">part.add_header(<span class="string">&#x27;Content-Disposition&#x27;</span>, <span class="string">&#x27;attachment&#x27;</span>, filename=(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;&#x27;</span>,<span class="string">&quot;每天搜索次数统计.xlsx&quot;</span>))</span><br><span class="line">msg.attach(part)</span><br><span class="line"></span><br><span class="line">part = MIMEApplication(<span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//每月搜索次数统计.xlsx&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>).read())</span><br><span class="line">part.add_header(<span class="string">&#x27;Content-Disposition&#x27;</span>, <span class="string">&#x27;attachment&#x27;</span>, filename=(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;&#x27;</span>,<span class="string">&quot;每月搜索次数统计.xlsx&quot;</span>))</span><br><span class="line">msg.attach(part)</span><br><span class="line"></span><br><span class="line">part = MIMEApplication(<span class="built_in">open</span>(<span class="string">&#x27;C://Users//Esri//Desktop//statistics//关键词top100.xlsx&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>).read())</span><br><span class="line">part.add_header(<span class="string">&#x27;Content-Disposition&#x27;</span>, <span class="string">&#x27;attachment&#x27;</span>, filename=(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;&#x27;</span>,<span class="string">&quot;关键词top100.xlsx&quot;</span>))</span><br><span class="line">msg.attach(part)</span><br><span class="line"></span><br><span class="line">part = MIMEApplication(<span class="built_in">open</span>(savename, <span class="string">&#x27;rb&#x27;</span>).read())</span><br><span class="line">part.add_header(<span class="string">&#x27;Content-Disposition&#x27;</span>, <span class="string">&#x27;attachment&#x27;</span>, filename=(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;&#x27;</span>,<span class="string">&quot;Top20统计结果直方图.png&quot;</span>))</span><br><span class="line">msg.attach(part)</span><br><span class="line"></span><br><span class="line">part = MIMEApplication(<span class="built_in">open</span>(savets, <span class="string">&#x27;rb&#x27;</span>).read())</span><br><span class="line">part.add_header(<span class="string">&#x27;Content-Disposition&#x27;</span>, <span class="string">&#x27;attachment&#x27;</span>, filename=(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;&#x27;</span>,<span class="string">&quot;每天统计结果折点图.png&quot;</span>))</span><br><span class="line">msg.attach(part)</span><br><span class="line"></span><br><span class="line">part = MIMEApplication(<span class="built_in">open</span>(savemonth, <span class="string">&#x27;rb&#x27;</span>).read())</span><br><span class="line">part.add_header(<span class="string">&#x27;Content-Disposition&#x27;</span>, <span class="string">&#x27;attachment&#x27;</span>, filename=(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;&#x27;</span>,<span class="string">&quot;每月统计结果折点图.png&quot;</span>))</span><br><span class="line">msg.attach(part)</span><br><span class="line"></span><br><span class="line">s = smtplib.SMTP(smtpserver,<span class="number">25</span>)  <span class="comment"># 连接smtp邮件服务器,端口默认是25</span></span><br><span class="line">s.login(_user, _pwd)  <span class="comment"># 登陆服务器</span></span><br><span class="line">s.sendmail(_user, _to.split(<span class="string">&#x27;,&#x27;</span>), msg.as_string())  <span class="comment"># 发送邮件</span></span><br><span class="line">s.close()</span><br></pre></td></tr></table></figure>
<p><img src="/images/02098.jpg" alt="邮件"></p>
<p>如果想知道运行这些过程消耗的时间，可以在最后加上以下代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;执行操作时间&#x27;&#x27;&#x27;</span></span><br><span class="line">endtime = datetime.datetime.now()</span><br><span class="line">time = (endtime - starttime).seconds</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;------------------------------------------------------&#x27;</span> + <span class="string">&#x27;\n&#x27;</span> + <span class="string">&quot;一共用时&quot;</span> + <span class="built_in">str</span>(time) + <span class="string">&quot;秒&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;邮件发送给:%s&#x27;</span>%_to.split(<span class="string">&#x27;,&#x27;</span>))</span><br></pre></td></tr></table></figure>

<h2 id="最后的最后，如果你觉得每天的统计次数成图效果不好，可以制作一个HTML网页去展示，调用js的C3库，易于交互查看"><a href="#最后的最后，如果你觉得每天的统计次数成图效果不好，可以制作一个HTML网页去展示，调用js的C3库，易于交互查看" class="headerlink" title="最后的最后，如果你觉得每天的统计次数成图效果不好，可以制作一个HTML网页去展示，调用js的C3库，易于交互查看    "></a><strong>最后的最后，如果你觉得每天的统计次数成图效果不好，可以制作一个HTML网页去展示，调用js的C3库，易于交互查看</strong>    </h2><p><img src="/images/02097.jpg" alt="html网页展示"></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>装server集群时，使用虚拟机克隆，需要注意的点</title>
    <url>/2017/10/19/8194.html</url>
    <content><![CDATA[<p>创建站点之前，需要修改X:\arcgis\ArcGIS\Server\framework\etc\machine-config.xml文件中的机器名。修改为本机的机器名</p>
]]></content>
  </entry>
  <entry>
    <title>获取周围邻接面的属性</title>
    <url>/2018/03/07/40221.html</url>
    <content><![CDATA[<p>先将数据复制一份添加至ArcMap中。<br>1、    打开空间连接工具，输入参数如下<br> <img src="/images/18030701.jpg" alt="空间连接工具"><br>2、    点击+号，创建一个字段，文本类型，合并选择连接，连接方式输入分号，点击OK<br> <img src="/images/18030702.jpg" alt="创建一个字段"><br>3、右击新添加的字段，选择添加字段<br> <img src="/images/18030703.jpg" alt="添加字段"><br>4、然后选择副本中字段，注意：是副本中的字段<br> <img src="/images/18030704.jpg" alt="选择副本中字段"><br>接下来是去重操作<br>1、新建一个文本字段<br> <img src="/images/18030705.jpg" alt="新建一个文本字段"><br>2、打开字段计算器，选择python,输入<br>‘;’.join( !joinattr! .split(‘;’ )[1:])<br>这里你可以将!joinattr!替换为你自己的字段<br> <img src="/images/18030706.jpg" alt="字段计算器"><br>3、结果如下<br> <img src="/images/18030707.jpg" alt="结果"></p>
]]></content>
      <categories>
        <category>GIS</category>
      </categories>
      <tags>
        <tag>ArcGIS</tag>
      </tags>
  </entry>
  <entry>
    <title>解决ArcGIS Server因端口被占用，而无法发布地图服务的方法</title>
    <url>/2016/08/20/28027.html</url>
    <content><![CDATA[<p>今天重启了一下电脑，发现ARCGIS Server的地图服务无法开启，提示4000端口被占用，经过网上搜索和摸索，最后终于得以解决，下面给出解决的办法：<span id="more"></span></p>
<p>1、首先win+R使用cmd，注意cmd必须管理员的方式打开，cmd.exe一般在C:\WINDOWS\system32路径下，找到后，右击以管理员形势运行。</p>
<p>2、然后再输入 netstat -ano 命令 enter运行，随后出现所有端口使用的情况，现以我自身的例子说明，如下图：<br><img src="/images/2222.jpg" alt="ArcGIS Server"><br>3、我们可以看到4000端口被PID为2244的进程所占用，接下来打开任务管理器，找到PID为2244的进程，然后结束任务，<br><img src="/images/3333.jpg" alt="ArcGIS Server"><br>4、接着也将ARCGISServer.exe的进程结束掉，随后在服务中重新开启ARCGISServer这项服务，问题解决！<br><img src="/images/555.jpg" alt="ArcGIS Server"><br><img src="/images/6666.jpg" alt="ArcGIS Server"></p>
<p>或者直接运行指定端口netstat -ano|findstr “4000”，然后记一下最后边的PID号，我这里为4132，继续输入tasklist|findstr “4132”,可以看到FoxitProtect.exe占用<br><img src="/images/101906.jpg" alt="被占用程序"></p>
]]></content>
      <categories>
        <category>GIS</category>
      </categories>
      <tags>
        <tag>GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>解决openlayers前端加载大数据量显示卡顿的性能建议</title>
    <url>/2021/08/13/35548.html</url>
    <content><![CDATA[<p>这段时间一直在做XX大数据项目，由于多维度和多条件查询的缘故，数据比较大，一个ol.layer.vector的图层要加载将近一两万的点，这时性能瓶颈就上来了，所以在前端显示时：页面及其卡顿甚至崩溃。另外因为添加了interaction交互事件，每个点都包含了较多的属性，信息量比较大。。。忍不了一下。。</p>
<p>照例查了查openlayers的API文档，发现新版的openlayers6支持WebGLPointsLayer,直接渲染百万级的点都没啥问题。</p>
<p>奈何现在项目用的是openlayers5，测试了一下，一些方法有更改，影响其他功能页面，短期不能贸然升级，于是放弃了这个升级的方式。</p>
<p>最后结合了切片加载形式和GIS的抽稀思想：<strong>同时创建了两个图层，一个图层在初始化页面就只加载部分包含重要信息的点，另一个图层在放大到一定层级后显示剩余的点。</strong></p>
<p>动手实施后，果然纵享丝滑。<br><img src="/images/20210813.jpg" alt="效果图"></p>
]]></content>
  </entry>
  <entry>
    <title>计算点距离线最近的投影点</title>
    <url>/2019/07/23/4998.html</url>
    <content><![CDATA[<p>之前用惯了ArcGIS，再者是其忠实的拥趸，因此每次遇到稍微拐点弯的问题，都会不厌其烦地去秋名山，。。。。<br><img src="/images/19072301.jpg" alt="秋名山"></p>
<span id="more"></span>
<h2 id="哦，拐错了，是不厌其烦地将数据从数据库导出到ArcGIS中计算然后再将结果导回来。"><a href="#哦，拐错了，是不厌其烦地将数据从数据库导出到ArcGIS中计算然后再将结果导回来。" class="headerlink" title="哦，拐错了，是不厌其烦地将数据从数据库导出到ArcGIS中计算然后再将结果导回来。"></a>哦，拐错了，是不厌其烦地将数据从数据库导出到ArcGIS中计算然后再将结果导回来。</h2><p>然而再怎么熟练使用ArcGIS，总觉得导入导出有些影响效率，考虑postgresql本身的空间计算也不弱（丰富的空间函数），于是这几天尝试将一些流程直接迁移至数据库中处理。<br>这里举一个场景：已知一公交站点空间位置，以及其所在的道路，计算公交站点在该道路上的投影，以及距离道路起点的距离<br>看到这个问题，可能有些同学说这还不简单，直接用ArcGIS的near(邻近分析)和SplitLineAtPoint（在点处分割线）工具不解ok了么。对，我之前经常就是这么解决的。<br><img src="/images/19072302.jpg" alt="上车"><br>实际我觉得再pg中用空间查询计算更简单，主要用到<a href="http://postgis.net/docs/ST_LineLocatePoint.html">ST_LineLocatePoint(geometry a_linestring, geometry a_point)</a>和<a href="http://postgis.net/docs/ST_LineInterpolatePoint.html">ST_LineInterpolatePoint(geometry a_linestring, float8 a_fraction)</a>这两个函数;</p>
<h2 id="学过GIS基础理论的同学都知道，线上一点距离起点的长度叫做M值，也叫空间线性参考，比如我们看新闻有提到某个道路发生追尾事故，位于302国道666公里处，这个666就是M值。"><a href="#学过GIS基础理论的同学都知道，线上一点距离起点的长度叫做M值，也叫空间线性参考，比如我们看新闻有提到某个道路发生追尾事故，位于302国道666公里处，这个666就是M值。" class="headerlink" title="学过GIS基础理论的同学都知道，线上一点距离起点的长度叫做M值，也叫空间线性参考，比如我们看新闻有提到某个道路发生追尾事故，位于302国道666公里处，这个666就是M值。"></a>学过GIS基础理论的同学都知道，线上一点距离起点的长度叫做M值，也叫空间线性参考，比如我们看新闻有提到某个道路发生追尾事故，位于302国道666公里处，这个666就是M值。</h2><p>所以我们可以先通过ST_LineLocatePoint计算站点到道路起始位置的长度百分比及其长度，然后通过长度百分比计算投影点。<br>如下所示：<br>计算长度</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> stop_space_attr <span class="keyword">set</span> milepost<span class="operator">=</span></span><br><span class="line"><span class="keyword">case</span> is_same_dir</span><br><span class="line"><span class="keyword">when</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">then</span> ST_Line_Locate_Point (</span><br><span class="line">	st_transform ( st_geomfromtext ( REPLACE ( REPLACE ( st_astext ( road_geom ), <span class="string">&#x27;MULTILINESTRING((&#x27;</span>, <span class="string">&#x27;LINESTRING(&#x27;</span> ), <span class="string">&#x27;))&#x27;</span>, <span class="string">&#x27;)&#x27;</span> ), <span class="number">4326</span> ), <span class="number">3857</span> ),</span><br><span class="line">	ST_transform ( geom, <span class="number">3857</span> )) <span class="operator">*</span> st_length(st_transform(geom,<span class="number">3857</span>)) </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	(<span class="number">1</span><span class="operator">-</span>ST_Line_Locate_Point (</span><br><span class="line">	st_transform ( st_geomfromtext ( REPLACE ( REPLACE ( st_astext ( road_geom ), <span class="string">&#x27;MULTILINESTRING((&#x27;</span>, <span class="string">&#x27;LINESTRING(&#x27;</span> ), <span class="string">&#x27;))&#x27;</span>, <span class="string">&#x27;)&#x27;</span> ), <span class="number">4326</span> ), <span class="number">3857</span> ),</span><br><span class="line">	ST_transform ( geom, <span class="number">3857</span> ))) <span class="operator">*</span> st_length(st_transform(geom,<span class="number">3857</span>))</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p>计算投影点（这里贴出官网的例子）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ST_AsText(ST_LineInterpolatePoint(foo.the_line, ST_LineLocatePoint(foo.the_line, ST_GeomFromText(<span class="string">&#x27;POINT(4 3)&#x27;</span>))))</span><br><span class="line"><span class="keyword">FROM</span> (<span class="keyword">SELECT</span> ST_GeomFromText(<span class="string">&#x27;LINESTRING(1 2, 4 5, 6 7)&#x27;</span>) <span class="keyword">As</span> the_line) <span class="keyword">As</span> foo;</span><br></pre></td></tr></table></figure>
<p>注意：</p>
<h2 id="（1）这两个参数中-线的空间几何必须是简单的linestring，不能是多部件线段multilinestring；"><a href="#（1）这两个参数中-线的空间几何必须是简单的linestring，不能是多部件线段multilinestring；" class="headerlink" title="（1）这两个参数中,线的空间几何必须是简单的linestring，不能是多部件线段multilinestring；"></a>（1）这两个参数中,线的空间几何必须是简单的linestring，不能是多部件线段multilinestring；</h2><h2 id="（2）线和点的空间参考最好是投影坐标（如3857）；"><a href="#（2）线和点的空间参考最好是投影坐标（如3857）；" class="headerlink" title="（2）线和点的空间参考最好是投影坐标（如3857）；"></a>（2）线和点的空间参考最好是投影坐标（如3857）；</h2><h2 id="（3）如果数据量大，使用ST-transform，会影响计算效率，建议提前新建字段，统一空间参考。"><a href="#（3）如果数据量大，使用ST-transform，会影响计算效率，建议提前新建字段，统一空间参考。" class="headerlink" title="（3）如果数据量大，使用ST_transform，会影响计算效率，建议提前新建字段，统一空间参考。"></a>（3）如果数据量大，使用ST_transform，会影响计算效率，建议提前新建字段，统一空间参考。</h2><p><img src="/images/19072303.jpg" alt="孤独求败"></p>
]]></content>
  </entry>
  <entry>
    <title>解决xampp服务器因80端口被占用,Apach无法启动的方法</title>
    <url>/2016/08/20/27324.html</url>
    <content><![CDATA[<p>之前自己的网站搭建在学校的服务器上的，所以使用起来很方便，但离开学校后，没了服务器，网站所有的内容只能静静地备份在移动硬盘中，周末没其他事来公司，于是在本地搭建起来，想把旧网站中内容转到新网站中，谁知xamppz中Apach却启动不起来，显示有错误，看了一下提示：<br><img src="/images/200.jpg" alt="xampp"><span id="more"></span><br>图中表示80端口被其他进程占用了，于是按照这篇文章<a href="http://zyouzz.tk/2016/08/20/%E8%A7%A3%E5%86%B3ArcGIS-Server%E5%9B%A0%E7%AB%AF%E5%8F%A3%E8%A2%AB%E5%8D%A0%E7%94%A8%EF%BC%8C%E8%80%8C%E6%97%A0%E6%B3%95%E5%8F%91%E5%B8%83%E5%9C%B0%E5%9B%BE%E6%9C%8D%E5%8A%A1%E7%9A%84%E6%96%B9%E6%B3%95/">解决ArcGIS Server因端口被占用，而无法发布地图服务的方法</a>的思路，着手解决，但结果是行不通，后来一想，原来是之前装了ArcGIS Server，需要开启系统自带的IIS服务器，可能80被他占用了<br>1、于是搜“IIS”，打开IIS管理器<br><img src="/images/201.jpg" alt="xampp"><br>2、右击Default Web Site，点击绑定<br><img src="/images/202.jpg" alt="xampp"><br>3、80端口果然被其占用，这时，我们只需点击80的记录，修改为其他端口即可<br><img src="/images/203.jpg" alt="xampp"><br><img src="/images/204.jpg" alt="xampp"><br>4、再回到xampp,Apach成功开启！<br><img src="/images/205.jpg" alt="xampp"></p>
]]></content>
      <categories>
        <category>GIS</category>
      </categories>
      <tags>
        <tag>GIS</tag>
        <tag>RS</tag>
      </tags>
  </entry>
  <entry>
    <title>软件遇到未知错误，怎么办？</title>
    <url>/2019/08/29/56203.html</url>
    <content><![CDATA[<p>右键属性，以兼容模式解决<br><img src="/images/19082901.jpg" alt="兼容性"><br>然后以管理员身份运行</p>
]]></content>
  </entry>
  <entry>
    <title>记述二三事</title>
    <url>/2019/01/28/42280.html</url>
    <content><![CDATA[<p>1、<br>发现geoserver的一个BUG。使用mysql中的数据发布图层服务，能正常发布和显示加载，但是地图单击后，无法获得属性信息，报未知错误，百思不得其解，排查了好几天，使用排除法，原来是数据库表中的一个字段使用的是tinyint类型，内容是数字，貌似这样geoserver无法处理。。。<br>2、<br>早晨自己写了一个福，扫出来‘敬业福’。自己就是自己最大的福星。<br>3、<br>过去就过去了，回不到过去。就算旧友重拾，也不知道怎么去维护下去。</p>
]]></content>
  </entry>
  <entry>
    <title>轻松实现Geoserver服务迁移</title>
    <url>/2019/11/07/8942.html</url>
    <content><![CDATA[<p>以西安地图服务为例</p>
<p>1、在新的geoserver上新建工作区，<br><img src="/images/2019110701.jpg" alt="新建工作区"></p>
<span id="more"></span>
<p><img src="/images/2019110702.jpg" alt="新建工作区"></p>
<p>2、创建与mysql数据库的连接存储<br><img src="/images/2019110703.jpg" alt="创建与mysql数据库的连接存储"></p>
<p>3、工作区选择上一步创建的，然后输入数据源名称和说明，mysql所在的主机名、端口、数据库名称、用户名和密码<br><img src="/images/2019110704.jpg" alt="输入数据源名称和说明"></p>
<p>4、然后将源geoserver安装路径下索要迁移的城市相关服务配置文件复制，具体是将/usr/java/apache-tomcat-8.5.31/webapps/geoserver/data的styles文件夹和/usr/java/apache-tomcat-8.5.31/webapps/geoserver/data/workspaces下的xian文件夹复制新geoserver的同路径下。</p>
<p>5、将第3步生成的连接文件datastore.xml（路径为/root/work/apache-tomcat-8.5.38/webapps/geoserver/data/workspaces/xian/mysql116）中的红框内的配置替换到第4步的xian文件夹下的mysql155文件夹下的datastore.xml，<br><img src="/images/2019110705.jpg" alt="datastore.xml"></p>
<p>6、最后将mysql116文件夹删除，将mysql155文件夹改为mysql116，</p>
<p>7、由于用到热力图渲染，需要下载wps插件，下载地址为<a href="http://geoserver.org/release/2.12.x/%EF%BC%8C%E7%82%B9%E5%87%BBWPS%E8%A7%A3%EF%BC%8C%E5%8E%8B%E8%87%B3/root/work/apache-tomcat-8.5.38/webapps/geoserver/WEB-INF/lib">http://geoserver.org/release/2.12.x/，点击WPS解，压至/root/work/apache-tomcat-8.5.38/webapps/geoserver/WEB-INF/lib</a><br><img src="/images/2019110706.jpg" alt="下载wps插件"></p>
<p>8、重启Tomcat,服务迁移完成！</p>
<p>===<br>2020年07月27日更新<br>可能以上修改并不能成功，可以从上述4步骤开始<br>5、将\usr\java\apache-tomcat-8.5.31\webapps\geoserverjc\data\workspaces\shenzhen\namespace.xml中NamespaceInfoImpl修改为图中的<br><img src="/images/20072701.jpg" alt="随便打开一个图层中的featuretype.xml文件"><br><img src="/images/20072702.jpg" alt="namespace.xml"></p>
<p>6、将\usr\java\apache-tomcat-8.5.31\webapps\geoserverjc\data\workspaces\default.xml，\usr\java\apache-tomcat-8.5.31\webapps\geoserverjc\data\workspaces\shenzhen\workspace.xml<br>中的WorkspaceInfoImpl改为datastore.xml中的<br><img src="/images/20072703.jpg" alt="workspaces"></p>
<p>7、一定要重新Tomcat才能生效</p>
<p>===<br>2020年10月19日补充<br>迁移之前最好将其他工作空间文件夹删掉，不然连不上数据库很容易出问题；<br>迁移之后首先修改数据存储的数据库连接</p>
]]></content>
  </entry>
  <entry>
    <title>近期遇到的问题小汇</title>
    <url>/2018/04/16/50787.html</url>
    <content><![CDATA[<p>突然发现四月份已过半，近段时间一直在摸索ArcGIS Enterprise的课程，然后上周有一个用户的ArcGIS Server培训，突然发现有了一些方向感。<br>在这段时间主要遇到两个问题，也是积攒了一段时间，算是都有了结果以及合理的解释。列表如下：<br>1、ArcMap的性能问题<br>2、操作系统用户名为esri产生的神奇问题<br>3、ArcGIS Enterprise死活发不了托管要素服务的问题</p>
<span id="more"></span>
<p>下面一一记录过程和解答</p>
<p>问题1 ArcMap的性能问题<br>从10.5开始，就开始体会到ArcMap打开矢量数据的图层属性巨慢，一直不得解，严重影响使用，不少用户也反馈和吐槽，之前，我也专门就这个问题写了一篇博客<a href="http://giser.tk/2018/03/26/55332.html">ArcMap用起来卡的，请进</a>，里面提到的方法暂时能够解决性能的问题。<br>我的同事一直与美国沟通，好在近期美国重现出这个问题，并定了BUG，期待下一个版本解决。</p>
<p>问题2 操作系统用户名为esri产生的神奇问题<br>之前我在博客中也提到该问题<a href="http://giser.tk/2017/12/02/11059.html">ArcGIS Pro发布服务时出现“检查共享流程状态失败”错误( Failed to check sharing process status)</a>，然后我发现许多同事都遇到了，原因是我们用的是公司统一配置的电脑，IT装机时都会用esri这个用户名，造成了神奇的路径错乱问题。最后我继续反馈了该问题至美国，等了一段时间，终于定了一个BUG</p>
<p>问题3 ArcGIS Enterprise死活发不了托管要素服务的问题<br>我在自己电脑上安装了ArcGIS Enterprise10.6、ArcGIS Pro 2.1.2、ArcGIS Pro的数据互操作模块扩展<br>然后我有个带经纬度坐标的CSV文件,想发布为托管要素服务，但是一直报错，<br><img src="/images/18041601.png" alt="error"><br>server日志显示实例崩溃<br><img src="/images/18041602.png" alt="instance crash"><br>然后我安装崩溃补丁<a href="https://support.esri.com/en/download/7576">https://support.esri.com/en/download/7576</a>也没用<br>然后上面的日志中提到生成的有dmp文件，我用VS Studio看了一下<br>看到里面有ArcGIS Pro的数据互操作模块路径<br><img src="/images/18041603.jpg" alt="instance crash"><br>随后我就卸载掉数据互操作，接下来Portal就能通过CSV正常发布托管要素图层了。<br>最后将这个问题提交给美国，已经被定为BUG</p>
<p>========================<br>最后的最后，从年初两会以来，单机版离线邮箱授权一直没有收到回执邮件，开始我们以为是两会特殊期间造成的，但是两会开完一个月后还是收不到，心想不是国内网络的原因了，可能是他们的许可服务器坏了，于是提交给美国一个CASE，他们回复说没有重现，正常收到回执邮件，但是国内用户的反馈却每天一个个接踵而来，只能联系合同部，给他们申请开通myesri在线激活授权。然后我一个同事的engine也出现这个问题，同样提交CASE给美国，他们成功地没收到回执，最后发现许可服务器果然坏了。修好后，桌面的也能收到了，问题就这么解决了。此时我只想说：MMP</p>
]]></content>
      <categories>
        <category>GIS</category>
      </categories>
      <tags>
        <tag>ArcGIS</tag>
      </tags>
  </entry>
  <entry>
    <title>记录贼坑一件事</title>
    <url>/2019/04/25/24763.html</url>
    <content><![CDATA[<p>昨天下班前将某个地区的所有站点发布成服务，数据保存在mysql中，但是老是显示不了，中间考虑了特殊字符，站点堆叠的原因，都不对。<br>最后发现是空间几何字段的空间参考不一致的问题，233333.</p>
]]></content>
  </entry>
  <entry>
    <title>长城符号制作---图层叠加 vs 制图表达</title>
    <url>/2016/12/15/4666.html</url>
    <content><![CDATA[<p>主要有两种方法<br>1、图层叠加：在符号编辑器中通过三个图层符号叠加作出来，参数设置如下：<br><img src="/images/12151.jpg" alt="长城符号制作---图层叠加 vs 制图表达"></p>
<span id="more"></span>
<p><img src="/images/12152.jpg" alt="长城符号制作---图层叠加 vs 制图表达"><br><img src="/images/12153.jpg" alt="长城符号制作---图层叠加 vs 制图表达"><br><img src="/images/12154.jpg" alt="长城符号制作---图层叠加 vs 制图表达"><br>2、制图表达：将原先线图层符号转为制图表达，然后添加wave效果，参数设置如下：<br><img src="/images/12155.jpg" alt="长城符号制作---图层叠加 vs 制图表达"><br><img src="/images/12156.jpg" alt="长城符号制作---图层叠加 vs 制图表达"><br>对比以上两种方法，制图表达更为方便美观。</p>
]]></content>
      <categories>
        <category>GIS</category>
      </categories>
      <tags>
        <tag>GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>变换矩阵（Transformation matrix）详解</title>
    <url>/2023/06/01/1829.html</url>
    <content><![CDATA[<p>当我们对一个图形进行平移再旋转，一般流程是需要重新求取一个新的等式，然后实现一个新的着色器，这样很不好。<br>好在我们可以使用另一个数学工具—变换矩阵（Transformation matrix）来完成这项工作。变换矩阵非常适合操作计算机图形。<br>一、旋转矩阵<br>当p按照右手法则逆时针旋转β<br><img src="/images/2023/06/1.png" alt="坐标系统"><br>p点的坐标计算为：<br><img src="/images/2023/06/2.png" alt="p点"><br>p`点坐标<br><img src="/images/2023/06/3.png" alt="旋转后"><br>分解后，即<br><img src="/images/2023/06/4.png" alt="分解"><br>基于第一个公式，消掉r和α，得：<br><img src="/images/2023/06/5.png" alt="消除"><br>通过以下矩阵相乘可以表示该过程<br><img src="/images/2023/06/6.png" alt="旋转矩阵"><br>综合以上两个公式：<br>我们可以令<br>a=cosβ，b=-sinβ,c=0,d=sinβ,e=cosβ,f=0,g=0,h=0,i=1,<br>可得：<br><img src="/images/2023/06/7.png" alt="旋转变换矩阵"></p>
<p>二、平移矩阵<br>一般平移矩阵计算为：<br><img src="/images/2023/06/8.png" alt="平移矩阵"><br>相乘得到：<br><img src="/images/2023/06/9.png" alt="矩阵相乘"><br>比较以下等式<br><img src="/images/2023/06/10.png" alt="平移计算"><br>我们可以令：<br>a=1,b=0,c=0,d=Tx,<br>e=0,f=1,g=0,h=Ty,<br>i=0,j=0,k=1,l=Tz,<br>m=0,n=0,o=0,p=1,<br>可得：<br><img src="/images/2023/06/11.png" alt="旋转变换矩阵"><br>三、缩放<br>假设X轴、Y轴、Z轴缩放因子Sx,Sy,Sz,那么有：<br><img src="/images/2023/06/13.png" alt="缩放等式"><br>即有缩放变换矩阵：<br><img src="/images/2023/06/14.png" alt="缩放变换矩阵"></p>
<p>四、旋转+平移+缩放<br>至此，我们已经推演出一个旋转矩阵和一个平移矩阵、一个缩放矩阵，但是我们发现旋转矩阵是3x3，平移缩放矩阵是4x4, 于是需要将旋转矩阵转变为4x4矩阵，我们知道最后一个分量w的加和结果应为1<br>所以：<br><img src="/images/2023/06/12.png" alt="旋转变换4x4矩阵"><br>所以在程序中定义一个旋转+平移+缩放矩阵，可以按照以下写：<br>注意WebGL中矩阵是列主序的，即为上面矩阵的转置</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> canvas=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;webgl&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> gl=<span class="title function_">getWebGLContext</span>(canvas);</span><br><span class="line"><span class="keyword">let</span> <span class="variable constant_">VSHADER_SOURCE</span>=</span><br><span class="line">    <span class="string">&#x27;attribute vec4 a_postion;\n&#x27;</span> +</span><br><span class="line">    <span class="string">&#x27;uniform mat4 u_panMatrix;\n&#x27;</span> +</span><br><span class="line">    <span class="string">&#x27;uniform mat4 u_rotateMatrix;\n&#x27;</span> +</span><br><span class="line">    <span class="string">&#x27;uniform mat4 u_zoomMatrix;\n&#x27;</span> +</span><br><span class="line">    <span class="string">&#x27;void main () &#123;\n&#x27;</span> +</span><br><span class="line">    <span class="string">&#x27; gl_Position = u_panMatrix * u_rotateMatrix * u_zoomMatrix * a_position;\n&#x27;</span> +</span><br><span class="line">    <span class="string">&#x27;&#125;\n&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> radian=<span class="title class_">Math</span>.<span class="property">PI</span>*<span class="variable constant_">ANGLE</span>/<span class="number">180.0</span> <span class="comment">// 角度值转弧度</span></span><br><span class="line"><span class="keyword">const</span> cosβ=<span class="title class_">Math</span>.<span class="title function_">cos</span>(radian);</span><br><span class="line"><span class="keyword">const</span> sinβ=<span class="title class_">Math</span>.<span class="title function_">sin</span>(radian);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Sx</span> = <span class="number">1.0</span>, <span class="title class_">Sy</span> = <span class="number">1.5</span>, <span class="title class_">Sz</span> = <span class="number">1.0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 平移矩阵</span></span><br><span class="line"><span class="keyword">const</span> pan=<span class="keyword">new</span> <span class="title class_">Float32Array</span>([</span><br><span class="line">    <span class="number">1.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>,</span><br><span class="line">    <span class="number">0.0</span>, <span class="number">1.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>,</span><br><span class="line">    <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">1.0</span>, <span class="number">0.0</span>,</span><br><span class="line">    <span class="title class_">Tx</span>, <span class="title class_">Ty</span>, <span class="title class_">Tz</span>,<span class="number">1.0</span></span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 旋转矩阵</span></span><br><span class="line"><span class="keyword">const</span> rotate=<span class="keyword">new</span> <span class="title class_">Float32Array</span>([</span><br><span class="line">    cosβ, sinβ, <span class="number">0.0</span>, <span class="number">0.0</span>,</span><br><span class="line">    -sinβ, cosβ, <span class="number">0.0</span>, <span class="number">0.0</span>,</span><br><span class="line">    <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">1.0</span>, <span class="number">0.0</span>,</span><br><span class="line">    <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">1.0</span></span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缩放矩阵</span></span><br><span class="line"><span class="keyword">const</span> zoom=<span class="keyword">new</span> <span class="title class_">Float32Array</span>([</span><br><span class="line">    <span class="title class_">Sx</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>,</span><br><span class="line">    <span class="number">0.0</span>, <span class="title class_">Sy</span>, <span class="number">0.0</span>, <span class="number">0.0</span>,</span><br><span class="line">    <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="title class_">Sz</span>, <span class="number">0.0</span>,</span><br><span class="line">    <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">1.0</span></span><br><span class="line">])</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> u_panformMatrix=gl.<span class="title function_">getUniformLocation</span>(gl.<span class="property">program</span>, <span class="string">&#x27;u_panMatrix&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> u_rotateMatrix=gl.<span class="title function_">getUniformLocation</span>(gl.<span class="property">program</span>, <span class="string">&#x27;u_rotateMatrix&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> u_zoomMatrix=gl.<span class="title function_">getUniformLocation</span>(gl.<span class="property">program</span>, <span class="string">&#x27;u_panMatrix&#x27;</span>);</span><br><span class="line">gl.<span class="title function_">uniformMatrix4fv</span>(u_panformMatrix, <span class="literal">false</span>, pan);</span><br><span class="line">gl.<span class="title function_">uniformMatrix4fv</span>(u_rotateMatrix, <span class="literal">false</span>, rotate);</span><br><span class="line">gl.<span class="title function_">uniformMatrix4fv</span>(u_zoomMatrix, <span class="literal">false</span>, zoom);</span><br></pre></td></tr></table></figure>





]]></content>
      <tags>
        <tag>WebGL</tag>
      </tags>
  </entry>
  <entry>
    <title>about</title>
    <url>/about/index%20-%20%E5%89%AF%E6%9C%AC.html</url>
    <content><![CDATA[<p>64mm 255 275 SANGUANG50  MARK<br><img src="/images/glasses.jpg" alt="glasses"></p>
]]></content>
  </entry>
  <entry>
    <title>about</title>
    <url>/about/index.html</url>
    <content><![CDATA[<p>Money, Money, just do it!<br>微博：XXXXXXXX<br>微信：XXXXXXXX<br>知乎：安乎挚<br>邮箱：<a href="mailto:&#x6a;&#97;&#109;&#x65;&#x73;&#114;&#111;&#x63;&#x6b;&#54;&#x36;&#x36;&#x40;&#103;&#109;&#97;&#105;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;">&#x6a;&#97;&#109;&#x65;&#x73;&#114;&#111;&#x63;&#x6b;&#54;&#x36;&#x36;&#x40;&#103;&#109;&#97;&#105;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;</a><br>64mm 255 275 SANGUANG50  MARK<br><img src="/images/glasses.jpg" alt="glasses"></p>
]]></content>
  </entry>
  <entry>
    <title>ArcGIS知乎每天站内搜索统计</title>
    <url>/html/ArcGIS%E7%9F%A5%E4%B9%8E%E6%AF%8F%E5%A4%A9%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2%E7%BB%9F%E8%AE%A1.html</url>
    <content><![CDATA[<span id="more"></span>
<html>
<head lang="en">
    <meta charset="UTF-8">
    <title>ArcGIS知乎每天站内搜索统计</title>
    <!-- 加载c3.css文件-->
    <link href="http://c3js.org/css/c3-b03125fa.css" rel="stylesheet" type="text/css">

    <!-- 加载d3.js和c3.js -->
    <script src="http://c3js.org/js/d3-3.5.6.min-77adef17.js" charset="utf-8"></script>
    <script src="http://c3js.org/js/c3.min-4c5bef8f.js"></script>
	<SCRIPT language=JavaScript> function password() { var testV = 1; var pass1 = prompt('请输入密码:',''); while (testV < 3) { if (!pass1) history.go(-1); if (pass1 == "123") { alert('密码正确!'); break; } testV+=-1; var pass1 = prompt('密码错误!请重新输入:'); } if (pass1!="password" & testV ==3) history.go(-1); return " "; } document.write(password()); </SCRIPT>
</head>
<body>

<!--准备绑定图表的元素-->
<div id="chart"></div>
</body>
<script>
var chart = c3.generate({
    data: {
        x: '日期',
//        xFormat: '%Y%m%d', // 'xFormat' can be used as custom format of 'x'
        columns: [
['日期', '2017-03-08', '2017-03-09', '2017-03-10', '2017-03-11', '2017-03-12', '2017-03-13', '2017-03-14', '2017-03-15', '2017-03-16', '2017-03-17', '2017-03-18', '2017-03-19', '2017-03-20', '2017-03-21', '2017-03-22', '2017-03-23', '2017-03-24', '2017-03-25', '2017-03-26', '2017-03-27', '2017-03-28', '2017-03-29', '2017-03-30', '2017-03-31', '2017-04-01', '2017-04-02', '2017-04-03', '2017-04-04', '2017-04-05', '2017-04-06', '2017-04-07', '2017-04-08', '2017-04-09', '2017-04-10', '2017-04-11', '2017-04-12', '2017-04-13', '2017-04-14', '2017-04-15', '2017-04-16', '2017-04-17', '2017-04-18', '2017-04-19', '2017-04-20', '2017-04-21', '2017-04-22', '2017-04-23', '2017-04-24', '2017-04-25', '2017-04-26', '2017-04-27', '2017-04-28', '2017-04-29', '2017-04-30', '2017-05-01', '2017-05-02', '2017-05-03', '2017-05-04', '2017-05-05', '2017-05-06', '2017-05-07', '2017-05-08', '2017-05-09', '2017-05-10', '2017-05-11', '2017-05-12', '2017-05-13', '2017-05-14', '2017-05-15', '2017-05-16', '2017-05-17', '2017-05-18', '2017-05-19', '2017-05-20', '2017-05-21', '2017-05-22', '2017-05-23', '2017-05-24', '2017-05-25', '2017-05-26', '2017-05-27', '2017-05-28', '2017-05-29', '2017-05-30', '2017-05-31', '2017-06-01', '2017-06-02', '2017-06-03', '2017-06-04', '2017-06-05', '2017-06-06', '2017-06-07', '2017-06-08', '2017-06-09', '2017-06-10', '2017-06-11', '2017-06-12', '2017-06-13', '2017-06-14', '2017-06-15', '2017-06-16', '2017-06-17', '2017-06-18', '2017-06-19', '2017-06-20', '2017-06-21', '2017-06-22', '2017-06-23', '2017-06-24', '2017-06-25', '2017-06-26', '2017-06-27', '2017-06-28', '2017-06-29', '2017-06-30', '2017-07-01', '2017-07-02', '2017-07-03', '2017-07-04', '2017-07-05', '2017-07-06', '2017-07-07', '2017-07-08', '2017-07-09', '2017-07-10', '2017-07-11', '2017-07-12', '2017-07-13', '2017-07-14', '2017-07-15', '2017-07-16', '2017-07-17', '2017-07-18', '2017-07-19', '2017-07-20', '2017-07-21', '2017-07-22', '2017-07-23', '2017-07-24', '2017-07-25', '2017-07-26', '2017-07-27', '2017-07-28', '2017-07-29', '2017-07-30', '2017-07-31', '2017-08-01', '2017-08-02', '2017-08-03', '2017-08-04', '2017-08-05', '2017-08-06', '2017-08-07', '2017-08-08', '2017-08-09', '2017-08-10', '2017-08-11', '2017-08-12', '2017-08-13', '2017-08-14', '2017-08-15', '2017-08-16', '2017-08-17', '2017-08-18', '2017-08-19', '2017-08-20', '2017-08-21', '2017-08-22', '2017-08-23', '2017-08-24', '2017-08-25', '2017-08-26', '2017-08-27', '2017-08-28', '2017-08-29', '2017-08-30', '2017-08-31', '2017-09-01', '2017-09-02', '2017-09-03', '2017-09-04', '2017-09-05', '2017-09-06', '2017-09-07', '2017-09-08', '2017-09-09', '2017-09-10', '2017-09-11', '2017-09-12', '2017-09-13', '2017-09-14', '2017-09-15', '2017-09-16', '2017-09-17', '2017-09-18', '2017-09-19', '2017-09-20', '2017-09-21', '2017-09-22', '2017-09-23', '2017-09-24', '2017-09-25', '2017-09-26'],
//            ['x', '20130101', '20130102', '20130103', '20130104', '20130105', '20130106'],
['次数', '16', '14', '15', '12', '3', '21', '85', '40', '58', '67', '10', '27', '104', '216', '276', '235', '170', '116', '70', '415', '246', '255', '207', '203', '196', '52', '32', '110', '190', '190', '221', '50', '59', '191', '109', '207', '185', '215', '116', '95', '157', '1', '257', '271', '252', '96', '127', '265', '265', '252', '139', '171', '103', '59', '35', '192', '226', '259', '197', '91', '60', '144', '178', '194', '192', '105', '40', '92', '129', '179', '153', '133', '174', '57', '166', '308', '235', '167', '113', '178', '207', '35', '42', '51', '196', '155', '242', '139', '63', '152', '228', '251', '208', '195', '146', '59', '242', '251', '313', '218', '144', '93', '49', '243', '226', '230', '123', '160', '55', '98', '238', '226', '103', '181', '165', '98', '59', '205', '226', '235', '199', '185', '79', '86', '268', '302', '235', '218', '291', '126', '70', '419', '396', '375', '311', '266', '140', '63', '205', '302', '454', '261', '273', '117', '73', '230', '231', '290', '351', '226', '110', '56', '240', '340', '432', '488', '290', '125', '130', '379', '326', '264', '308', '325', '79', '99', '325', '306', '314', '233', '188', '82', '78', '179', '312', '244', '341', '225', '121', '120', '203', '386', '275', '325', '271', '83', '93', '218', '236', '324', '191', '226', '103', '62', '367', '476', '199', '239', '223', '67', '68', '214', '240'],
        ]
    },
    axis: {
        x: {
            type: 'timeseries',
            tick: {
				format: '%Y-%m-%d',
				//rotate: 75,
            }
        }
    }
});
</script>

</html>]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/html/covid19_real_time_map.html</url>
    <content><![CDATA[<!doctype html>
<html lang="en">
<script>
	var _hmt = _hmt || [];
	(function () {
		var hm = document.createElement("script");
		hm.src = "https://hm.baidu.com/hm.js?a8dc3713fb6ff94583ba13c5d4daadc0";
		var s = document.getElementsByTagName("script")[0];
		s.parentNode.insertBefore(hm, s);
	})();
</script>
<head>
	<meta charset="UTF-8">
	<link rel="stylesheet" href="http://zhongxinzhiyuan.cn:8089/geoserver/openlayers3/ol.css" type="text/css">
	<meta charset="utf-8"> 
	<!-- 包含头部信息用于适应不同设备 -->
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<!-- 包含 bootstrap 样式表 -->
	<link rel="stylesheet" href="https://apps.bdimg.com/libs/bootstrap/3.2.0/css/bootstrap.min.css">
	<style> 

	</style>
	<script src="http://zhongxinzhiyuan.cn:8089/geoserver/openlayers3/ol.js" type="text/javascript"></script>
	<script src="https://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js" type="text/javascript"></script>
	<script src="https://cdn.staticfile.org/echarts/4.7.0/echarts.min.js" type="text/javascript"></script>
	<script src="https://cdn.staticfile.org/twitter-bootstrap/3.3.7/js/bootstrap.min.js"></script>
	<title>新型冠状病毒肺炎疫情</title>
</head>
<body>
	<div class="container">
		<div class="jumbotron text-center" style="margin-bottom: 5px;">
			<h3>新型冠状病毒肺炎疫情(V6.0Beta)</h3>
			<h4>2020年01月12日运行至今</h4>
			<h4>By <span class="glyphicon glyphicon-globe" style="color: blue"></span>·<span class="glyphicon glyphicon-user" style="color: green"></span>James Jiang(Developer)</h4>
			<small id='timeline'></small><span id='view-count'></span>
			<button type="button" class="btn btn-default btn-danger" onclick="clickComeOn()"><span class="glyphicon glyphicon-heart"></span><span id="come-on"></span>次加油</button>
		</div>
		  <div id='scroll-news'>
		    <marquee scrollamount="12" onmouseout="this.start();" onmouseover="this.stop();" id='newsss'></marquee>
		  </div>
		<div class="row">
			<div style="margin-left: 10px;border-left: 10px solid red;padding-left: 20px;">
				<h3>实时统计<small>(国内，每五分钟更新一次)</small></h3>
			</div>
			<div class="col-xs-4 text-center">
				<h4><span class="glyphicon glyphicon-user" style="color: red"></span>现存确诊</h4>		
				<p style="color: red;font-size: 1.5em" id='current-diagnose'>加载中</p>
			</div>
			<div class="col-xs-4 text-center">
				<h4><span class="glyphicon glyphicon-user" style="color: red"></span>累计确诊</h4>		
				<p style="color: red;font-size: 1.5em" id='diagnose'>加载中</p>
			</div>
			<div class="col-xs-4 text-center">
				<h4><span class="glyphicon glyphicon-user" style="color: #ff8100"></span>疑似</h4>		
				<p style="color: #ff8100;font-size:  1.5em" id='suspect'>加载中</p>
			</div>
			<div class="col-xs-4 text-center">
				<h4><span class="glyphicon glyphicon-user" style="color: blue"></span>治愈</h4>		
				<p style="color: blue;font-size:  1.5em" id="cure">加载中</p>
			</div>
			<div class="col-xs-4 text-center">
				<h4><span class="glyphicon glyphicon-user" style="color: grey"></span>重症</h4>		
				<p style="color: grey;font-size:  1.5em" id='serious'>加载中</p>
			</div>
			<div class="col-xs-4 text-center">
				<h4><span class="glyphicon glyphicon-user" style="color: black"></span>死亡</h4>		
				<p style="color: black;font-size:  1.5em" id='death'>加载中</p>
			</div>
		</div>
		<div class="row">
			<div style="margin-left: 10px;border-left: 10px solid red;padding-left: 20px;">
				<h3>今日变化<small>(国内，0例可能表示今日数据还未公布，每五分钟更新一次)</small></h3>
			</div>
			<div class="col-xs-4 text-center">
				<h4><span class="glyphicon glyphicon-user" style="color: red"></span>现存确诊</h4>		
				<p style="color: red;font-size:  1.5em" id="current-diagnose-add">加载中</p>
			</div>
			<div class="col-xs-4 text-center">
				<h4><span class="glyphicon glyphicon-user" style="color: red"></span>累计确诊</h4>		
				<p style="color: red;font-size:  1.5em" id="diagnose-add">加载中</p>
			</div>
			<div class="col-xs-4 text-center">
				<h4><span class="glyphicon glyphicon-user" style="color: #ff8100"></span>疑似</h4>		
				<p style="color: #ff8100;font-size:  1.5em" id="suspect-add">加载中</p>
			</div>
			<div class="col-xs-4 text-center">
				<h4><span class="glyphicon glyphicon-user" style="color: blue"></span>治愈</h4>		
				<p style="color: blue;font-size:  1.5em" id="cure-add">加载中</p>
			</div>
			<div class="col-xs-4 text-center">
				<h4><span class="glyphicon glyphicon-user" style="color: grey"></span>重症</h4>		
				<p style="color: grey;font-size:  1.5em" id="serious-add">加载中</p>
			</div>
			<div class="col-xs-4 text-center">
				<h4><span class="glyphicon glyphicon-user" style="color: black"></span>死亡</h4>		
				<p style="color: black;font-size:  1.5em" id="death-add">加载中</p>
			</div>
		</div>
		<div class="row">
			<div style="margin-left: 10px;border-left: 10px solid red;padding-left: 20px;">
				<h3>最近24小时变化曲线(国内)</h3>
			</div>
			<div id="charts-hour" style="height: 50vh;border-radius: 15px;margin:7px;"></div>
		</div>
		<div class="row">
			<div style="margin-left: 10px;border-left: 10px solid red;padding-left: 20px;">
				<h3>每天累计变化曲线(国内)</h3>
			</div>
			<div id="charts-day" style="height: 50vh;border-radius: 15px;margin:7px;"></div>
		</div>
		<div class="row">
			<div style="margin-left: 10px;border-left: 10px solid red;padding-left: 20px;">
				<h3>每天增加变化曲线(国内)</h3>
			</div>
			<div id="charts-day-change" style="height: 50vh;border-radius: 15px;margin:7px;"></div>
		</div>
		<!-- <div class="row"> -->
			<!-- <div style="margin-left: 10px;border-left: 10px solid red;padding-left: 20px;"> -->
				<!-- <h3><span class="glyphicon glyphicon-map-marker" style="color: #e42323;font-weight:bold">疫情地图(世界)</span></h3> -->
				<!-- <h3><span class="glyphicon glyphicon-map-marker" style="color: #e42323;font-weight:bold">世界</span></h3> -->
			<!-- </div>		 -->
			<!-- <div id="map-world" style="height: 50vh;border-radius: 15px;margin:7px;"> -->
				<!-- <div class="btn-group btn-group-sm btn-group-vertical" id="orderBtnGroup2" style="padding-top:28vh;position: absolute;z-index: 999;right:10px;"> -->
				    <!-- <button type="button" class="btn btn-default" style="background-color: #FCE9DE">0-9</button> -->
				    <!-- <button type="button" class="btn btn-default" style="background-color: #FC8D59">10-99</button> -->
				    <!-- <button type="button" class="btn btn-default" style="background-color: #E34A33">100-499</button> -->
				    <!-- <button type="button" class="btn btn-default" style="background-color: #B30000">>500</button> -->
				<!-- </div> -->
				<!-- <div class="btn-group btn-group-sm" style="position: absolute;z-index: 999;right:10px"> -->
					    <!-- <button type="button" class="btn btn-default btn-danger" onclick="clickbutton('world_yiqing',2)">确诊</button> -->
					    <!-- <button type="button" class="btn btn-default btn-success" onclick="clickbutton('world_cure_1',2)">治愈</button> -->
					    <!-- <button type="button" class="btn btn-default" onclick="clickbutton('world_anxi',2)">死亡</button> -->
					    <!-- <button type="button" class="btn btn-default btn-warning" onclick="backmap(mapWorld)">回到全图</button> -->
				<!-- </div> -->
			<!-- </div> -->
		<!-- </div> -->
		<div class="row">
			<div style="margin-left: 10px;border-left: 10px solid red;padding-left: 20px;">
				<h3 id="sum-forgeign"></h3>
			</div>
			<div class="table-responsive">
			  <table class="table">
			    <thead>
			    	<tr>
						<th>序号</th>
				        <th>大陆</th>
				        <th>国家</th>
				        <th>现存确诊</th>
				        <th>累计确诊</th>
				        <th>治愈</th>
				        <th>死亡</th>
			    	</tr>
			    </thead>
			    <tbody id="table-tr">
			    </tbody>
			  </table>
			</div>
		</div>
		<div class="row">
			<div style="margin-left: 10px;border-left: 10px solid red;padding-left: 20px;">
				<h3><span class="glyphicon glyphicon-map-marker" style="color: #e42323;font-weight:bold">疫情地图(社区/街道办级别<small>【注：只包括部分地区公示数据】</small>)</span></h3>
			</div>
			<div id="map-street" style="height: 65vh;border-radius: 15px;margin:7px;">
				<div class="btn-group btn-group-sm" style="position: absolute;z-index: 999;right:10px;">
				    <button type="button" class="btn btn-default btn-warning" onclick="backmap(mapStreet)">回到全图</button>
				</div>
			</div>			
		</div>
		<div class="row">
			<div style="margin-left: 10px;border-left: 10px solid red;padding-left: 20px;">
				<h3><span class="glyphicon glyphicon-map-marker" style="color: #e42323;font-weight:bold">疫情地图(省级)</span></h3>
			</div>
			<div id="map-all" style="height: 50vh;border-radius: 15px;margin:7px;">
				<div class="btn-group btn-group-sm" style="position: absolute;z-index: 9999;right:10px;">
				    <button type="button" class="btn btn-default btn-danger" onclick="clickbutton('currentsheng',1)">现存确诊</button>
				    <button type="button" class="btn btn-default btn-warning" onclick="clickbutton('yiqing',1)">确诊</button>
				    <button type="button" class="btn btn-default btn-success" onclick="clickbutton('zhiyu',1)">治愈</button>
				    <button type="button" class="btn btn-default" onclick="clickbutton('anxi',1)">死亡</button>
				    <button type="button" class="btn btn-default btn-warning" onclick="backmap(mapAll)">回到全图</button>
				</div>
				<div class="btn-group btn-group-sm btn-group-vertical" id="orderBtnGroup1" style="padding-top:28vh;position: absolute;z-index: 999;right:10px;">
				    <button type="button" class="btn btn-default" style="background-color: #FCE9DE">0-9</button>
				    <button type="button" class="btn btn-default" style="background-color: #FC8D59">10-99</button>
				    <button type="button" class="btn btn-default" style="background-color: #E34A33">100-499</button>
				    <button type="button" class="btn btn-default" style="background-color: #B30000">>500</button>
				</div>
			</div>
			
		</div>
		<div class="row">
			<div style="margin-left: 10px;border-left: 10px solid red;padding-left: 20px;">
				<h3>全国各省(自治区)疫情</h3>
			</div>
			<div class="table-responsive">
			  <table class="table">
			    <thead>
			    	<tr>
				        <th>序号</th>
				        <th>省地</th>
				        <th>现存确诊</th>
				        <th>累计确诊</th>
				        <th>治愈</th>
				        <th>死亡</th>
			    	</tr>
			    </thead>
			    <tbody id="table-provience">
			    </tbody>
			  </table>
			</div>
		</div>
		<div class="row">
			<div style="margin-top: 40px;margin-left: 10px;border-left: 10px solid red;padding-left: 20px;">
				<h3><span class="glyphicon glyphicon-map-marker" style="color: #2394e4;font-weight:bold">疫情地图(市级)</span></h3>
			</div>
			<div id="map-add" style="height: 50vh;border-radius: 15px;margin:7px;">
				<div class="btn-group btn-group-sm btn-group-vertical" id="orderBtnGroup0" style="padding-top:28vh;position: absolute;z-index: 999;right:10px;">
				    <button type="button" class="btn btn-default" style="background-color: #FCE9DE">0-9</button>
				    <button type="button" class="btn btn-default" style="background-color: #FC8D59">10-99</button>
				    <button type="button" class="btn btn-default" style="background-color: #E34A33">100-499</button>
				    <button type="button" class="btn btn-default" style="background-color: #B30000">>500</button>
				</div>
				<div class="btn-group btn-group-sm" style="position: absolute;z-index: 999;right:10px;">
					    <button type="button" class="btn btn-default btn-danger" onclick="clickbutton('city_current',0)">现存确诊</button>
					    <button type="button" class="btn btn-default btn-warning" onclick="clickbutton('city_yiqing',0)">确诊</button>
					    <button type="button" class="btn btn-default btn-success" onclick="clickbutton('city_cure',0)">治愈</button>
					    <button type="button" class="btn btn-default" onclick="clickbutton('city_anxi',0)">死亡</button>
					    <button type="button" class="btn btn-default btn-warning" onclick="backmap(mapAdd)">回到全图</button>
				</div>
			</div>
		</div>
		<div class="row" style="margin-top: 30px;">
			<div style="margin-left: 10px;border-left: 10px solid red;padding-left: 20px;">
				<h3>全国城市确诊前50</h3>
			</div>
			<div class="table-responsive">
			  <table class="table">
			    <thead>
			    	<tr>
				        <th>序号</th>
				        <th>城市地区</th>
				        <th>现存确诊</th>
				        <th>累计确诊</th>
				        <th>治愈</th>
				        <th>死亡</th>
			    	</tr>
			    </thead>
			    <tbody id="table-city">
			    </tbody>
			  </table>
			</div>
		</div>
		
		
		<div class="row" id="news">
		</div>
		<!-- <hr>
		<div class="row">
			<div class="col-xs-12 text-center">
				<img src="http://zhongxinzhiyuan.cn/zxzy/wp-content/uploads/2020/01/qrcode.jpg" class="img-rounded" >
			</div>
			<div class="col-xs-12 text-left">
					<p ><span class="glyphicon glyphicon-briefcase" ></span>公&nbsp&nbsp&nbsp&nbsp司：北京众欣知源科技有限公司</p>
					<p ><span class="glyphicon glyphicon-star" ></span>网&nbsp&nbsp&nbsp&nbsp址：<a href='http://zhongxinzhiyuan.cn'>http://zhongxinzhiyuan.cn</a></p>
					<p ><span class="glyphicon glyphicon-envelope" ></span>邮&nbsp&nbsp&nbsp&nbsp箱：gisdiandiedu@163.com</p>
					<p ><span class="glyphicon glyphicon-heart"></span>公众号：GIS点滴</p>
					<p ><span class="glyphicon glyphicon-user"></span>作&nbsp&nbsp&nbsp&nbsp者：James</p>
					<p >备案号：京ICP备19016714-1号</p>
			</div>
		</div> -->
	</div>
<script type="text/javascript">
	getViewCount();
	updateViewCount();
	getComeOnCount();
	writeCurrentDate();
	news();
	provienceTop();
	cityTop();	
	foreign();
	var chartsHour = echarts.init(document.getElementById('charts-hour'));
	clickcharts('hour',chartsHour);
	var chartsDay = echarts.init(document.getElementById('charts-day'));
	clickcharts('day',chartsDay);
	var chartsDayChange = echarts.init(document.getElementById('charts-day-change'));
	clickcharts('zengjia',chartsDayChange);
	var basemap=new ol.layer.Tile({
    source: new ol.source.XYZ({
      url: 'http://wprd01.is.autonavi.com/appmaptile?lang=zh_cn&size=1&scale=1&style=7&x={x}&y={y}&z={z}'
    }),
    name: 'gaodeMap'
  });
  var lb=ol.proj.fromLonLat([97.84623, 21.215]);
  var rt=ol.proj.fromLonLat([126.581863, 43.898201]);
	var mapStreet = new ol.Map({
		controls: ol.control.defaults({
			attribution: false
		}),
		target: 'map-street',
		layers: [basemap,layerdata('shequ')],
		view: new ol.View({
			center: ol.proj.fromLonLat([112,32]),
			//extent: [lb[0], lb[1],
			//rt[0], rt[1]],
			zoom:5,
			projection: new ol.proj.Projection({
			      code: 'EPSG:3857',
			      units: 'm',
			      global: false
		    })
		})
	});
	mapStreet.getInteractions().forEach(value => {
      if (value instanceof ol.interaction.PinchRotate) {
        mapStreet.removeInteraction(value);
      }
    });

	var mapAll = new ol.Map({
		controls: ol.control.defaults({
			attribution: false
		}),
		target: 'map-all',
		layers: [layerdata('currentsheng')],
		view: new ol.View({
			center: [-389443.5, 2130511.5],
			extent: [-3244631.284441611, -78183.9820087277,
			2316197.561991931, 4417390.312363132],
			zoom:3,
			projection: new ol.proj.Projection({
			      code: 'EPSG:3415',
			      units: 'm',
			      global: false
		    })
		})
	});
	mapAll.getInteractions().forEach(value => {
      if (value instanceof ol.interaction.PinchRotate) {
        mapAll.removeInteraction(value);
      }
    });
	var mapAdd = new ol.Map({
		controls: ol.control.defaults({
			attribution: false
		}),
		target: 'map-add',
		layers: [layerdata('city_current')],
		view: new ol.View({
			center: [-389443.5, 2130511.5],
			extent: [-3244631.284441611, -78183.9820087277,
			2316197.561991931, 4417390.312363132],
			zoom:3,
			projection: new ol.proj.Projection({
			      code: 'EPSG:3415',
			      units: 'm',
			      global: false
		    })
		})
	});
	mapAdd.getInteractions().forEach(value => {
      if (value instanceof ol.interaction.PinchRotate) {
        mapAdd.removeInteraction(value);
      }
    });
    <!-- var mapWorld = new ol.Map({ -->
		<!-- controls: ol.control.defaults({ -->
			<!-- attribution: false -->
		<!-- }), -->
		<!-- target: 'map-world', -->
		<!-- layers: [layerdata('world_yiqing')], -->
		<!-- view: new ol.View({ -->
			<!-- center: [0, 0], -->
			<!-- extent: [-20037507.0671618, -30198184.6698779, -->
			<!-- 20037507.0671619, 18375858.881327], -->
			<!-- zoom:1, -->
			<!-- projection: new ol.proj.Projection({ -->
			      <!-- code: 'EPSG:3857', -->
			      <!-- units: 'm', -->
			      <!-- global: false -->
		    <!-- }) -->
		<!-- }) -->
	<!-- }); -->
	<!-- mapWorld.getInteractions().forEach(value => { -->
      <!-- if (value instanceof ol.interaction.PinchRotate) { -->
        <!-- mapWorld.removeInteraction(value); -->
      <!-- } -->
    <!-- }); -->
	$("#orderBtnGroup .btn:first").click().addClass("active");
	$("#orderBtnGroup").children().removeClass("active");
	//provienceTop();
	//cityTop();
	//news();
	//foreign();
	function layerdata(name) {
      return new ol.layer.Image({
        source: new ol.source.ImageWMS({
          ratio: 1,
          url: 'http://zhongxinzhiyuan.cn:8089/geoserver/wms',
          params: {
            'FORMAT': 'image/png',
            'VERSION': '1.1.1',
            "LAYERS": name,
            "exceptions": 'application/vnd.ogc.se_inimage',
          }
        }),
        name: name
      });
    };
    function clickbutton(name,label) {
    	var idBtn='orderBtnGroup'+label;
    	if(name.indexOf('yiqing')>-1 || name.indexOf('currentsheng')>-1 || name.indexOf('city_yiqing')>-1 || name.indexOf('city_current')>-1){
    		document.getElementById(idBtn).style.display = 'block'
    	}else{
    		document.getElementById(idBtn).style.display='none'
    	}
      var map=null;
      label===1?map=mapAll:(label===2?map=mapWorld:map=mapAdd);
      map.getLayers().forEach(value => map.removeLayer(value));
      themelayer = layerdata(name);
      map.addLayer(themelayer); 
      writeCurrentDate();
    };
    function writeCurrentDate() {
      var now = new Date();
      var year = now.getFullYear(); //得到年份
      var month = now.getMonth();//得到月份
      var date = now.getDate();//得到日期
      var day = now.getDay();//得到周几
      var hour = now.getHours();//得到小时
      var minu = now.getMinutes();//得到分钟
      var sec = now.getSeconds();//得到秒
      var MS = now.getMilliseconds();//获取毫秒
      var week;
      month = month + 1;
      if (month < 10) month = "0" + month;
      if (date < 10) date = "0" + date;
      if (hour < 10) hour = "0" + hour;
      if (minu < 10) minu = "0" + minu;
      var arr_week = new Array("星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六");
      week = arr_week[day];

      var time = time = year + "年" + month + "月" + date + "日" + " " + hour + ":" + minu;
      document.getElementById('timeline').innerHTML='截止至'+time;
      statisticsInfo();
  	}
  	function clickcharts(charttype,chartName) {
	    var xdate = [];
	    var diagnosenum = [];
	    var suspectnum = [];
	    var curenum = [];
	    var deathnum = [];

		$.ajax({
		  async: true,
		  url: 'http://zhongxinzhiyuan.cn:9090/'+(charttype === 'hour' ? 'charts' : (charttype === 'day' ? 'day_trend' : 'zengjia')),
		  data: {},
		  type: 'get',
		  
		  dataType: 'json',
		  success: res => {
	        if (charttype === 'day' || charttype === 'zengjia') res.sort(function (a, b) {
	          return b.time - a.time
	        });
	        res.map(value => {
	          xdate.push(charttype === 'hour' ? value.date : value.day);
	          diagnosenum.push((value.diagnose));
	          if (value.suspect === 0) {
	            suspectnum.push(null);
	          } else {
	            suspectnum.push(value.suspect);
	          }

	          curenum.push(value.cure);
	          deathnum.push(value.death)
	        });
	        xdate.reverse();
	        diagnosenum.reverse();
	        suspectnum.reverse();
	        curenum.reverse();
	        deathnum.reverse();
	        var optioncharts = {
	          title: {
	          	show:false,
	            text: charttype === 'hour' ? '过去24小时疫情变化' : (charttype === 'day' ? '每天疫情变化' : '每天增加人数'),
	            subtext: charttype === 'hour' ? '数据来自丁香医生' : '数据来自腾讯新闻',
	            left: 'center',
	            textStyle: {
	              fontSize: 38,
	            }
	          },
	          tooltip: {
	            trigger: 'axis',
	            axisPointer: {
	              type: 'shadow'
	            },
	            textStyle: {
	              fontSize: '10',
	              align: 'left',
	            },
	            position: function (pos, params, el, elRect, size) {
	              var obj = {top: 10};
	              obj[['left', 'right'][+(pos[0] < size.viewSize[0] / 2)]] = 30;
	              return obj;
	            },
	            extraCssText: 'width: 115px'
	          },
	          legend: {
	            //orient:'vertical',
	            data: ['确诊', '疑似', '治愈', '死亡'],
	            right: 110,
	            top: 5,
	            textStyle: {
	              fontSize: 12
	            }
	          },
	          grid: {
	          //   show: true,
	             left: 50,
	          //   right: 30,
	           },
	          xAxis: {
	            name: '时间',
	            data: xdate,
	            nameTextStyle: {
	              fontSize: 12,
	            },
	            axisLabel: {
	              fontSize: 12,
	            },
	          },
	          yAxis: [{
	            name: '人数(确诊、疑似)',
	            type: 'value',
	            nameTextStyle: {
	              fontSize: 12,
	              padding:[0,0,0,20]
	            },

	            axisLabel: {
	              fontSize: 12,
	            },
	          },
	            {
	              name: '人数(治愈、死亡)',
	              type: 'value',


	              nameTextStyle: {
	                fontSize: 12,
	              },

	              axisLabel: {
	                fontSize: 12,
	              },
	            }],
	          axisLabel: {
	            fontSize: 12,
	          },
	          series: [
	            {
	              name: '确诊',
	              type: 'line',
	              smooth: true,
	              data: diagnosenum,
	              yAxisIndex: 0,
	              symbolSize: 6,
	              itemStyle: {
	                normal: {
	                  color: '#ff0000',//拐点颜色
	                  borderColor: '#ff0000',//拐点边框颜色
	                  borderWidth: 2,
	                  lineStyle: {
	                    width: 4,
	                    color: '#ff0000'
	                  },
	                },
	                emphasis: {
	                  color: '#ff0000',
	                  borderWidth: 1.5,
	                },
	              }
	            },
	            {
	              name: '疑似',
	              type: 'line',
	              smooth: true,
	              data: suspectnum,
	              yAxisIndex: 0,
	              symbolSize: 6,
	              connectNulls: true,
	              itemStyle: {
	                normal: {
	                  color: '#e8800a',//拐点颜色
	                  borderColor: '#e8800a',//拐点边框颜色
	                  borderWidth: 2,
	                  lineStyle: {
	                    width: 4,
	                    color: '#e8800a'
	                  },
	                },
	                emphasis: {
	                  color: '#e8800a',
	                  borderWidth: 1.5,
	                },
	              },

	            },
	            {
	              name: '治愈',
	              type: 'line',
	              smooth: true,
	              data: curenum,
	              yAxisIndex: 1,
	              symbolSize: 6,
	              itemStyle: {
	                normal: {
	                  color: '#008ce6',//拐点颜色
	                  borderColor: '#008ce6',//拐点边框颜色
	                  borderWidth: 2,
	                  lineStyle: {
	                    width: 4,
	                    color: '#008ce6'
	                  },
	                },
	                emphasis: {
	                  color: '#008ce6',
	                  borderWidth: 1.5,
	                },
	              },

	            },
	            {
	              name: '死亡',
	              type: 'line',
	              smooth: true,
	              data: deathnum,
	              yAxisIndex: 1,
	              symbolSize: 6,
	              itemStyle: {
	                normal: {
	                  color: '#000000',//拐点颜色
	                  borderColor: '#000000',//拐点边框颜色
	                  borderWidth: 2,
	                  lineStyle: {
	                    width: 4,
	                    color: '#000000'
	                  },
	                },
	                emphasis: {
	                  color: '#000000',
	                  borderWidth: 1.5,
	                },
	              },

	            }

	          ]
	        };
	        chartName.setOption(optioncharts)
	      },
	      error: data => {

	      }
	    })
    }
    function backmap(map) {
      if(map===mapWorld){
      	map.getView().setCenter([0, 0]);
      	map.getView().setZoom(1);
      }else if(map===mapStreet){
		map.getView().setCenter(ol.proj.fromLonLat([112,32]));
      	map.getView().setZoom(5);
	  }else{
      	map.getView().setCenter([-389443.5, 2130511.5]);
      	map.getView().setZoom(3);
      }
      map.getView().setRotation(0);
    }
    function statisticsInfo(){
	$.ajax({
	  async: true,
	  url: 'http://zhongxinzhiyuan.cn:9090/data',
	  data: {},
	  type: 'get',
	  
	  dataType: 'json',
	  success: res => {
          $.ajax({
		  async: true,
		  url: 'http://zhongxinzhiyuan.cn:9090/xinzeng',
		  data: {},
		  type: 'get',
		  
		  dataType: 'json',
		  success: ress => {
            	var results = res[0];
            	if (results.suspect === 0) results.suspect = '待确认';
            	document.getElementById('diagnose').innerHTML=results.diagnose+'例';
            	document.getElementById('current-diagnose').innerHTML=results.currentdiagnose+'例';
             	document.getElementById('suspect').innerHTML=results.suspect+'例';
             	document.getElementById('cure').innerHTML=results.cure+'例';
            	document.getElementById('death').innerHTML=results.death+'例';
            	document.getElementById('serious').innerHTML=results.seriousCount+'例';
            	if(ress.length>0){
            		var adds = ress[0];
	            	document.getElementById('current-diagnose-add').innerHTML=(adds.currentdiagnose>0?'+':(adds.currentdiagnose===0?'':''))+adds.currentdiagnose+'例';
	            	document.getElementById('diagnose-add').innerHTML=(adds.diagnose>0?'+':(adds.diagnose===0?'':''))+adds.diagnose+'例';
	            	document.getElementById('suspect-add').innerHTML=(adds.suspect>0?'+':(adds.suspect===0?'':''))+adds.suspect+'例';
	            	document.getElementById('cure-add').innerHTML=(adds.cure>0?'+':(adds.cure===0?'':''))+adds.cure+'例';
	            	document.getElementById('death-add').innerHTML=(adds.death>0?'+':(adds.death===0?'':''))+adds.death+'例';
	            	document.getElementById('serious-add').innerHTML=(adds.seriousCount>0?'+':(adds.seriousCount===0?'':''))+adds.seriousCount+'例';
            	}else{
            		document.getElementById('current-diagnose-add').innerHTML='0例';
            		document.getElementById('diagnose-add').innerHTML='0例';
	            	document.getElementById('suspect-add').innerHTML='0例';
	            	document.getElementById('cure-add').innerHTML='0例';
	            	document.getElementById('death-add').innerHTML='0例'
	            	document.getElementById('serious-add').innerHTML='0例'
            	}
            	
            }
          })
        },
        error: data => {

        }
      })
    }
    function news(){
    	$.ajax({
	  async: true,
	  url: 'http://zhongxinzhiyuan.cn:9090/news',
	  data: {},
	  type: 'get',
	  
	  dataType: 'json',
	  success: res => {
	
	      	newss = '<span style="color:red;font-weight:bold">【2021-01-14 10:21  国内社区、县市、省级地图开启，世界地图未开启】&nbsp;&nbsp;&nbsp;&nbsp;【最新报道】</span>'
	        news = '<div style="margin-top: 40px;margin-left: 10px;border-left: 10px solid blue;padding-left: 20px;"><h3>新闻报道</h2></div>';
	        res.map(value => {
	          news += "<div class='col-sm-4 alert alert-success' style='height:20vh;overflow:hidden;'><h5><span class='label label-warning'>"+value.provinceName+"</span>"+value.title+"</h5><small><a href='"+value.sourceUrl+"' target='view_frame' class='text-left'><p>【"+value.infoSource+" "+value.date+"】"+value.summary+"</p></a></small></div>";
	          newss += value.date + '&nbsp&nbsp<a href=' + value.sourceUrl + ' target="view_frame">' + value.title + "</a>(来源：" + value.infoSource + ")&nbsp&nbsp&nbsp&nbsp    "
	        })
	        document.getElementById('news').innerHTML = news;
	        document.getElementById('newsss').innerHTML = newss
	      }
    	})
    }
    function foreign(){

	 $.ajax({
	  async: true,
	  url: 'http://zhongxinzhiyuan.cn:9090/guowai',
	  data: {},
	  type: 'get',
	  dataType: 'json',
	  success: res => {
      	var area = ''
      	res.sort(function (a, b) { return b.currentdiagnose - a.currentdiagnose});
        res.map((value,index) => {
	          var foreignStatistics='';
	          if (value.label === 1) {
	           		document.getElementById('sum-forgeign').innerHTML='各国统计('+res.length+'个国家，现存确诊'+value.currentdiagnose+'例，累计确诊'+value.diagnose+'例，治愈'+value.cure+'例，死亡'+value.death+'例）'
	          } else {
		            area+='<tr><td>'+(index)+'</td><td>'+value.continents+'</td><td>'+value.name+'</td><td>'+value.currentdiagnose +'</td><td>'+value.diagnose+'</td><td>'+value.cure+'</td><td>'+value.death+'</td></tr>'
		          }
        })
        document.getElementById('table-tr').innerHTML =area
      }
    	})
    }
    function provienceTop(){

	$.ajax({
	  async: true,
	  url: 'http://zhongxinzhiyuan.cn:9090/provience_top10',
	  data: {},
	  type: 'get',
	  
	  dataType: 'json',
	  success: res => {
      	var area = ''
      	res.sort(function (a, b) { return b.currentdiagnose - a.currentdiagnose});
        res.map((value,index) => {
	        area+='<tr><td>'+(index+1)+'</td><td>'+value.name+'</td><td>'+value.currentdiagnose +'</td><td>'+value.diagnose+'</td><td>'+value.cure+'</td><td>'+value.death+'</td></tr>'   
        })
        document.getElementById('table-provience').innerHTML =area
      }
    	})
    }
    function cityTop(){

	 $.ajax({
	  async: true,
	  url: 'http://zhongxinzhiyuan.cn:9090/city_top50',
	  data: {},
	  type: 'get',
	  
	  dataType: 'json',
	  success: res => {
      	var area = ''
      	res.sort(function (a, b) { return b.currentdiagnose - a.currentdiagnose});
        res.map((value,index) => {
	        area+='<tr><td>'+(index+1)+'</td><td>'+value.name+'</td><td>'+value.currentdiagnose +'</td><td>'+value.diagnose+'</td><td>'+value.cure+'</td><td>'+value.death+'</td></tr>'   
        })
        document.getElementById('table-city').innerHTML =area
      }
    	})
    }
	function getViewCount(){
    	$.ajax({
		  async: true,
		  url: 'http://zhongxinzhiyuan.cn:9090/getviewcount',
		  data: {},
		  type: 'get',
		  
		  dataType: 'json',
		  success: res => {
			document.getElementById('view-count').innerHTML ='&nbsp;&nbsp;<span class="glyphicon glyphicon-eye-open"></span><small>'+res[0].count+'次浏览</small>'

		  }
    	})
    }
    function updateViewCount(){
    	$.ajax({
		  async: true,
		  url: 'http://zhongxinzhiyuan.cn:9090/updateviewcount',
		  data: {},
		  type: 'put',
		  
		  dataType: 'json',
		  success: res => {
		  

		  }
    	})
    }
	function getComeOnCount(){
    	$.ajax({
		  async: true,
		  url: 'http://zhongxinzhiyuan.cn:9090/getcomeoncount',
		  data: {},
		  type: 'get',
		  
		  dataType: 'json',
		  success: res => {
			document.getElementById('come-on').innerHTML =res[0].count

		  }
    	})		
	}
	function clickComeOn(){
		document.getElementById('come-on').innerHTML =parseInt(document.getElementById('come-on').innerText)+1;
		$.ajax({
		  async: true,
		  url: 'http://zhongxinzhiyuan.cn:9090/updatecomeoncount',
		  data: {},
		  type: 'put',
		  
		  dataType: 'json',
		  success: res => {
		  

		  }
    	})
	}
	
</script>
</body>
</html>
]]></content>
  </entry>
  <entry>
    <title>ArcGIS知乎站内搜索关键词统计Top50</title>
    <url>/html/ArcGIS%E7%9F%A5%E4%B9%8E%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2%E5%85%B3%E9%94%AE%E8%AF%8D%E7%BB%9F%E8%AE%A1Top50.html</url>
    <content><![CDATA[<span id="more"></span>
<html>
<head lang="en">
    <meta charset="UTF-8">
    <title>ArcGIS知乎站内搜索关键词统计Top50</title>
    <!-- 加载c3.css文件-->
    <link href="http://c3js.org/css/c3-b03125fa.css" rel="stylesheet" type="text/css">

    <!-- 加载d3.js和c3.js -->
    <script src="http://c3js.org/js/d3-3.5.6.min-77adef17.js" charset="utf-8"></script>
    <script src="http://c3js.org/js/c3.min-4c5bef8f.js"></script>
	<SCRIPT language=JavaScript> function password() { var testV = 1; var pass1 = prompt('请输入密码:',''); while (testV < 3) { if (!pass1) history.go(-1); if (pass1 == "123") { alert('密码正确!'); break; } testV+=-1; var pass1 = prompt('密码错误!请重新输入:'); } if (pass1!="password" & testV ==3) history.go(-1); return " "; } document.write(password()); </SCRIPT>
</head>
<body>

<!--准备绑定图表的元素-->
<div id="chart" style='height:1100px'></div>
</body>
<script>
var chart = c3.generate({
    data: {
        x: '关键词',
//        xFormat: '%Y%m%d', // 'xFormat' can be used as custom format of 'x'
        columns: [
['关键词', 'arcgis', 'for', 'server', 'api', 'portal', 'ios', 'to', 'javascript', 'runtime', 'pro', 'js', 'engine', 'the', 'android', 'failed', 'web', 'error', '安装', 'arcengine', 'linux', 'not', 'python', '10.5', 'data', 'sdk', 'gp', 'is', '天地图', 'create', 'arcmap', 'gis', 'desktop', 'service', 'arcpy', 'cityengine', 'java', 'envi', 'enterprise', '3d', 'sde', '三维', '10.2.5', 'in', '切片', 'arcsde', '矢量切片', 'cad', 'webgis', 'geoevent', 'a'],
//            ['x', '20130101', '20130102', '20130103', '20130104', '20130105', '20130106'],
['次数', '2476', '817', '530', '480', '375', '286', '274', '262', '251', '244', '241', '220', '203', '200', '159', '134', '132', '127', '124', '118', '117', '117', '113', '108', '93', '90', '87', '80', '80', '79', '76', '76', '75', '74', '71', '69', '68', '66', '65', '62', '61', '60', '59', '59', '56', '55', '55', '54', '53', '50'],
        ],
		type:'bar',
		labels:{
			format:{
			次数: d3.format(''),
			}
		}
    },
    axis: {
		rotated: true,
        x: {
            type: 'category',
            
        }
    }
});
</script>

</html>]]></content>
  </entry>
</search>
